{"version":3,"sources":["components/enums/Month.ts","components/theme.ts","components/loadprofile/objects/HourlyLoadProfile.ts","components/loadprofile/objects/DailyLoadProfile.ts","components/toolbar/Toolbar.tsx","objects/common/BillingPeriod.ts","components/loadprofile/objects/LoadProfile_Raw.ts","components/loadprofile/objects/LoadProfile.ts","components/loadprofile/objects/others/CoincidentPeak.ts","components/loadprofile/objects/MonthlyLoadProfile.ts","objects/common/Stack.ts","components/loadprofile/LoadProfileContextProvider.tsx","components/toolbar/StyledToggleButton.tsx","components/toolbar/use-styles.ts","components/loadprofile/LoadProfileStorage.ts","components/toolbar/index.ts","components/filesdrawer/use-styles.ts","components/filesdrawer/StyledAccordion.tsx","components/filesdrawer/FileCard.tsx","components/errors/InvalidFileError.ts","objects/common/utils/FileUtil.ts","objects/common/enums/Feeder.ts","objects/common/enums/Transformer.ts","objects/common/enums/Substation.ts","objects/common/enums/MeteringPoints.ts","objects/common/utils/ExcelUtil.ts","components/loadprofile/ExcelParser.ts","objects/monthly_interruption/MonthlyInterruptionUtil.ts","components/loadprofile/LoadProfileParser.tsx","components/filesdrawer/FileDrop.tsx","components/filesdrawer/accordions/LoadProfileAccordion.tsx","objects/common/GeneralUtil.ts","objects/monthly_interruption/MonthlyInterruptionExcelUtil.ts","objects/power_substation/PowerSubstationUtil.ts","components/monthly_interruption/MonthlyInterruptionParser.tsx","objects/monthly_interruption/MonthlyInterruptionItem.ts","objects/monthly_interruption/MonthlyInterruption.ts","objects/monthly_interruption/MonthlyMonthlyInterruption.ts","components/monthly_interruption/MonthlyInterruptionContextProvider.tsx","components/filesdrawer/accordions/MonthlyInterruptionAccordion.tsx","objects/power_substation/PowerSubstationExcelUtil.ts","components/settings/Settings.tsx","components/common/components/textfields/FormSelectField.tsx","components/power_substation/PowerSubstationParser.tsx","objects/power_substation/PowerSubstationItem.ts","objects/power_substation/PowerSubstation.ts","objects/power_substation/MonthlyPowerSubstation.ts","components/power_substation/PowerSubstationContextProvider.tsx","components/filesdrawer/accordions/PowerSubstationAccordion.tsx","components/filesdrawer/index.ts","components/filesdrawer/FilesDrawer.tsx","components/settings/use-styles.ts","components/settings/tabpanels/SettingsPanel.tsx","components/common/components/textfields/FormTextField.tsx","components/settings/tabpanels/LoadProfileSettingsPanel.tsx","components/settings/tabpanels/MonthlyInterruptionPanel.tsx","components/common/components/tabs/VerticalTab.tsx","components/common/components/tabs/HorizontalTab.tsx","components/settings/tabpanels/PowerSubstationPanel.tsx","components/settings/index.ts","components/maincontent/loadprofile/data/useTreeItemStyles.ts","components/maincontent/loadprofile/data/StyledTreeItem.tsx","components/maincontent/loadprofile/data/DetailsTree.tsx","components/maincontent/loadprofile/data/HourTreeItem.tsx","components/maincontent/loadprofile/data/DayTreeItem.tsx","components/maincontent/loadprofile/data/MonthlyTree.tsx","components/loadprofile/ExcelGenerator.ts","components/maincontent/loadprofile/LoadProfileContent.tsx","components/maincontent/loadprofile/data/MonthlyCard.tsx","components/maincontent/loadprofile/graph/LoadProfileGraph.tsx","components/maincontent/loadprofile/LoadProfileTabPanel.tsx","objects/feeder_and_demand/FeederAndDemandItem.ts","objects/feeder_and_demand/FeederAndDemand.ts","objects/feeder_and_demand/MonthlyFeederAndDemand.ts","components/feeder_and_demand/FeederAndDemandContextProvider.tsx","components/maincontent/data/useTreeItemStyles.ts","components/common/components/StyledTreeItem.tsx","components/maincontent/feeder_demand/FeederAndDemandContent.tsx","components/maincontent/data/FeederTreeItem.tsx","components/maincontent/data/MonthlyFeederTree.tsx","components/maincontent/data/MonthlyFeederCard.tsx","components/maincontent/MainContent.tsx","components/maincontent/feeder_demand/FeederAndDemandContentRoot.tsx","components/dashboard/Dashboard.tsx","components/dashboard/index.ts","components/App.tsx","components/index.ts","index.js"],"names":["Month","theme","createMuiTheme","palette","primary","main","dark","contrastText","secondary","text","background","default","HourlyLoadProfile","hour","kwdelSet","this","kwdel","kwhdel","fileName","push","filter","length","total","DailyLoadProfile","date","hourlyLoadProfiles","max","sum","buildHourlyLoadProfiles","Array","keys","map","rawData","addKwdel","forEach","hourloadProfile","removeKwdel","maxKwdel","kwdelSum","kwhdelSum","hourlyLoadProfile","getTotalKwdel","getRawTotalKwhdel","ToggleValues","BillingPeriod","month","year","startDate","enddDate","getStartDate","getEndDate","Math","round","getTime","startMonth","startYear","moment","toDate","billingPeriod","day","minute","billingMonth","LoadProfile_Raw","meteringPoint","row","Date","setDate","getDate","getMonth","getFullYear","getBillingMonth","LoadProfile","dailyLoadProfiles","Map","dateString","has","set","get","addLoadProfileData","dailyLoadProfile","removeLoadProfileData","maxHour","maxDate","values","dailyMax","dailyKwdelSum","dailyKwhdelSum","console","log","toLocaleDateString","CoincidentPeak","MonthlyLoadProfile","loadProfiles","dateStrings","coincidentPeak","nonCoincidentPeak","diversityFactor","loadProfilesMax","loadProfilesSum","totalLoadpRofile","chartData","Set","key","add","meteringPoints","loadProfile","removeLoadPRofileData","getTotalKwhdel","dateKey","obj","resetData","dailyLp","genMaxAndSum","hourlyLp","extractDataThenAddToTotal","extractDailyLoadProfileTotalKwdelThenAddToData","delete","dlp","hlp","getRawTotal","info","coincidental","nonCoincidental","totalLoadProfile","hourlyLoadpRofiles","Stack","stack","data","top","element","isEmpty","pop","LoadProfileContext","createContext","updateLoadProfiles","rawDatas","monthlyLoadProfiles","working","deleteLoadProfiles","deleteLoadProfileInfo","LoadProfileContextProvider","props","children","useState","setMonthlyLoadProfiles","buffer","setBuffer","setWorking","useEffect","newBuffer","Promise","resolve","reject","newMonthlyLoadProfiles","addData","mlp","initOtherDetails","then","result","mpl","removeData","Provider","value","prevBuffer","newbuffer","deleteLaodProfileInfo","useStyles","makeStyles","root","border","borderRadius","backgroundColor","color","selected","StyledToggleButton","others","classes","ToggleButton","width","height","zIndex","drawer","container","display","flexDirection","justifyContent","alignItems","toggleButtonsContainer","otherButtonsContainer","LoadProfileStorageKey","Toolbar","onFilesToggled","onSettingsToggled","onSettingsUntoggled","onFilesUntoggled","FILES","toggledButton","setToggledButton","NONE","otherToggledButton","setOtherToggledButton","AppBar","elevation","className","position","Box","ToggleButtonGroup","onChange","event","newToggle","method","params","prevToggled","exclusive","Folder","SETTINGS","createStyles","flexShrink","drawerPaper","borderLeft","divider","borderRight","drawerHeader","padding","spacing","mixins","toolbar","content","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","accordion","boxShadow","borderBottom","margin","expanded","accordionSummary","marginBottom","minHeight","accordionTitle","fontSize","asdf","accordionDetails","StyledAccordion","expandedPanel","onPanelChange","panelName","title","render","Accordion","square","newExpanded","AccordionSummary","expandIcon","ExpandMore","Typography","AccordionDetails","cardStyles","mobileStepper","maxWidth","boxSizing","paper","shape","overflowWrap","wordWrap","filename","progress_text","alignSelf","gap","progress_content","action","button","textTransform","error_container","error_text","whiteSpace","FileCard","file","progress","progressInfo","errors","onRemoveFile","openError","setOpenError","Fragment","name","LinearProgress","variant","Button","size","startIcon","ErrorOutline","onClick","Dialog","open","onClose","DialogTitle","Divider","DialogContent","overflow","error","index","component","LoadProfileStorage","loadSettings","kwdelCol","Number","localStorage","getItem","KWDEL","dateCol","DATE","timeCol","TIME","dateFormat","DATE_FORMAT","timeFormat","TIME_FORMAT","kwhdelCol","KWHDEL","saveSettings","settings","setItem","String","toString","InvalidFileError","message","Error","a","fileExtension","split","parameteres","fileTypeSplit","reader","FileReader","onload","Uint8Array","target","workbook","XLSX","read","type","cellDates","readAsArrayBuffer","Feeder","FileUtil","extractWorkbookFromFile","Transformer","serialNumber","power","HYOSUNG_20MVA","SHIHLIN_20MVA","SHIHLIN_10MVVA","SHIHLIN_5MVA","NANJING_20MVA","PRIME_MEIDEN_10MVA","NEW_KOREA_10MVA","NEW_KOREA_5MVA","CHANGZHOU_10MVA","SHENDA_25MVA","SubstationItem","transformer","feeders","Substation","substationItems","PUTIK","GUIWAN","TUMAGA","ARENA_BLANCO","PRESA","TETUAN","MERCEDES","NORTHSIDE","ZAMPEN","SANJOSE_GUSU","SAN_JOSE","CALARIAN","BALIWASAN","DEDICATED_LINE","SANGALI","CULIANAN","CURUAN","FISHING_PORT","AYALA","TALISAYAN","LABUAN","RECODO","SINUNUC","CABATANGAN","PASONANCA","SAN_ROQUE","CAMANCHILI","ACLEM","GOVERNOR_ALVAREZ","VETERANS_AVENUE","NUNEZ","STA_CATALINA","RIO_HONDO","GUARDIA_NACIONAL","CAMPANER","MeteringPoint","substations","substation","substationItem","toUpperCase","MF3MPITZAMC01","MF3MPITZAMC02","MF3MPITZAMC03","MF3MPITZAMC04","MF3MPITZAMC05","MF3MPITZAMC06","MF3MPITZAMC07","ExcelUtil","cell","x","t","v","w","r","isValid","strict","number","i","setTimeout","calculatePercent","extractCells","worksheet","sheetName","kwdelAddress","c","dateAddress","timeAddress","kwhdelAddress","kwdelRef","utils","encode_cell","dateRef","timeRef","kwhdelRef","kwdelCell","timeCell","dateCell","kwhdelCell","extractDataFromRow","rowData","kwdelCellData","extractNumber","kwhdelCellData","dateCellData","extractDate","timeCellData","Boolean","concat","getHours","getMinutes","extractLoadProfileRawFromWorkbook","MonthlyInterruptionSettingsKey","handleProgressUpdate","lp_rawDatas","SheetNames","exists","Sheets","range","decode_range","e","s","totalRows","percent","toFixed","cells","LoadProfileParser","onFileParsed","setProgress","setsProgressInfo","setErrors","setMeteringPoints","catch","dropZone","cursor","dropZone_focused","dropZone_content","flexWrap","dropZoneText","fontWeight","FileDrop","helperText","onFileDrop","onDragEnter","onDragLeave","onDragOver","dragging","setDragging","handleDragEnter","handleDragLeave","onDrop","getRootProps","getInputProps","onMouseEnter","onMouseLeave","clsx","gridGap","marginTop","LoadProfileAccordion","files","setFiles","loadProfileContext","useContext","prevMap","duplicate","handleFileParsed","lpRawDatas","handleRemoveFile","findFeeder","feederText","trim","Object","feeder","getMonths","months","monthNum","isNaN","getYears","years","yearNow","MonthlyInterruptionUtil","freeze","createRawDataObject","getDay","DURATION","durationCol","FEEDER","feederCol","extractDataFromCells","rowCells","feederCellData","extractText","durationCellData","feederAddress","durationAddress","feederRef","durationRef","PowerSubstationSettingsKey","MonthlyInterruptionExcelUtil","extractRawDatasFromWorkbook","progressCallback","monthlyInterruptionRawDatas","MonthlyInterruptionItem","MonthlyInterruption","items","addDuration","MonthlyMonthlyInterruption","monthlyMonthlyInterruption","monthlyInterruptions","addRawData","MonthlyIterruptionContext","addNewRawData","addUpdateCallback","MonthlyInterruptionContextProvider","setMonthlyInterruptions","updateCallbacks","setUpdateCallbacks","updateMonthlyInterruptions","newMonthlyInterruptions","callback","update","rawdatas","callBack","prevCallbacks","MonthlyInterruptionAccordion","monthlyInterruptionContext","MonthlyInterruptionParser","PowerSubstationUtil","DEMAND","demandKwhrCol","KWHRENERGY","kwhrEnergyCol","KVARHRENERGY","kvarhrEnergyCol","createRawData","kwhrEnergy","kvarhrEnergy","demandKwhr","bililngPeriod","kwhrEnergyCellData","demandKwhrCellData","kvarhrEnergyCelLData","kwhrEnergyAddress","demandKwhrAddress","kvarhrEnergyAddress","kwhrEnergyRef","kvarhrEnergyRef","demandKwhrRef","SettingsTabs","PowerSubstationExcelUtil","BootstrapInput","withStyles","input","fontFamily","join","borderColor","InputBase","FormSelectField","label","FormControl","InputLabel","id","Select","labelId","item","MenuItem","form","billingYear","flex","openBillingPeriodDialog","setOpenBillingPeriodDialog","setBillingYear","setBillingMonth","setBillingPeriod","bp","DialogContentText","onSubmit","preventDefault","DialogActions","PowerSubstationItem","PowerSubstation","MonthlyPowerSubstation","monthlyPowerSubstation","powerSubstations","PowerSubstationContext","addNewRawDatas","PowerSubstationContextProvider","setMonthlyPowerSubstations","updatecallbacks","updateMonhlyPowerSubstation","newMonthlyPowerSubstations","doSomething","powerSubstationContext","PowerSubstationParser","FilesDrawer","setExpandedPanel","handlePanelChange","newExpandedPanel","Drawer","anchor","PowerSubstationAccordion","left","title_div","tabs","flexGrow","tab_panel","textFieldContainer","actionContainer","LoadProfileSettingsPanel","focused","FormTextField","placeholder","helpertext","limitZero","TextField","InputProps","disableUnderline","setKwdel","khwdel","setKwhdel","time","setTime","setDateFormat","setTimeFormat","lpSettings","SettingsPanel","alert","MonthlyInterruptionPanel","setDurationCol","setDateCol","setFeederCol","tab","textAlign","tab_selected","tab_wrapper","VerticalTab","Tab","wrapper","minWidth","lineHeight","HorizontalTab","PowerSubstationPanel","demandCol","setDemandCol","setKwhrEnergyCol","setKvarhrEnergyCol","TabPanel","other","role","hidden","aria-labelledby","p","Settings","LOADPROFILE_TAB","selectedTab","setSelectedTab","Tabs","orientation","centered","indicatorColor","newTab","MONTHLYINTERRUPTION_TAB","POWERSUBSTATION_TAB","useTreeItemStyles","paddingLeft","hover","borderTopRightRadius","borderBottomRightRadius","paddingRight","typography","fontWeightMedium","fontWeightRegular","group","labelRoot","labelIcon","marginRight","labelText","StyledTreeItem","LabelIcon","labelInfo","bgColor","TreeItem","style","DetailsTree","monthlyLoadProfile","TreeView","defaultExpanded","defaultCollapseIcon","ArrowDownward","defaultExpandIcon","ArrowRight","defaultEndIcon","nodeId","TrendingUp","Functions","lpMax","lpSum","labelContent","HourTreeItem","treeItemClasses","header","getDailyLoadProfile","DayTree","Today","dayTree","MonthlyTree","CalendarToday","from","DayTreeItem","generateMonthlyLoadProfileXlsx","DataTab","book_new","worksheetName","worksheetData","start","end","generateSheetData","aoa_to_sheet","book_append_sheet","writeFile","monthlyCard_root","monthlyCard_paper","monthlyCard_paperAction","monthlyCard_paperContent","downloadBtn","MonthlyCard","generateLoadProfileExcel","GetAppRounded","graphContent","LoadProfileGraph","Paper","factory","scaleBand","showGrid","valueField","argumentField","monthlyLoadpRofile","loadProfileContent_tabPanel","loadProfileContent_root","LoadProfileContent","DATA","GRAPH","loadProfileContent_Header","loadProfileContent_Title","loadProfileContent_contentWrapper","loadProfileContent_content","LoadProfileTabPanel","FeederAndDemandItem","totalOperatingHours","feederInput","demand","minutes","hours","operatingHours","powerFactor","loadFactor","cos","atan","FeederAndDemand","getTotalDays","setMonthlyInterruptionData","setPowerSubstationData","MonthlyFeederAndDemand","monthlyFeederAndDemand","feederAndDemands","trace","addMonthlyInterruptionData","addPowerSubstationData","feederAndDemand","recalculateData","tempMfd","FeederAndDemandContext","FeederAndDemandContextProvider","monthlyInterruptionCotnext","setMonthlyFeederAndDemand","addMonthlyPowerSubstationData","mfd","mps","ps","addMonthlyMonthlyInterruptionData","mmi","mi","onMonthlyPowerSubstationUpdated","onMonthlyInterruptionUpdated","newMonthlyFeederAndDemand","initValues","updateMonthlyFeederAndDemand","numbers","FederTreeitem","feederAndDemandItem","MonthlyFeederTree","FeederTreeItem","Title","Place","MonthlyFeederCard","ContentTabs","FeederAndDemandContent","feederAndDemandContent_root","feederAndDemand_header","feederAndDemand_title","feederAndDemand_contentContainer","feederAndDemandContent","FeederAndDemandContentRoot","feederAndDemandContext","mainContent_content","maincontent_root","tabs_container","MainContent","LOAD_PROFILE","POWER_BILL","FEEDERDEMAND_OUTAGED","SUBSTATION_LOSS","POWER_SUBSTATION","dashboard_root","dashboard_content","Dashboard","filesDrawerClasses","filesDrawerStyles","openFilesDrawer","setOpenFilesDrawer","openSettings","setOpenSettings","App","ThemeProvider","CssBaseline","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b61127c5.chunk.js","sourcesContent":["enum Month {\r\n  JANUARY,\r\n  FEBRUARY,\r\n  MARCH,\r\n  APRIL,\r\n  MAY,\r\n  JUNE,\r\n  JULY,\r\n  AUGUST,\r\n  SEPTEMBER,\r\n  OCTOBER,\r\n  NOVEMBER,\r\n  DECEMBER,\r\n}\r\n\r\nexport default Month;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#45aaf2\",\r\n      dark: \"#2d98da\",\r\n      contrastText: \"white\",\r\n    },\r\n    secondary: {\r\n      main: \"#fc5c65\",\r\n      dark: \"#eb3b5a\",\r\n      contrastText: \"white\",\r\n    },\r\n    text: {\r\n      primary: \"#778ca3\",\r\n      secondary: \"#B4BEC8\",\r\n    },\r\n    background: {\r\n      default: \"#F5F7F9\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","class HourlyLoadProfile {\r\n  hour: number;\r\n  kwdelSet: { fileName: string; kwdel: number; kwhdel: number }[];\r\n\r\n  constructor(hour: number) {\r\n    this.hour = hour;\r\n    this.kwdelSet = [];\r\n  }\r\n\r\n  addKwdel(kwdel: number, kwhdel: number, fileName: string): void {\r\n    this.kwdelSet.push({ fileName, kwdel, kwhdel });\r\n  }\r\n\r\n  removeKwdel(fileName: string) {\r\n    this.kwdelSet = this.kwdelSet.filter(\r\n      (kwdel) => kwdel.fileName !== fileName\r\n    );\r\n  }\r\n\r\n  getTotalKwhdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwhdel;\r\n    }\r\n    return total / this.kwdelSet.length;\r\n  }\r\n\r\n  getRawTotalKwhdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwhdel;\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalKwdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwdel;\r\n    }\r\n    return total / this.kwdelSet.length;\r\n  }\r\n\r\n  getRawTotal(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwdel;\r\n    }\r\n    return total;\r\n  }\r\n}\r\n\r\nexport default HourlyLoadProfile;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport HourlyLoadProfile from \"./HourlyLoadProfile\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\n\r\nclass DailyLoadProfile {\r\n  date: Date;\r\n  hourlyLoadProfiles: HourlyLoadProfile[];\r\n  max: { kwdel: number; hour: number };\r\n  sum: { kwdel: number; kwhdel: number };\r\n\r\n  constructor(date: Date) {\r\n    this.date = date;\r\n    this.hourlyLoadProfiles = this.buildHourlyLoadProfiles();\r\n    this.max = { kwdel: 0, hour: 0 };\r\n    this.sum = { kwdel: 0, kwhdel: 0 };\r\n  }\r\n\r\n  private buildHourlyLoadProfiles() {\r\n    return [...Array(24).keys()].map((hour) => {\r\n      return new HourlyLoadProfile(hour);\r\n    });\r\n  }\r\n\r\n  addLoadProfileData(rawData: LoadProfile_Raw) {\r\n    this.hourlyLoadProfiles[rawData.hour].addKwdel(\r\n      rawData.kwdel,\r\n      rawData.kwhdel,\r\n      rawData.fileName\r\n    );\r\n  }\r\n\r\n  removeLoadProfileData(fileName: string) {\r\n    this.hourlyLoadProfiles.forEach((hourloadProfile) => {\r\n      hourloadProfile.removeKwdel(fileName);\r\n    });\r\n  }\r\n\r\n  genMaxAndSum() {\r\n    let maxKwdel = 0;\r\n    let hour = 1;\r\n    let kwdelSum = 0;\r\n    let kwhdelSum = 0;\r\n    for (let hourlyLoadProfile of this.hourlyLoadProfiles) {\r\n      let kwdel = hourlyLoadProfile.getTotalKwdel();\r\n      kwdelSum += kwdel;\r\n      kwhdelSum += hourlyLoadProfile.getRawTotalKwhdel();\r\n      if (kwdel > maxKwdel) {\r\n        hour = hourlyLoadProfile.hour;\r\n        maxKwdel = kwdel;\r\n      }\r\n    }\r\n\r\n    this.max = { kwdel: maxKwdel, hour };\r\n    this.sum = { kwdel: kwdelSum, kwhdel: kwhdelSum };\r\n    return { max: this.max, sum: this.sum };\r\n  }\r\n}\r\n\r\nexport default DailyLoadProfile;\r\n","import { AppBar, Box } from \"@material-ui/core\";\r\nimport { Folder, Settings } from \"@material-ui/icons\";\r\nimport { ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport StyledToggleButton from \"./StyledToggleButton\";\r\n\r\nimport useStyles from \"./use-styles\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\ntype ToolbarProps = {\r\n  onSettingsToggled: () => void;\r\n  onSettingsUntoggled: () => void;\r\n  onFilesToggled: () => void;\r\n  onFilesUntoggled: () => void;\r\n};\r\n\r\nenum ToggleValues {\r\n  FILES = \"files\",\r\n  SETTINGS = \"settings\",\r\n  NONE = \"\",\r\n}\r\n\r\nconst Toolbar: React.FC<ToolbarProps> = ({\r\n  onFilesToggled,\r\n  onSettingsToggled,\r\n  onSettingsUntoggled,\r\n  onFilesUntoggled,\r\n  ...others\r\n}) => {\r\n  const [toggledButton, setToggledButton] = useState<string>(\r\n    ToggleValues.FILES\r\n  );\r\n  const [otherToggledButton, setOtherToggledButton] = useState<string>(\r\n    ToggleValues.NONE\r\n  );\r\n\r\n  function handleToggleChange(\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newToggle: string\r\n  ) {\r\n    console.log({\r\n      method: \"handleToggleChange()\",\r\n      params: { newToggle },\r\n    });\r\n\r\n    const prevToggled = toggledButton;\r\n    setToggledButton(newToggle);\r\n    if (newToggle === ToggleValues.FILES) {\r\n      onFilesToggled();\r\n    } else if (prevToggled === ToggleValues.FILES) {\r\n      onFilesUntoggled();\r\n    }\r\n  }\r\n\r\n  function handleOtherToggleChange(\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newToggle: string\r\n  ) {\r\n    console.log({\r\n      method: \"handleOtherToggleChange()\",\r\n      params: { newToggle },\r\n    });\r\n\r\n    const prevToggled = otherToggledButton;\r\n    setOtherToggledButton(newToggle);\r\n    if (newToggle === ToggleValues.SETTINGS) {\r\n      onSettingsToggled();\r\n    } else if (prevToggled === ToggleValues.SETTINGS) {\r\n      onSettingsUntoggled();\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar\r\n      elevation={4}\r\n      className={classes.root}\r\n      position=\"static\"\r\n      color=\"inherit\"\r\n    >\r\n      <Box className={classes.container}>\r\n        <Box className={classes.toggleButtonsContainer}>\r\n          <ToggleButtonGroup\r\n            onChange={handleToggleChange}\r\n            value={toggledButton}\r\n            exclusive\r\n          >\r\n            <StyledToggleButton value={ToggleValues.FILES}>\r\n              <Folder />\r\n            </StyledToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box className={classes.otherButtonsContainer}>\r\n          <ToggleButtonGroup\r\n            onChange={handleOtherToggleChange}\r\n            value={otherToggledButton}\r\n            exclusive\r\n          >\r\n            <StyledToggleButton value={ToggleValues.SETTINGS}>\r\n              <Settings />\r\n            </StyledToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import moment from \"moment\";\r\nimport { Month } from \"../../components/enums\";\r\n\r\nclass BillingPeriod {\r\n  month: number;\r\n  year: number;\r\n  startDate: Date;\r\n  enddDate: Date;\r\n\r\n  constructor(month: number, year: number) {\r\n    this.month = month;\r\n    this.year = year;\r\n    this.startDate = this.getStartDate();\r\n    this.enddDate = this.getEndDate();\r\n  }\r\n\r\n  static getBillingMonth(\r\n    month: number,\r\n    day: number,\r\n    minute: number = 1,\r\n    hour: number = 0\r\n  ) {\r\n    let billingMonth = month;\r\n    if (day >= 26) {\r\n      if (!(hour === 0 && minute === 0 && day === 26)) {\r\n        billingMonth = ++billingMonth % 12;\r\n        if (billingMonth === 0) {\r\n          billingMonth = 12;\r\n        }\r\n      }\r\n    }\r\n    return billingMonth;\r\n  }\r\n\r\n  getTotalDays() {\r\n    return Math.round(\r\n      (this.enddDate.getTime() - this.startDate.getTime()) /\r\n        (1000 * 60 * 60 * 24)\r\n    );\r\n  }\r\n\r\n  private getStartDate() {\r\n    let startMonth = this.month === 1 ? 12 : this.month - 1;\r\n    let startYear = this.month === 1 ? this.year - 1 : this.year;\r\n    return moment(`${startMonth}/26/${startYear}`, \"MM/DD/YYYY\").toDate();\r\n  }\r\n\r\n  private getEndDate() {\r\n    return moment(`${this.month}/25/${this.year}`, \"MM/DD/YYYY\").toDate();\r\n  }\r\n\r\n  equalsTo(billingPeriod: BillingPeriod): boolean {\r\n    if (\r\n      this.month === null ||\r\n      billingPeriod == null ||\r\n      billingPeriod.month === null\r\n    ) {\r\n      return false;\r\n    }\r\n    return (\r\n      this.month === billingPeriod.month && this.year === billingPeriod.year\r\n    );\r\n  }\r\n\r\n  toString() {\r\n    return `${Month[this.month - 1]} ${this.year}`;\r\n  }\r\n}\r\n\r\nexport default BillingPeriod;\r\n","import BillingPeriod from \"../../../objects/common/BillingPeriod\";\r\nimport { Month } from \"../../enums\";\r\n\r\nclass LoadProfile_Raw {\r\n  kwdel: number;\r\n  kwhdel: number;\r\n  hour: number;\r\n  day: number;\r\n  month: Month;\r\n  year: number;\r\n  minute: number;\r\n  meteringPoint: string;\r\n  row: number;\r\n  billingPeriod: BillingPeriod;\r\n  fileName: string;\r\n\r\n  constructor(\r\n    kwdel: number,\r\n    kwhdel: number,\r\n    day: number,\r\n    month: Month,\r\n    year: number,\r\n    hour: number,\r\n    minute: number,\r\n    meteringPoint: string,\r\n    row: number,\r\n    fileName: string = \"\"\r\n  ) {\r\n    this.kwdel = kwdel;\r\n    this.kwhdel = kwhdel;\r\n    this.day = day;\r\n    this.hour = hour;\r\n    this.month = month;\r\n    this.year = year;\r\n    this.minute = minute;\r\n    this.meteringPoint = meteringPoint;\r\n    this.row = row;\r\n    this.fileName = fileName;\r\n    if (this.hour === 0 && this.minute === 0) {\r\n      this.hour = 23;\r\n      this.minute = 59;\r\n      if (this.day - 1 <= 0) {\r\n        let date = new Date(`${this.year}/${this.month}/${this.day}`);\r\n        date.setDate(date.getDate() - 1);\r\n        this.day = date.getDate();\r\n        this.month = date.getMonth() + 1;\r\n        this.year = date.getFullYear();\r\n      } else {\r\n        this.day--;\r\n      }\r\n    }\r\n    let billingMonth = BillingPeriod.getBillingMonth(\r\n      this.month,\r\n      this.day,\r\n      this.hour,\r\n      this.minute\r\n    );\r\n\r\n    this.billingPeriod = new BillingPeriod(billingMonth, this.year);\r\n\r\n    if (this.minute === 0) {\r\n      this.hour--;\r\n      if (this.hour < 0) {\r\n        this.hour = 23;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default LoadProfile_Raw;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport DailyLoadProfile from \"./DailyLoadProfile\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\n\r\nclass LoadProfile {\r\n  meteringPoint: string;\r\n  dailyLoadProfiles: Map<string, DailyLoadProfile>;\r\n  max: LoadProfileMax;\r\n  sum: LoadProfileSum;\r\n\r\n  constructor(meteringPoint: string) {\r\n    this.meteringPoint = meteringPoint;\r\n    this.dailyLoadProfiles = new Map();\r\n    this.max = { kwdel: 0, hour: 1, meteringPoint: \"\", date: new Date() };\r\n    this.sum = { kwdel: 0, kwhdel: 0, meteringPoint: this.meteringPoint };\r\n  }\r\n\r\n  addLoadProfileData(rawData: LoadProfile_Raw, dateString: string) {\r\n    if (!this.dailyLoadProfiles.has(dateString)) {\r\n      this.dailyLoadProfiles.set(\r\n        dateString,\r\n        new DailyLoadProfile(new Date(dateString))\r\n      );\r\n    }\r\n    this.dailyLoadProfiles.get(dateString)?.addLoadProfileData(rawData);\r\n  }\r\n\r\n  removeLoadPRofileData(fileName: string) {\r\n    this.dailyLoadProfiles.forEach((dailyLoadProfile) => {\r\n      dailyLoadProfile.removeLoadProfileData(fileName);\r\n    });\r\n  }\r\n\r\n  getDailyLoadProfile(dateString: string): DailyLoadProfile {\r\n    return this.dailyLoadProfiles.has(dateString)\r\n      ? (this.dailyLoadProfiles.get(dateString) as DailyLoadProfile)\r\n      : new DailyLoadProfile(new Date(dateString));\r\n  }\r\n\r\n  genMaxAndSum() {\r\n    let max = 0;\r\n    let kwhdelSum = 0;\r\n    let kwdelSum = 0;\r\n    let maxHour = 1;\r\n    let maxDate = new Date();\r\n\r\n    for (let dailyLoadProfile of this.dailyLoadProfiles.values()) {\r\n      const dailyMax = dailyLoadProfile.max;\r\n      const dailyKwdelSum = dailyLoadProfile.sum.kwdel;\r\n      const dailyKwhdelSum = dailyLoadProfile.sum.kwhdel;\r\n      console.log(\r\n        `Sum for day ${dailyLoadProfile.date.toLocaleDateString()} is: ${dailyKwhdelSum}`\r\n      );\r\n      kwhdelSum += dailyKwhdelSum;\r\n      kwdelSum += dailyKwdelSum;\r\n\r\n      if (dailyMax.kwdel > max) {\r\n        max = dailyMax.kwdel;\r\n        maxHour = dailyMax.hour;\r\n        maxDate = dailyLoadProfile.date;\r\n      }\r\n    }\r\n    console.log(`Sum for ${this.meteringPoint} is: ${kwhdelSum}`);\r\n\r\n    this.max = {\r\n      kwdel: max,\r\n      hour: maxHour,\r\n      date: maxDate,\r\n      meteringPoint: this.meteringPoint,\r\n    };\r\n    this.sum = {\r\n      kwdel: kwdelSum,\r\n      kwhdel: kwhdelSum,\r\n      meteringPoint: this.meteringPoint,\r\n    };\r\n    return { max: this.max, sum: this.sum };\r\n  }\r\n}\r\n\r\nexport default LoadProfile;\r\n","export default class CoincidentPeak {\r\n  meteringPoint: string;\r\n  kwdel: number;\r\n  hour: number;\r\n  date: Date;\r\n\r\n  constructor() {\r\n    this.meteringPoint = \"\";\r\n    this.kwdel = 0;\r\n    this.hour = 0;\r\n    this.date = new Date();\r\n  }\r\n}\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport LoadProfile from \"./LoadProfile\";\r\nimport BillingPeriod from \"../../../objects/common/BillingPeriod\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\nimport { CoincidentPeak } from \"./others\";\r\nimport HourlyLoadProfile from \"./HourlyLoadProfile\";\r\nimport DailyLoadProfile from \"./DailyLoadProfile\";\r\n\r\nclass MonthlyLoadProfile {\r\n  loadProfiles: Map<string, LoadProfile>;\r\n  billingPeriod: BillingPeriod;\r\n  dateStrings: Set<string>;\r\n  coincidentPeak: CoincidentPeak;\r\n  nonCoincidentPeak: number;\r\n  diversityFactor: number;\r\n  loadProfilesMax: LoadProfileMax[];\r\n  loadProfilesSum: LoadProfileSum[];\r\n  totalLoadpRofile: LoadProfile;\r\n  chartData: Map<string, any>;\r\n\r\n  constructor(billingPeriod: BillingPeriod) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.loadProfiles = new Map();\r\n    this.dateStrings = new Set();\r\n    this.totalLoadpRofile = new LoadProfile(\"Total\");\r\n    this.coincidentPeak = new CoincidentPeak();\r\n    this.nonCoincidentPeak = 0;\r\n    this.diversityFactor = 0;\r\n    this.loadProfilesMax = [];\r\n    this.loadProfilesSum = [];\r\n    this.chartData = new Map();\r\n  }\r\n\r\n  addData(rawData: LoadProfile_Raw) {\r\n    let key = rawData.meteringPoint;\r\n    let dateString = `${rawData.month}/${rawData.day}/${rawData.year}`;\r\n\r\n    if (!this.dateStrings.has(dateString)) {\r\n      this.dateStrings.add(dateString);\r\n    }\r\n\r\n    if (!this.loadProfiles.has(key)) {\r\n      this.loadProfiles.set(key, new LoadProfile(key));\r\n    }\r\n    this.loadProfiles.get(key)?.addLoadProfileData(rawData, dateString);\r\n  }\r\n\r\n  removeData(fileName: string, meteringPoints: string[]) {\r\n    meteringPoints.forEach((key) => {\r\n      if (this.loadProfiles.has(key)) {\r\n        let loadProfile = this.loadProfiles.get(key);\r\n        loadProfile?.removeLoadPRofileData(fileName);\r\n      }\r\n    });\r\n  }\r\n\r\n  private resetData() {\r\n    this.nonCoincidentPeak = 0;\r\n    this.loadProfilesMax = [];\r\n    this.loadProfilesSum = [];\r\n    this.totalLoadpRofile = new LoadProfile(\"Total\");\r\n    this.chartData = new Map();\r\n  }\r\n\r\n  private extractDataThenAddToTotal(\r\n    hourlyLoadProfile: HourlyLoadProfile,\r\n    dailyLoadProfile: DailyLoadProfile\r\n  ) {\r\n    let rawData = new LoadProfile_Raw(\r\n      hourlyLoadProfile.getTotalKwdel(),\r\n      hourlyLoadProfile.getTotalKwhdel(),\r\n      dailyLoadProfile.date.getDate(),\r\n      dailyLoadProfile.date.getMonth() + 1,\r\n      dailyLoadProfile.date.getFullYear(),\r\n      hourlyLoadProfile.hour,\r\n      3,\r\n      \"Total\",\r\n      0\r\n    );\r\n    let dateString = `${rawData.month}/${rawData.day}/${rawData.year}`;\r\n    this.totalLoadpRofile.addLoadProfileData(rawData, dateString);\r\n  }\r\n\r\n  private extractDailyLoadProfileTotalKwdelThenAddToData(\r\n    dailyLoadProfile: DailyLoadProfile,\r\n    loadProfile: LoadProfile\r\n  ) {\r\n    let dateKey = `${\r\n      dailyLoadProfile.date.getMonth() + 1\r\n    }/${dailyLoadProfile.date.getDate()}`;\r\n\r\n    if (!this.chartData.has(dateKey)) {\r\n      let obj: any = { date: dateKey };\r\n      obj[`${loadProfile.meteringPoint}`] = dailyLoadProfile.sum.kwdel;\r\n      this.chartData.set(dateKey, obj);\r\n    } else {\r\n      let obj = this.chartData.get(dateKey);\r\n      obj[`${loadProfile.meteringPoint}`] = dailyLoadProfile.sum.kwdel;\r\n    }\r\n  }\r\n\r\n  initOtherDetails() {\r\n    this.resetData();\r\n\r\n    let hlpList: HourlyLoadProfile[] = [];\r\n\r\n    for (let loadProfile of this.loadProfiles.values()) {\r\n      for (let dailyLp of [...loadProfile.dailyLoadProfiles.values()]) {\r\n        dailyLp.genMaxAndSum();\r\n        for (let hourlyLp of dailyLp.hourlyLoadProfiles) {\r\n          this.extractDataThenAddToTotal(hourlyLp, dailyLp);\r\n        }\r\n        this.extractDailyLoadProfileTotalKwdelThenAddToData(\r\n          dailyLp,\r\n          loadProfile\r\n        );\r\n      }\r\n      const { max, sum } = loadProfile.genMaxAndSum();\r\n\r\n      if (sum.kwdel === 0) {\r\n        this.loadProfiles.delete(loadProfile.meteringPoint);\r\n      } else {\r\n        this.loadProfilesMax.push(max);\r\n        this.loadProfilesSum.push(sum);\r\n        this.nonCoincidentPeak += max.kwdel;\r\n      }\r\n    }\r\n\r\n    for (let dlp of this.totalLoadpRofile.dailyLoadProfiles.values()) {\r\n      for (let hlp of dlp.hourlyLoadProfiles) {\r\n        if (hlp.getRawTotal() > this.coincidentPeak.kwdel) {\r\n          this.coincidentPeak.kwdel = hlp.getRawTotal();\r\n          this.coincidentPeak.date = dlp.date;\r\n          this.coincidentPeak.hour = hlp.hour;\r\n          this.coincidentPeak.meteringPoint = \"Total\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.diversityFactor = this.nonCoincidentPeak / this.coincidentPeak.kwdel;\r\n\r\n    console.log({\r\n      info: \"max and sum\",\r\n      max: this.loadProfilesMax,\r\n      sum: this.loadProfilesSum,\r\n      coincidental: this.coincidentPeak,\r\n      nonCoincidental: this.nonCoincidentPeak,\r\n      diversityFactor: this.diversityFactor,\r\n      totalLoadProfile: this.totalLoadpRofile,\r\n      chartData: this.chartData,\r\n      hourlyLoadpRofiles: hlpList,\r\n    });\r\n  }\r\n}\r\n\r\nexport default MonthlyLoadProfile;\r\n","class Stack<T> {\r\n  data: T[];\r\n  top: number;\r\n\r\n  constructor(stack?: Stack<T>) {\r\n    this.data = [];\r\n    this.top = 0;\r\n\r\n    if (stack) {\r\n      this.data = stack.data;\r\n      this.top = stack.top;\r\n    }\r\n  }\r\n\r\n  push(element: T) {\r\n    this.data[this.top] = element;\r\n    this.top = this.top + 1;\r\n  }\r\n\r\n  length() {\r\n    return this.top;\r\n  }\r\n\r\n  peek() {\r\n    return this.data[this.top - 1];\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.top === 0;\r\n  }\r\n\r\n  pop() {\r\n    if (this.isEmpty() === false) {\r\n      this.top = this.top - 1;\r\n      return this.data.pop() as T; // removes the last element\r\n    }\r\n  }\r\n}\r\n\r\nexport default Stack;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {\r\n  LoadProfile,\r\n  LoadProfile_Raw,\r\n  MonthlyLoadProfile,\r\n} from \"../loadprofile/objects\";\r\nimport Stack from \"../../objects/common/Stack\";\r\n\r\nexport type DeleteLoadpRofileInfo = {\r\n  fileName: string;\r\n  meteringPoints: string[];\r\n};\r\n\r\nconst LoadProfileContext = createContext<{\r\n  updateLoadProfiles: (rawDatas: LoadProfile_Raw[]) => void;\r\n  monthlyLoadProfiles: Map<string, MonthlyLoadProfile>;\r\n  working: boolean;\r\n  deleteLoadProfiles: (deleteLoadProfileInfo: DeleteLoadpRofileInfo) => void;\r\n}>({\r\n  updateLoadProfiles: (rawDatas) => {},\r\n  monthlyLoadProfiles: new Map(),\r\n  working: false,\r\n  deleteLoadProfiles: (deleteLoadProfileInfo) => {},\r\n});\r\n\r\ntype LoadProfileContextProviderProps = {};\r\nconst LoadProfileContextProvider: React.FunctionComponent<LoadProfileContextProviderProps> = (\r\n  props\r\n) => {\r\n  const { children, ...others } = props;\r\n  const [monthlyLoadProfiles, setMonthlyLoadProfiles] = useState(\r\n    new Map<string, MonthlyLoadProfile>()\r\n  );\r\n\r\n  const [buffer, setBuffer] = useState<\r\n    Stack<LoadProfile_Raw[] | DeleteLoadpRofileInfo>\r\n  >(new Stack());\r\n  const [working, setWorking] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"MonthlyLoadProfiles State Updated\");\r\n    console.log(monthlyLoadProfiles);\r\n  }, [monthlyLoadProfiles]);\r\n\r\n  function updateLoadProfiles(rawDatas: LoadProfile_Raw[]) {\r\n    console.log(\"Updating load profile datas in context....\");\r\n\r\n    setBuffer((prevBuffer) => {\r\n      let newbuffer = new Stack(prevBuffer);\r\n      newbuffer.push(rawDatas);\r\n      return newbuffer;\r\n    });\r\n  }\r\n\r\n  function deleteLoadProfiles(deleteLaodProfileInfo: DeleteLoadpRofileInfo) {\r\n    setBuffer((prevBuffer) => {\r\n      let newbuffer = new Stack(prevBuffer);\r\n      newbuffer.push(deleteLaodProfileInfo);\r\n      return newbuffer;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (working) return;\r\n    if (buffer.isEmpty()) {\r\n      setWorking(false);\r\n      return;\r\n    }\r\n\r\n    let newBuffer = new Stack(buffer);\r\n    let data = newBuffer.pop();\r\n    if (data) {\r\n      setWorking(true);\r\n\r\n      if (data instanceof Array) {\r\n        console.log(\"Data instance of ARRRRAAAAY....\");\r\n        addRawDatasToMonthlyLoadProfiles(data).then((result) => {\r\n          setMonthlyLoadProfiles(result);\r\n          setWorking(false);\r\n          setBuffer(newBuffer);\r\n        });\r\n      } else {\r\n        console.log(\"Data instance of ARRRRAAAAY....\");\r\n        deleteDataFromMonthlyLoadProfiles(\r\n          data.fileName,\r\n          data.meteringPoints\r\n        ).then((result) => {\r\n          setMonthlyLoadProfiles(result);\r\n          setWorking(false);\r\n          setBuffer(newBuffer);\r\n        });\r\n      }\r\n    }\r\n  }, [buffer]);\r\n\r\n  function addRawDatasToMonthlyLoadProfiles(rawDatas: LoadProfile_Raw[]) {\r\n    return new Promise<Map<string, MonthlyLoadProfile>>((resolve, reject) => {\r\n      console.log(\"Processing rawDatas\");\r\n      let newMonthlyLoadProfiles = new Map(monthlyLoadProfiles);\r\n      for (let rawData of rawDatas) {\r\n        let key = `${rawData.billingPeriod.month}-${rawData.year}`;\r\n        if (!newMonthlyLoadProfiles.has(key)) {\r\n          newMonthlyLoadProfiles.set(\r\n            key,\r\n            new MonthlyLoadProfile(rawData.billingPeriod)\r\n          );\r\n        }\r\n        newMonthlyLoadProfiles.get(key)?.addData(rawData);\r\n      }\r\n      newMonthlyLoadProfiles.forEach((mlp) => mlp.initOtherDetails());\r\n      resolve(newMonthlyLoadProfiles);\r\n    });\r\n  }\r\n\r\n  function deleteDataFromMonthlyLoadProfiles(\r\n    fileName: string,\r\n    meteringPoints: string[]\r\n  ) {\r\n    return new Promise<Map<string, MonthlyLoadProfile>>((resolve, reject) => {\r\n      console.log(\"DELETING LAODP ROFILESS\");\r\n      let newMonthlyLoadProfiles = new Map(monthlyLoadProfiles);\r\n      for (let key of newMonthlyLoadProfiles.keys()) {\r\n        let mpl = newMonthlyLoadProfiles.get(key);\r\n        mpl?.removeData(fileName, meteringPoints);\r\n      }\r\n      newMonthlyLoadProfiles.forEach((mlp) => {\r\n        mlp.initOtherDetails();\r\n        if (mlp.nonCoincidentPeak === 0) {\r\n          let key = `${mlp.billingPeriod.month}-${mlp.billingPeriod.year}`;\r\n          newMonthlyLoadProfiles.delete(key);\r\n        }\r\n      });\r\n      resolve(newMonthlyLoadProfiles);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <LoadProfileContext.Provider\r\n      value={{\r\n        updateLoadProfiles,\r\n        monthlyLoadProfiles,\r\n        deleteLoadProfiles,\r\n        working,\r\n      }}\r\n    >\r\n      {children}\r\n    </LoadProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LoadProfileContextProvider;\r\nexport { LoadProfileContext };\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport { ToggleButton } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\n\r\ntype StyledToggleButtonProps = {\r\n  value?: string;\r\n};\r\n\r\nconst StyledToggleButton: React.FunctionComponent<StyledToggleButtonProps> = ({\r\n  value,\r\n  children,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ToggleButton classes={{ root: classes.root }} value={value} {...others}>\r\n      {children}\r\n    </ToggleButton>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"none\",\r\n    borderRadius: 0,\r\n    \"&.Mui-selected\": {\r\n      backgroundColor: theme.palette.background.default,\r\n      color: theme.palette.primary.main,\r\n    },\r\n    \"&:hover, &.Mui-selected:hover\": {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    selected: {},\r\n  },\r\n}));\r\n\r\nexport default StyledToggleButton;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: 50,\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.drawer + 10,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  toggleButtonsContainer: {},\r\n  otherButtonsContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { LoadProfileSettings } from \"./types/LoadProfileSettings\";\r\nenum LoadProfileStorageKey {\r\n  KWDEL = \"lp_kwdelCol\",\r\n  KWHDEL = \"lp_kwhdelCol\",\r\n  DATE = \"lp_dateCol\",\r\n  TIME = \"lp_timeCol\",\r\n  DATE_FORMAT = \"lp_dateFormat\",\r\n  TIME_FORMAT = \"lp_timeFormat\",\r\n}\r\n\r\nfunction loadSettings(): LoadProfileSettings {\r\n  let kwdelCol = Number(\r\n    localStorage.getItem(LoadProfileStorageKey.KWDEL) || \"1\"\r\n  );\r\n  let dateCol = Number(localStorage.getItem(LoadProfileStorageKey.DATE) || \"2\");\r\n  let timeCol = Number(localStorage.getItem(LoadProfileStorageKey.TIME) || \"3\");\r\n  let dateFormat =\r\n    localStorage.getItem(LoadProfileStorageKey.DATE_FORMAT) || \"MM/DD/YYYY\";\r\n  let timeFormat =\r\n    localStorage.getItem(LoadProfileStorageKey.TIME_FORMAT) || \"HH:mm\";\r\n\r\n  let kwhdelCol = Number(\r\n    localStorage.getItem(LoadProfileStorageKey.KWHDEL) || \"4\"\r\n  );\r\n  return {\r\n    kwdelCol,\r\n    dateCol,\r\n    timeCol,\r\n    dateFormat,\r\n    timeFormat,\r\n    kwhdelCol,\r\n  };\r\n}\r\n\r\nfunction saveSettings(settings: LoadProfileSettings): void {\r\n  localStorage.setItem(LoadProfileStorageKey.KWDEL, String(settings.kwdelCol));\r\n\r\n  localStorage.setItem(LoadProfileStorageKey.TIME, String(settings.timeCol));\r\n\r\n  localStorage.setItem(LoadProfileStorageKey.DATE, String(settings.dateCol));\r\n\r\n  localStorage.setItem(\r\n    LoadProfileStorageKey.DATE_FORMAT,\r\n    String(settings.dateFormat)\r\n  );\r\n\r\n  localStorage.setItem(\r\n    LoadProfileStorageKey.TIME_FORMAT,\r\n    String(settings.timeFormat)\r\n  );\r\n\r\n  localStorage.setItem(\r\n    LoadProfileStorageKey.KWHDEL,\r\n    settings.kwhdelCol.toString()\r\n  );\r\n}\r\n\r\nconst LoadProfileStorage = {\r\n  loadSettings,\r\n  saveSettings,\r\n};\r\n\r\nexport default LoadProfileStorage;\r\n","import Toolbar from \"./Toolbar\";\r\n\r\nexport default Toolbar;\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      position: \"static\",\r\n      borderLeft: `1px solid ${theme.palette.divider}`,\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useStyles;\r\nexport { drawerWidth };\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\n\r\ntype StyledAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n  panelName: string;\r\n  title: string;\r\n  render?: any;\r\n};\r\n\r\nconst StyledAccordion: React.FunctionComponent<StyledAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  panelName,\r\n  title,\r\n  render,\r\n  children,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function handlePanelChange(\r\n    event: React.ChangeEvent<{}>,\r\n    newExpanded: boolean\r\n  ) {\r\n    onPanelChange(newExpanded ? panelName : \"\");\r\n  }\r\n\r\n  return (\r\n    <Accordion\r\n      className={classes.accordion}\r\n      square\r\n      onChange={handlePanelChange}\r\n    >\r\n      <AccordionSummary\r\n        className={classes.accordionSummary}\r\n        classes={{ content: classes.content }}\r\n        expandIcon={<ExpandMore />}\r\n      >\r\n        <Typography className={classes.accordionTitle}>{title}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.accordionDetails}>\r\n        {children}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    accordion: {\r\n      border: \"1px solid rgba(0, 0, 0, .125)\",\r\n      boxShadow: \"none\",\r\n      \"&:not(:last-child)\": {\r\n        borderBottom: 0,\r\n      },\r\n      \"&:before\": {\r\n        display: \"none\",\r\n      },\r\n      \"&$expanded\": {\r\n        margin: \"auto\",\r\n      },\r\n      expanded: {},\r\n    },\r\n\r\n    accordionSummary: {\r\n      borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\r\n\r\n      marginBottom: -1,\r\n      minHeight: 30,\r\n      \"&$expanded\": {\r\n        minHeight: 30,\r\n        backgroundColor: \"black\",\r\n      },\r\n      expanded: {},\r\n    },\r\n    content: {\r\n      margin: 2,\r\n    },\r\n    accordionTitle: {\r\n      fontSize: \"0.8rem\",\r\n      asdf: {},\r\n    },\r\n    expanded: {},\r\n    accordionDetails: {\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: \"5px\",\r\n      position: \"relative\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default StyledAccordion;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ErrorOutline } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport type FilecardProps = {\r\n  file: File;\r\n  progressInfo: string;\r\n  progress: number;\r\n  errors?: string[];\r\n  onRemoveFile: () => void;\r\n};\r\n\r\nconst FileCard: React.FunctionComponent<FilecardProps> = ({\r\n  file,\r\n  progress,\r\n  progressInfo,\r\n  errors = [],\r\n  onRemoveFile,\r\n  ...others\r\n}) => {\r\n  const classes = cardStyles();\r\n  const [openError, setOpenError] = useState(false);\r\n\r\n  function handleSeeErrorsClick() {\r\n    setOpenError(true);\r\n  }\r\n\r\n  function handleCloseErrorDialog() {\r\n    setOpenError(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <div className={classes.content}>\r\n          <Typography className={classes.filename}>{file.name}</Typography>\r\n          <div className={classes.progress_content}>\r\n            <LinearProgress\r\n              value={progress}\r\n              variant={\r\n                progress === 0 || progress === 100\r\n                  ? \"determinate\"\r\n                  : \"indeterminate\"\r\n              }\r\n            />\r\n            <Typography className={classes.progress_text}>\r\n              {progressInfo}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.action}>\r\n          {errors.length !== 0 && (\r\n            <Button\r\n              className={classes.button}\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              startIcon={<ErrorOutline color=\"error\" />}\r\n              onClick={handleSeeErrorsClick}\r\n            >\r\n              see errors\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className={classes.button}\r\n            onClick={onRemoveFile}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n          >\r\n            Remove\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Dialog open={openError} onClose={handleCloseErrorDialog}>\r\n        <DialogTitle>\r\n          <Typography variant=\"h6\" color=\"error\">\r\n            Errors\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            {file.name}\r\n          </Typography>\r\n          <Divider />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box overflow=\"auto\" padding=\"5px 25px\">\r\n            {errors.map((error, index) => {\r\n              return (\r\n                <div key={index} className={classes.error_container}>\r\n                  <Typography\r\n                    component=\"p\"\r\n                    className={classes.error_text}\r\n                    key={`${index}~error`}\r\n                  >\r\n                    {error}\r\n                  </Typography>\r\n                  <Divider />\r\n                </div>\r\n              );\r\n            })}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst cardStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.mobileStepper,\r\n    maxWidth: \"100%\",\r\n    fontSize: \"0.8rem\",\r\n    boxSizing: \"border-box\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: theme.shape.borderRadius,\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    padding: 10,\r\n    overflowWrap: \"break-word\",\r\n    wordWrap: \"break-word\",\r\n  },\r\n  filename: {\r\n    fontSize: \"1em\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  progress_text: {\r\n    fontSize: \"0.7em\",\r\n    color: theme.palette.text.secondary,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"5px\",\r\n    justifyContent: \"center\",\r\n  },\r\n  progress_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"3px\",\r\n  },\r\n  action: {},\r\n  button: {\r\n    textTransform: \"none\",\r\n  },\r\n  error_container: {\r\n    maxWidth: \"100%\",\r\n    width: \"550px\",\r\n  },\r\n  error_text: {\r\n    fontSize: \"0.9rem\",\r\n    padding: \"10px 5px\",\r\n    whiteSpace: \"pre-wrap\",\r\n  },\r\n}));\r\n\r\nexport default FileCard;\r\n","class InvalidFileError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n\r\nexport default InvalidFileError;\r\n","import { WorkBook } from \"xlsx/types\";\r\nimport XLSX from \"xlsx\";\r\nimport InvalidFileError from \"../../../components/errors/InvalidFileError\";\r\n\r\nasync function extractWorkbookFromFile(file: File): Promise<WorkBook> {\r\n  return new Promise<WorkBook>((resolve, reject) => {\r\n    console.log(\"FileUTils: Timeout wait for 10 secs....\");\r\n    let fileExtension: string = file.name.split(\".\")[1];\r\n    console.log({\r\n      method: \"extractWorkbookFromFile()\",\r\n      parameteres: { file },\r\n      fileTypeSplit: file.name.split(\".\"),\r\n      fileExtension,\r\n    });\r\n\r\n    if (fileExtension !== \"xlsx\") {\r\n      reject(\r\n        new InvalidFileError(\r\n          `Invalid file: expected: .xlsx received: ${fileExtension}`\r\n        )\r\n      );\r\n    }\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (event: ProgressEvent<FileReader>) {\r\n      try {\r\n        let data = new Uint8Array(event.target?.result as ArrayBuffer);\r\n        let workbook = XLSX.read(data, { type: \"array\", cellDates: true });\r\n        resolve(workbook);\r\n      } catch (error) {\r\n        reject(new Error(error));\r\n      }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  });\r\n}\r\n\r\nconst FileUtil = {\r\n  extractWorkbookFromFile,\r\n};\r\n\r\nexport default FileUtil;\r\n","enum Feeder {\r\n  TETUAN = \"Tetuan\",\r\n  MERCEDES = \"Mercedes\",\r\n  NORTHSIDE = \"Northside\",\r\n  ZAMPEN = \"Zampen\",\r\n  GUIWAN = \"Guiwan\",\r\n  TUMAGA = \"Tumaga\",\r\n  ARENA_BLANCO = \"Arena Blanco\",\r\n  PRESA = \"Presa\",\r\n  SAN_JOSE = \"San Jose\",\r\n  CALARIAN = \"Calarian\",\r\n  BALIWASAN = \"Baliwasan\",\r\n  DEDICATED_LINE = \"Dedicated Line\",\r\n  INTERCO = \"Interco (1-3MVA)\",\r\n  CULIANAN = \"Culianan\",\r\n  CURUAN = \"Curuan\",\r\n  FISHING_PORT = \"Fishing Port\",\r\n  TALISAYAN = \"Talisayan\",\r\n  LABUAN = \"Labuan\",\r\n  RECODO = \"Recodo\",\r\n  SINUNUC = \"Sinunuc\",\r\n  PERMEX = \"PERMEX (2-2MVA)\",\r\n  BIG_FISH = \"Big Fish (1-2MVA)\",\r\n  TIN_CAN_ORIENTAL = \"Tin Can Oriental (1-2MVA)\",\r\n  MEGA_FISHIN_CORP = \"Mega Fishing Corp. (1-4MVA)\",\r\n  MEGA_FISHIN_CORP2 = \"Mega Fishing Corp. (1-3MVA)\",\r\n  PASONANCA = \"Pasonanca\",\r\n  SAN_ROQUE = \"San Roque\",\r\n  ACLEM = \"Aclem\",\r\n  GOVERNOR_ALVAREZ = \"Governor Alvarez\",\r\n  VETERANS_AVENUE = \"Veterans Avenue\",\r\n  NUNEZ = \"Nuňez\",\r\n  STA_CATALINA = \"Sta Catalina\",\r\n  RIO_HONDO = \"Rio Hondo\",\r\n  GUARDIA_NACIONAL = \"Guardia Nacional\",\r\n  CAMPANER = \"Campaner\",\r\n  KCC_MALL = \"KCC Mall (1-10MVA)\",\r\n}\r\n\r\nexport default Feeder;\r\n","class Transformer {\r\n  static readonly HYOSUNG_20MVA = new Transformer(\r\n    \"HYOSUNG_20MVA\",\r\n    \"HYOSUNG PTX - 20MVA\",\r\n    \"TP99-8513\",\r\n    20\r\n  );\r\n  static readonly SHIHLIN_20MVA = new Transformer(\r\n    \"SHIHLIN_20MVA\",\r\n    \"SHIHLIN PTX - 20MVA\",\r\n    \"810014\",\r\n    20\r\n  );\r\n  static readonly SHIHLIN_10MVVA = new Transformer(\r\n    \"SHIHLIN_10MVVA \",\r\n    \"SHIHLIN PTX - 10MVA\",\r\n    \"T990113\",\r\n    10\r\n  );\r\n  static readonly SHIHLIN_5MVA = new Transformer(\r\n    \"SHIHLIN_5MVA\",\r\n    \"SHIHLIN PTX - 5MVA\",\r\n    \"\",\r\n    5\r\n  );\r\n  static readonly NANJING_20MVA = new Transformer(\r\n    \"NANJING_20MVA\",\r\n    \"NANJING PTX - 20MVA\",\r\n    \"610205\",\r\n    20\r\n  );\r\n  static readonly PRIME_MEIDEN_10MVA = new Transformer(\r\n    \"PRIME_MEIDEN_10MVA\",\r\n    \"PRIME MEIDEN PTX - 10MVA\",\r\n    \"\",\r\n    10\r\n  );\r\n  static readonly NEW_KOREA_10MVA = new Transformer(\r\n    \"NEW_KOREA_10MVA\",\r\n    \"NEW KOREA PTX - 10MVA\",\r\n    \"W910009\",\r\n    10\r\n  );\r\n  static readonly NEW_KOREA_5MVA = new Transformer(\r\n    \"NEW_KOREA_5MVA\",\r\n    \"NEW KOREA PTX - 5MVA\",\r\n    \"920194\",\r\n    5\r\n  );\r\n  static readonly CHANGZHOU_10MVA = new Transformer(\r\n    \"CHANGZHOU_10MVA\",\r\n    \"CHANGZHOU PTX - 10MVA\",\r\n    \"91-61-146\",\r\n    10\r\n  );\r\n  static readonly SHENDA_25MVA = new Transformer(\r\n    \"SHENDA_25MVA\",\r\n    \"SHENDA PTX - 25MVA\",\r\n    \"\",\r\n    25\r\n  );\r\n\r\n  key: string;\r\n  text: string;\r\n  serialNumber: string;\r\n  power: number;\r\n\r\n  private constructor(\r\n    key: string,\r\n    text: string,\r\n    serialNumber: string,\r\n    power: number\r\n  ) {\r\n    this.key = key;\r\n    this.text = text;\r\n    this.serialNumber = serialNumber;\r\n    this.power = power;\r\n  }\r\n\r\n  toString() {\r\n    return this.key;\r\n  }\r\n}\r\n\r\nexport default Transformer;\r\n","import Feeder from \"./Feeder\";\r\nimport Transformer from \"./Transformer\";\r\n\r\nclass SubstationItem {\r\n  transformer: Transformer;\r\n  feeders: Feeder[];\r\n\r\n  constructor(transformer: Transformer, feeders: Feeder[]) {\r\n    this.transformer = transformer;\r\n    this.feeders = feeders;\r\n  }\r\n}\r\n\r\nclass Substation {\r\n  static readonly PUTIK = new Substation(\"PUTIK\", \"PUTIK S/S\", [\r\n    new SubstationItem(Transformer.SHIHLIN_10MVVA, [\r\n      Feeder.GUIWAN,\r\n      Feeder.TUMAGA,\r\n      Feeder.ARENA_BLANCO,\r\n      Feeder.PRESA,\r\n    ]),\r\n    new SubstationItem(Transformer.HYOSUNG_20MVA, [\r\n      Feeder.TETUAN,\r\n      Feeder.MERCEDES,\r\n      Feeder.NORTHSIDE,\r\n      Feeder.ZAMPEN,\r\n    ]),\r\n  ]);\r\n  static readonly SANJOSE_GUSU = new Substation(\r\n    \"SAN JOSE GUSU\",\r\n    \"SAN JOSE GUSU S/S\",\r\n    [\r\n      new SubstationItem(Transformer.NANJING_20MVA, [\r\n        Feeder.SAN_JOSE,\r\n        Feeder.CALARIAN,\r\n        Feeder.BALIWASAN,\r\n        Feeder.DEDICATED_LINE,\r\n      ]),\r\n      new SubstationItem(Transformer.NEW_KOREA_10MVA, []),\r\n    ]\r\n  );\r\n  static readonly SANGALI = new Substation(\"SANGALI\", \"SANGALI S/S\", [\r\n    new SubstationItem(Transformer.PRIME_MEIDEN_10MVA, [\r\n      Feeder.CULIANAN,\r\n      Feeder.CURUAN,\r\n      Feeder.FISHING_PORT,\r\n    ]),\r\n  ]);\r\n  static readonly AYALA = new Substation(\"AYALA\", \"AYALA S/S\", [\r\n    new SubstationItem(Transformer.SHIHLIN_10MVVA, [\r\n      Feeder.TALISAYAN,\r\n      Feeder.LABUAN,\r\n    ]),\r\n  ]);\r\n\r\n  static readonly RECODO = new Substation(\"RECODO\", \"RECODO S/S\", [\r\n    new SubstationItem(Transformer.NEW_KOREA_10MVA, [Feeder.RECODO]),\r\n    new SubstationItem(Transformer.NEW_KOREA_5MVA, [Feeder.SINUNUC]),\r\n    new SubstationItem(Transformer.SHIHLIN_5MVA, []),\r\n  ]);\r\n  static readonly CABATANGAN = new Substation(\"CABATANGAN\", \"CABATANGAN S/S\", [\r\n    new SubstationItem(Transformer.CHANGZHOU_10MVA, [Feeder.PASONANCA]),\r\n    new SubstationItem(Transformer.PRIME_MEIDEN_10MVA, [Feeder.SAN_ROQUE]),\r\n  ]);\r\n  static readonly CAMANCHILI = new Substation(\"CAMANCHILI\", \"CAMANCHILI S/S\", [\r\n    new SubstationItem(Transformer.SHIHLIN_20MVA, [\r\n      Feeder.ACLEM,\r\n      Feeder.GOVERNOR_ALVAREZ,\r\n      Feeder.VETERANS_AVENUE,\r\n      Feeder.NUNEZ,\r\n    ]),\r\n    new SubstationItem(Transformer.SHENDA_25MVA, [\r\n      Feeder.STA_CATALINA,\r\n      Feeder.RIO_HONDO,\r\n      Feeder.GUARDIA_NACIONAL,\r\n      Feeder.CAMPANER,\r\n    ]),\r\n  ]);\r\n\r\n  key: string;\r\n  text: string;\r\n  substationItems: SubstationItem[];\r\n\r\n  private constructor(\r\n    key: string,\r\n    text: string,\r\n    substationItems: SubstationItem[]\r\n  ) {\r\n    this.key = key;\r\n    this.text = text;\r\n    this.substationItems = substationItems;\r\n  }\r\n\r\n  toStrting() {\r\n    return this.key;\r\n  }\r\n}\r\n\r\nexport default Substation;\r\n","import Feeder from \"./Feeder\";\r\nimport Substation from \"./Substation\";\r\n\r\nclass MeteringPoint {\r\n  static readonly MF3MPITZAMC01 = new MeteringPoint(\"MF3MPITZAMC01\", [\r\n    Substation.PUTIK,\r\n  ]);\r\n\r\n  static readonly MF3MPITZAMC02 = new MeteringPoint(\"MF3MPITZAMC02\", [\r\n    Substation.SANJOSE_GUSU,\r\n  ]);\r\n\r\n  static readonly MF3MPITZAMC03 = new MeteringPoint(\"MF3MPITZAMC03\", [\r\n    Substation.SANGALI,\r\n  ]);\r\n  static readonly MF3MPITZAMC04 = new MeteringPoint(\"MF3MPITZAMC04\", [\r\n    Substation.RECODO,\r\n    Substation.AYALA,\r\n  ]);\r\n  static readonly MF3MPITZAMC05 = new MeteringPoint(\"MF3MPITZAMC05\", [\r\n    Substation.CABATANGAN,\r\n  ]);\r\n  static readonly MF3MPITZAMC06 = new MeteringPoint(\"MF3MPITZAMC06\", []);\r\n  static readonly MF3MPITZAMC07 = new MeteringPoint(\"MF3MPITZAMC07\", [\r\n    Substation.CAMANCHILI,\r\n  ]);\r\n\r\n  key: string;\r\n  substations: Substation[];\r\n\r\n  private constructor(key: string, substations: Substation[]) {\r\n    this.key = key;\r\n    this.substations = substations;\r\n  }\r\n\r\n  toString() {\r\n    return this.key;\r\n  }\r\n\r\n  getFeeders() {\r\n    let feeders: Feeder[] = [];\r\n    for (let substation of this.substations) {\r\n      for (let substationItem of substation.substationItems) {\r\n        feeders = [...feeders, ...substationItem.feeders];\r\n      }\r\n    }\r\n    return feeders;\r\n  }\r\n\r\n  static getMeteringPoint(meteringPoint: string): MeteringPoint | null {\r\n    switch (meteringPoint.toUpperCase()) {\r\n      case this.MF3MPITZAMC01.key:\r\n        return this.MF3MPITZAMC01;\r\n      case this.MF3MPITZAMC02.key:\r\n        return this.MF3MPITZAMC02;\r\n      case this.MF3MPITZAMC03.key:\r\n        return this.MF3MPITZAMC03;\r\n      case this.MF3MPITZAMC04.key:\r\n        return this.MF3MPITZAMC04;\r\n      case this.MF3MPITZAMC05.key:\r\n        return this.MF3MPITZAMC05;\r\n      case this.MF3MPITZAMC06.key:\r\n        return this.MF3MPITZAMC06;\r\n      case this.MF3MPITZAMC07.key:\r\n        return this.MF3MPITZAMC07;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  static exists(meteringPoint: string): boolean {\r\n    switch (meteringPoint) {\r\n      case this.MF3MPITZAMC01.key:\r\n      case this.MF3MPITZAMC02.key:\r\n      case this.MF3MPITZAMC03.key:\r\n      case this.MF3MPITZAMC04.key:\r\n      case this.MF3MPITZAMC05.key:\r\n      case this.MF3MPITZAMC06.key:\r\n      case this.MF3MPITZAMC07.key:\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeteringPoint;\r\n","import moment from \"moment\";\r\nimport { CellObject } from \"xlsx/types\";\r\n\r\nclass ExcelUtil {\r\n  static extractDate(\r\n    cell: CellObject,\r\n    dateFormat: string\r\n  ): { date: Date | null; error: string | null } {\r\n    let date: Date | null = null;\r\n    let error: string | null = null;\r\n    let x = null;\r\n    if (cell) {\r\n      if (cell.t !== \"d\") {\r\n        if (cell.t === \"s\") {\r\n          x = moment(cell.v || cell.w || cell.r, dateFormat);\r\n          if (!x.isValid()) {\r\n            error = ` ${cell.v} does not match the date format in setstings ${dateFormat}`;\r\n          } else {\r\n            date = x.toDate();\r\n          }\r\n        } else {\r\n          error = `Invalid Cell Value: Expected Date, received: ${cell.v}`;\r\n        }\r\n      } else {\r\n        date = cell.v as Date;\r\n      }\r\n    } else {\r\n      error = \"Cell is empty\";\r\n    }\r\n\r\n    return { date, error };\r\n  }\r\n\r\n  static extractNumber(\r\n    cell: CellObject,\r\n    strict: boolean = false\r\n  ): { number: number | null; error: string | null } {\r\n    let number: number | null = null;\r\n    let error: string | null = null;\r\n    if (cell) {\r\n      if (!(cell.t === \"n\" || Number(cell.v || cell.w))) {\r\n        error = `Invalid Cell Value: Expected number, received: ${cell.v}`;\r\n      } else {\r\n        number = Number(cell.r || cell.v);\r\n      }\r\n    } else {\r\n      if (strict) {\r\n        error = \"Cell is empty\";\r\n      } else {\r\n        number = 0;\r\n      }\r\n    }\r\n\r\n    return { number, error };\r\n  }\r\n\r\n  static extractText(\r\n    cell: CellObject\r\n  ): { text: string | null; error: string | null } {\r\n    let error: string | null = null;\r\n    let text: string | null = null;\r\n    if (cell) {\r\n      if (cell.t !== \"s\") {\r\n        error = `Invalid Cell Value: Expected Text, received: ${cell.v}`;\r\n      } else {\r\n        text = cell.v as string;\r\n      }\r\n    } else {\r\n      error = \"Cell is empty\";\r\n    }\r\n    return { text, error };\r\n  }\r\n\r\n  static calculatePercent(i: number, total: number): Promise<number> {\r\n    return new Promise<number>((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve((i / total) * 100);\r\n      }, 0);\r\n    });\r\n  }\r\n}\r\n\r\nexport default ExcelUtil;\r\n","import XLSX from \"xlsx\";\r\nimport { LoadProfileStorage } from \".\";\r\nimport { LoadProfileSettings } from \"./types/LoadProfileSettings\";\r\nimport { LoadProfile_Raw } from \"./objects\";\r\nimport { CellObject, WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport MeteringPoint from \"../../objects/common/enums/MeteringPoints\";\r\nimport ExcelUtil from \"../../objects/common/utils/ExcelUtil\";\r\n\r\ntype LoadProfileRowData = {\r\n  kwdelCell: CellObject;\r\n  kwhdelCell: CellObject;\r\n  dateCell: CellObject;\r\n  timeCell: CellObject;\r\n  row: number;\r\n  sheetName: string;\r\n};\r\n\r\nfunction extractLoadProfileRawFromWorkbook(\r\n  fileName: string,\r\n  workbook: WorkBook,\r\n  handleProgressUpdate: (progressInfo: string, progress: number) => void\r\n) {\r\n  return new Promise<{\r\n    value: LoadProfile_Raw[];\r\n    errors: string[];\r\n    meteringPoints: string[];\r\n  }>(async (resolve, reject) => {\r\n    if (workbook === null) {\r\n      reject(new Error(\"Invalid file\"));\r\n      handleProgressUpdate(\"tsk, wrong file\", 100);\r\n      return;\r\n    }\r\n    console.log(\"Parsing workbook...\");\r\n\r\n    let lp_rawDatas: LoadProfile_Raw[] = [];\r\n    let errors: string[] = [];\r\n    let meteringPoints: string[] = [];\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      if (!MeteringPoint.exists(sheetName)) {\r\n        errors.push(\r\n          `Invalid sheetname: ${sheetName}, expected: MF3MPITZAMC01~7`\r\n        );\r\n        continue;\r\n      }\r\n      meteringPoints.push(sheetName);\r\n\r\n      handleProgressUpdate(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      if (!worksheet[\"!ref\"]) continue;\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await calculatePercent(row, totalRows);\r\n        handleProgressUpdate(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = LoadProfileStorage.loadSettings();\r\n          let cells = extractCells(worksheet, row, sheetName, settings);\r\n          let rawData = extractDataFromRow(cells, settings, fileName);\r\n          lp_rawDatas.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    console.log(\"finished\");\r\n    resolve({ value: lp_rawDatas, errors, meteringPoints });\r\n  });\r\n}\r\n\r\nfunction calculatePercent(i: number, total: number): Promise<number> {\r\n  return new Promise<number>((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve((i / total) * 100);\r\n    }, 0);\r\n  });\r\n}\r\n\r\n//Extracts the load profile raw data from the row,\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  sheetName: string,\r\n  settings: LoadProfileSettings\r\n): LoadProfileRowData {\r\n  //Builds the raw cell location {column, row}\r\n  let kwdelAddress = { c: settings.kwdelCol, r: row };\r\n  let dateAddress = { c: settings.dateCol, r: row };\r\n  let timeAddress = { c: settings.timeCol, r: row };\r\n  let kwhdelAddress = { c: settings.kwhdelCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let kwdelRef = XLSX.utils.encode_cell(kwdelAddress);\r\n  let dateRef = XLSX.utils.encode_cell(dateAddress);\r\n  let timeRef = XLSX.utils.encode_cell(timeAddress);\r\n  let kwhdelRef = XLSX.utils.encode_cell(kwhdelAddress);\r\n\r\n  return {\r\n    kwdelCell: worksheet[kwdelRef],\r\n    timeCell: worksheet[timeRef],\r\n    dateCell: worksheet[dateRef],\r\n    kwhdelCell: worksheet[kwhdelRef],\r\n    sheetName: sheetName,\r\n    row,\r\n  };\r\n}\r\n\r\nfunction extractDataFromRow(\r\n  rowData: LoadProfileRowData,\r\n  settings: LoadProfileSettings,\r\n  fileName: string\r\n): LoadProfile_Raw {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: LoadProfile_Raw | null = null;\r\n\r\n  let kwdelCellData = ExcelUtil.extractNumber(rowData.kwdelCell);\r\n  let kwhdelCellData = ExcelUtil.extractNumber(rowData.kwhdelCell);\r\n  let dateCellData = ExcelUtil.extractDate(\r\n    rowData.dateCell,\r\n    settings.dateFormat\r\n  );\r\n  let timeCellData = ExcelUtil.extractDate(\r\n    rowData.timeCell,\r\n    settings.timeFormat\r\n  );\r\n\r\n  anyErrors = Boolean(\r\n    kwdelCellData.error ||\r\n      dateCellData.error ||\r\n      timeCellData.error ||\r\n      kwhdelCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowData.row + 1}:\\n`;\r\n    if (kwdelCellData.error)\r\n      error = error.concat(`\\tKwdel Cell: ${kwdelCellData.error}\\n`);\r\n    if (dateCellData.error)\r\n      error = error.concat(`\\tDate Cell: ${dateCellData.error}\\n`);\r\n    if (timeCellData.error)\r\n      error = error.concat(`\\tTime Cell: ${timeCellData.error}\\n`);\r\n    if (kwhdelCellData.error)\r\n      error = error.concat(`\\tKwhdel Cell: ${timeCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let kwhdel = kwhdelCellData.number as number;\r\n    let kwdel = kwdelCellData.number as number;\r\n    let day = dateCellData.date?.getDate() as number;\r\n    let month = dateCellData.date?.getMonth() as number;\r\n    let hour = timeCellData.date?.getHours() as number;\r\n    let minute = timeCellData.date?.getMinutes() as number;\r\n    let year = dateCellData.date?.getFullYear() as number;\r\n    rawData = new LoadProfile_Raw(\r\n      kwdel,\r\n      kwhdel,\r\n      day,\r\n      month + 1,\r\n      year,\r\n      hour,\r\n      minute,\r\n      rowData.sheetName,\r\n      rowData.row,\r\n      fileName\r\n    );\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nexport default extractLoadProfileRawFromWorkbook;\r\n","import BillingPeriod from \"../common/BillingPeriod\";\r\nimport {\r\n  MonthlyInterruptionRawData,\r\n  MonthlyInterruptionSettings,\r\n} from \"./types\";\r\n\r\nfunction createRawDataObject(\r\n  duration: number,\r\n  feeder: string,\r\n  date: Date\r\n): MonthlyInterruptionRawData {\r\n  let billingMonth = BillingPeriod.getBillingMonth(\r\n    date.getMonth() + 1,\r\n    date.getDay()\r\n  );\r\n\r\n  let billingPeriod = new BillingPeriod(billingMonth, date.getFullYear());\r\n  return {\r\n    duration,\r\n    feeder: feeder.toUpperCase().trim(),\r\n    date,\r\n    billingPeriod,\r\n  };\r\n}\r\n\r\nenum MonthlyInterruptionSettingsKey {\r\n  DATE = \"mis_date\",\r\n  DURATION = \"mis_duration\",\r\n  DATE_FORMAT = \"mis_dateformat\",\r\n  FEEDER = \"mis_feeder\",\r\n}\r\n\r\nfunction loadSettings(): MonthlyInterruptionSettings {\r\n  return {\r\n    dateCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.DATE)) || 0,\r\n    durationCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.DURATION)) ||\r\n      1,\r\n    dateFormat:\r\n      localStorage.getItem(MonthlyInterruptionSettingsKey.DATE_FORMAT) ||\r\n      \"MM/DD/YYYY\",\r\n\r\n    feederCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.FEEDER)) || 2,\r\n  };\r\n}\r\n\r\nfunction saveSettings(settings: MonthlyInterruptionSettings) {\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DATE,\r\n    settings.dateCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DURATION,\r\n    settings.durationCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DATE_FORMAT,\r\n    settings.dateFormat\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.FEEDER,\r\n    settings.feederCol.toString()\r\n  );\r\n}\r\n\r\nconst MonthlyInterruptionUtil = Object.freeze({\r\n  createRawDataObject,\r\n  saveSettings,\r\n  loadSettings,\r\n});\r\n\r\nexport default MonthlyInterruptionUtil;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FileUtil } from \"../../objects/common/utils\";\r\nimport { LoadProfile_Raw } from \"./objects\";\r\nimport extractLoadProfileRawFromWorkbook from \"./ExcelParser\";\r\nimport { FilecardProps } from \"../filesdrawer/FileCard\";\r\n\r\ntype LoadProfileParserProps = {\r\n  file: File;\r\n  render: React.FunctionComponent<FilecardProps>;\r\n  onFileParsed: (data: LoadProfile_Raw[]) => void;\r\n  onRemoveFile: (file: File, meteringPointss: string[]) => void;\r\n};\r\n\r\nexport type LoadProfileParserRenderProps = {\r\n  progress: number;\r\n  progressInfo: string;\r\n  fileFromParser: File;\r\n  errors: string[];\r\n  onRemoveFile: () => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<LoadProfileParserProps> = ({\r\n  file,\r\n  render,\r\n  onFileParsed,\r\n  onRemoveFile,\r\n  ...others\r\n}) => {\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [meteringPoints, setMeteringPoints] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        return extractLoadProfileRawFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n        setMeteringPoints((meteringPoint) => [\r\n          ...meteringPoint,\r\n          ...result.meteringPoints,\r\n        ]);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }, []);\r\n\r\n  function handleFileParsed(lp_rawDatas: LoadProfile_Raw[]) {\r\n    onFileParsed(lp_rawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file, meteringPoints);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoadProfileParser;\r\n","import { Box, Typography, makeStyles, Theme } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\ntype FileDropProps = {\r\n  onFileDrop: (files: File[]) => void;\r\n  onDragEnter: () => void;\r\n  onDragLeave: () => void;\r\n  onDragOver?: () => void;\r\n  helperText: string;\r\n};\r\n\r\nconst FileDrop: React.FunctionComponent<FileDropProps> = ({\r\n  helperText = \"\",\r\n  onFileDrop,\r\n  onDragEnter,\r\n  onDragLeave,\r\n  onDragOver = () => {},\r\n  children,\r\n  ...others\r\n}) => {\r\n  const [dragging, setDragging] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  function handleDragEnter() {\r\n    setDragging(true);\r\n    onDragEnter();\r\n  }\r\n\r\n  function handleDragLeave() {\r\n    setDragging(false);\r\n    onDragLeave();\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      <Dropzone\r\n        onDrop={onFileDrop}\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section\r\n            onMouseEnter={handleDragEnter}\r\n            onMouseLeave={handleDragLeave}\r\n            className={clsx(classes.dropZone, {\r\n              [classes.dropZone_focused]: dragging,\r\n            })}\r\n          >\r\n            <div\r\n              {...getRootProps({ className: `${classes.dropZone_content}` })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                color=\"textSecondary\"\r\n                className={classes.dropZoneText}\r\n              >\r\n                {helperText}\r\n              </Typography>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        maxWidth=\"100%\"\r\n        gridGap={5}\r\n        marginTop={1}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dropZone: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n    minHeight: 50,\r\n  },\r\n  dropZone_focused: {\r\n    border: `2px dashed ${theme.palette.text.secondary}`,\r\n  },\r\n  dropZone_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: \"100%\",\r\n    gap: \"10px\",\r\n    flexWrap: \"wrap\",\r\n    margin: 5,\r\n  },\r\n  dropZoneText: {\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n  },\r\n}));\r\n\r\nexport default FileDrop;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CustomAccordion from \"../StyledAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport { LoadProfileParser } from \"../../loadprofile\";\r\nimport { LoadProfile_Raw } from \"../../loadprofile/objects\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport FileDrop from \"../FileDrop\";\r\nimport { LoadProfileParserRenderProps } from \"../../loadprofile/LoadProfileParser\";\r\n\r\ntype LoadProfileAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"laodprofile_filespanel\";\r\nconst title = \"Load Profile Files\";\r\n\r\nconst LoadProfileAccordion: React.FunctionComponent<LoadProfileAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  ...others\r\n}) => {\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(lpRawDatas: LoadProfile_Raw[]) {\r\n    loadProfileContext.updateLoadProfiles(lpRawDatas);\r\n  }\r\n\r\n  function handleRemoveFile(file: File, meteringPoints: string[]) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n\r\n    loadProfileContext.deleteLoadProfiles({\r\n      fileName: file.name,\r\n      meteringPoints,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <LoadProfileParser\r\n              onFileParsed={handleFileParsed}\r\n              key={file.name}\r\n              file={file}\r\n              onRemoveFile={handleRemoveFile}\r\n              render={(props) => (\r\n                <FileCard\r\n                  progress={props.progress}\r\n                  progressInfo={props.progressInfo}\r\n                  file={props.file}\r\n                  errors={props.errors}\r\n                  onRemoveFile={props.onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default LoadProfileAccordion;\r\nexport { panelName };\r\n","import { Month } from \"../../components/enums\";\r\nimport Feeder from \"./enums/Feeder\";\r\n\r\nfunction findFeeder(feederText: String): string | null {\r\n  feederText = feederText.toUpperCase().trim();\r\n  for (let feeder of Object.values(Feeder)) {\r\n    if (feeder.toUpperCase().trim() === feederText) {\r\n      return feeder;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getMonths(): { month: string; monthNum: number }[] {\r\n  let months: { month: string; monthNum: number }[] = [];\r\n\r\n  let monthNum = 1;\r\n  for (let month of Object.values(Month)) {\r\n    if (isNaN(Number(month))) {\r\n      months.push({ month: String(month), monthNum });\r\n      monthNum++;\r\n    }\r\n  }\r\n\r\n  return months;\r\n}\r\n\r\nfunction getYears(): number[] {\r\n  let years: number[] = [];\r\n  let yearNow = new Date().getFullYear();\r\n  for (let year = 2012; year <= yearNow; year++) {\r\n    years.push(year);\r\n  }\r\n  return years;\r\n}\r\n\r\nexport { findFeeder, getMonths, getYears };\r\n","import { WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport ExcelUtil from \"../common/utils/ExcelUtil\";\r\nimport {\r\n  MonthlyInterruptionRawData,\r\n  MonthlyInterruptionCells,\r\n  MonthlyInterruptionSettings,\r\n} from \"./types\";\r\n\r\nimport { findFeeder } from \"../common/GeneralUtil\";\r\nimport XLSX from \"xlsx\";\r\nimport MonthlyInterruptionUtil from \"./MonthlyInterruptionUtil\";\r\n\r\nfunction extractRawDatasFromWorkbook(\r\n  filename: string,\r\n  workbook: WorkBook,\r\n  progressCallback: (info: string, progress: number) => void\r\n): Promise<{ value: MonthlyInterruptionRawData[]; errors: string[] }> {\r\n  return new Promise(async (resolve, reject) => {\r\n    let errors: string[] = [];\r\n    let value: MonthlyInterruptionRawData[] = [];\r\n\r\n    console.log(\"MonthllyInterruption Workbook: \");\r\n    console.log(workbook);\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      let worksheet = workbook.Sheets[sheetName];\r\n\r\n      progressCallback(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      if (!worksheet[\"!ref\"]) continue;\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await ExcelUtil.calculatePercent(row, totalRows);\r\n        progressCallback(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = MonthlyInterruptionUtil.loadSettings();\r\n          let cells = extractCells(worksheet, row, settings);\r\n          let rawData = extractDataFromCells(cells, settings);\r\n          value.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    resolve({ value, errors });\r\n  });\r\n}\r\n\r\nfunction extractDataFromCells(\r\n  rowCells: MonthlyInterruptionCells,\r\n  settings: MonthlyInterruptionSettings\r\n): MonthlyInterruptionRawData {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: MonthlyInterruptionRawData | null = null;\r\n\r\n  let dateCellData = ExcelUtil.extractDate(rowCells.date, settings.dateFormat);\r\n  let feederCellData = ExcelUtil.extractText(rowCells.feeder);\r\n  let durationCellData = ExcelUtil.extractNumber(rowCells.duration);\r\n\r\n  if (feederCellData.text) {\r\n    let feeder = findFeeder(feederCellData.text);\r\n    if (!feeder) {\r\n      feederCellData.error = `Feeder value ${feederCellData.text} does not match any of the registered feeders`;\r\n    }\r\n  }\r\n\r\n  anyErrors = Boolean(\r\n    dateCellData.error || durationCellData.error || feederCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowCells.row + 1}:\\n`;\r\n    if (durationCellData.error)\r\n      error = error.concat(`\\tDuration Cell: ${durationCellData.error}\\n`);\r\n    if (dateCellData.error)\r\n      error = error.concat(`\\tDate Cell: ${dateCellData.error}\\n`);\r\n    if (feederCellData.error)\r\n      error = error.concat(`\\tFeeder Cell: ${feederCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let duration = durationCellData.number as number;\r\n    let date = dateCellData.date as Date;\r\n    let feeder = feederCellData.text as string;\r\n    rawData = MonthlyInterruptionUtil.createRawDataObject(\r\n      duration,\r\n      feeder,\r\n      date\r\n    );\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  settings: MonthlyInterruptionSettings\r\n): MonthlyInterruptionCells {\r\n  //Builds the raw cell location {column, row}\r\n  let dateAddress = { c: settings.dateCol, r: row };\r\n  let feederAddress = { c: settings.feederCol, r: row };\r\n  let durationAddress = { c: settings.durationCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let dateRef = XLSX.utils.encode_cell(dateAddress);\r\n  let feederRef = XLSX.utils.encode_cell(feederAddress);\r\n  let durationRef = XLSX.utils.encode_cell(durationAddress);\r\n\r\n  return {\r\n    feeder: worksheet[feederRef],\r\n    date: worksheet[dateRef],\r\n    duration: worksheet[durationRef],\r\n    row,\r\n  };\r\n}\r\n\r\nconst MonthlyInterruptionExcelUtil = Object.freeze({\r\n  extractRawDatasFromWorkbook,\r\n});\r\n\r\nexport default MonthlyInterruptionExcelUtil;\r\n","import BillingPeriod from \"../common/BillingPeriod\";\r\nimport { PowerSubstationRawData, PowerSubstationSettings } from \"./types\";\r\n\r\nenum PowerSubstationSettingsKey {\r\n  FEEDER = \"ps_feeder\",\r\n  DEMAND = \"ps_demand\",\r\n  KWHRENERGY = \"ps_kwhrenergy\",\r\n  KVARHRENERGY = \"ps_kvarhrenergy\",\r\n}\r\n\r\nfunction saveSettings(settings: PowerSubstationSettings) {\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.DEMAND,\r\n    settings.demandKwhrCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.FEEDER,\r\n    settings.feederCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.KWHRENERGY,\r\n    settings.kwhrEnergyCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.KVARHRENERGY,\r\n    settings.kvarhrEnergyCol.toString()\r\n  );\r\n}\r\n\r\nfunction loadSettings(): PowerSubstationSettings {\r\n  return {\r\n    kvarhrEnergyCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.KVARHRENERGY)) ||\r\n      0,\r\n    kwhrEnergyCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.KWHRENERGY)) || 1,\r\n    demandKwhrCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.DEMAND)) || 2,\r\n    feederCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.FEEDER)) || 3,\r\n  };\r\n}\r\n\r\nfunction createRawData(\r\n  feeder: string,\r\n  kwhrEnergy: number,\r\n  kvarhrEnergy: number,\r\n  demandKwhr: number,\r\n  billingPeriod: BillingPeriod\r\n): PowerSubstationRawData {\r\n  return {\r\n    kwhrEnergy,\r\n    kvarhrEnergy,\r\n    demandKwhr,\r\n    billingPeriod,\r\n    feeder: feeder.toUpperCase().trim(),\r\n  };\r\n}\r\n\r\nconst PowerSubstationUtil = Object.freeze({\r\n  saveSettings,\r\n  loadSettings,\r\n  createRawData,\r\n});\r\n\r\nexport default PowerSubstationUtil;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FileUtil } from \"../../objects/common/utils\";\r\nimport MonthlyInterruptionExcelUtil from \"../../objects/monthly_interruption/MonthlyInterruptionExcelUtil\";\r\nimport { MonthlyInterruptionRawData } from \"../../objects/monthly_interruption/types\";\r\nimport { FilecardProps } from \"../filesdrawer/FileCard\";\r\n\r\ntype MonthlyInterruptionParserProps = {\r\n  file: File;\r\n  render: React.FunctionComponent<FilecardProps>;\r\n  onFileParsed: (rawDatas: MonthlyInterruptionRawData[]) => void;\r\n  onRemoveFile: (file: File) => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<MonthlyInterruptionParserProps> = (\r\n  props\r\n) => {\r\n  const { file, render, onFileParsed, onRemoveFile, ...others } = props;\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        return MonthlyInterruptionExcelUtil.extractRawDatasFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }, []);\r\n\r\n  function handleFileParsed(\r\n    monthlyInterruptionRawDatas: MonthlyInterruptionRawData[]\r\n  ) {\r\n    onFileParsed(monthlyInterruptionRawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoadProfileParser;\r\n","class MonthlyInterruptionItem {\r\n  feeder: string;\r\n  duration: number;\r\n\r\n  constructor(feeder: string, duration: number) {\r\n    this.feeder = feeder;\r\n    this.duration = duration;\r\n  }\r\n\r\n  addDuration(duration: number) {\r\n    this.duration += duration;\r\n  }\r\n}\r\n\r\nexport default MonthlyInterruptionItem;\r\n","import BillingPeriod from \"../common/BillingPeriod\";\r\nimport MonthlyInterruptionItem from \"./MonthlyInterruptionItem\";\r\nimport { MonthlyInterruptionRawData } from \"./types\";\r\n\r\nclass MonthlyInterruption {\r\n  billingPeriod: BillingPeriod;\r\n  items: Map<string, MonthlyInterruptionItem>;\r\n\r\n  constructor(billingPeriod: BillingPeriod) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.items = new Map();\r\n  }\r\n\r\n  addRawData(rawData: MonthlyInterruptionRawData) {\r\n    let key = rawData.feeder;\r\n    if (!this.items.has(key)) {\r\n      this.items.set(\r\n        key,\r\n        new MonthlyInterruptionItem(rawData.feeder, rawData.duration)\r\n      );\r\n    } else {\r\n      this.items.get(key)?.addDuration(rawData.duration);\r\n    }\r\n  }\r\n}\r\n\r\nexport default MonthlyInterruption;\r\n","import MonthlyInterruption from \"./MonthlyInterruption\";\r\nimport { MonthlyInterruptionRawData } from \"./types\";\r\n\r\nclass MonthlyMonthlyInterruption {\r\n  monthlyInterruptions: Map<string, MonthlyInterruption>;\r\n\r\n  constructor(monthlyMonthlyInterruption?: MonthlyMonthlyInterruption) {\r\n    if (monthlyMonthlyInterruption) {\r\n      this.monthlyInterruptions = new Map(\r\n        monthlyMonthlyInterruption.monthlyInterruptions\r\n      );\r\n    } else {\r\n      this.monthlyInterruptions = new Map();\r\n    }\r\n    console.log(\"MonthlyMonthly Interruption creaated...\");\r\n  }\r\n\r\n  addRawData(rawData: MonthlyInterruptionRawData) {\r\n    let key = rawData.billingPeriod.toString();\r\n    if (!this.monthlyInterruptions.has(key)) {\r\n      this.monthlyInterruptions.set(\r\n        key,\r\n        new MonthlyInterruption(rawData.billingPeriod)\r\n      );\r\n    }\r\n\r\n    this.monthlyInterruptions.get(key)?.addRawData(rawData);\r\n  }\r\n}\r\n\r\nexport default MonthlyMonthlyInterruption;\r\n","import React, { createContext, useEffect, useMemo, useState } from \"react\";\r\nimport Stack from \"../../objects/common/Stack\";\r\nimport { MonthlyInterruptionRawData } from \"../../objects/monthly_interruption/types\";\r\nimport MonthlyInterruption from \"../../objects/monthly_interruption/MonthlyInterruption\";\r\nimport MonthlyMonthlyInterruption from \"../../objects/monthly_interruption/MonthlyMonthlyInterruption\";\r\n\r\nexport type MonthlyInterruptionUpdatecallback = (\r\n  data: MonthlyMonthlyInterruption\r\n) => void;\r\n\r\ntype MonthlyInterruptionContextProps = {\r\n  addNewRawData: (rawDatas: MonthlyInterruptionRawData[]) => void;\r\n  monthlyInterruptions: MonthlyMonthlyInterruption;\r\n  addUpdateCallback: (callback: MonthlyInterruptionUpdatecallback) => void;\r\n};\r\n\r\nconst MonthlyIterruptionContext = createContext<\r\n  MonthlyInterruptionContextProps\r\n>({\r\n  addNewRawData: ([]) => {},\r\n  monthlyInterruptions: new MonthlyMonthlyInterruption(),\r\n  addUpdateCallback: () => {},\r\n});\r\n\r\ntype MonthlyInterruptionContextProviderProps = {};\r\n\r\nconst MonthlyInterruptionContextProvider: React.FunctionComponent<MonthlyInterruptionContextProviderProps> = (\r\n  props\r\n) => {\r\n  const [monthlyInterruptions, setMonthlyInterruptions] = useState<\r\n    MonthlyMonthlyInterruption\r\n  >();\r\n\r\n  const [updateCallbacks, setUpdateCallbacks] = useState<\r\n    MonthlyInterruptionUpdatecallback[]\r\n  >([]);\r\n\r\n  const [buffer, setBuffer] = useState<Stack<MonthlyInterruptionRawData[]>>(\r\n    new Stack()\r\n  );\r\n\r\n  useEffect(() => {\r\n    setMonthlyInterruptions(new MonthlyMonthlyInterruption());\r\n  }, []);\r\n  useEffect(() => {\r\n    updateCallbacks.forEach((callback) => {\r\n      callback(monthlyInterruptions as MonthlyMonthlyInterruption);\r\n    });\r\n  }, [monthlyInterruptions]);\r\n\r\n  useEffect(() => {\r\n    async function update() {\r\n      console.log(\"Checking if buffer is not empty...\");\r\n      if (!buffer.isEmpty()) {\r\n        try {\r\n          console.log(\"Buffer isn ot empty...\");\r\n          console.log(buffer);\r\n          let rawDatas = buffer.pop();\r\n          let result = await updateMonthlyInterruptions(\r\n            rawDatas as MonthlyInterruptionRawData[]\r\n          );\r\n          console.log(result);\r\n          setMonthlyInterruptions(result);\r\n          setBuffer(new Stack(buffer));\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n    }\r\n    update();\r\n  }, [buffer]);\r\n\r\n  function addNewRawData(rawdatas: MonthlyInterruptionRawData[]) {\r\n    setBuffer((prevBuffer) => {\r\n      console.log(\"Pushing to buffer....\");\r\n      prevBuffer.push(rawdatas);\r\n      return new Stack(prevBuffer);\r\n    });\r\n  }\r\n\r\n  function updateMonthlyInterruptions(rawDatas: MonthlyInterruptionRawData[]) {\r\n    return new Promise<MonthlyMonthlyInterruption>((resolve, reject) => {\r\n      console.log(\"Updating Monthly Interruptions....\");\r\n      let newMonthlyInterruptions = new MonthlyMonthlyInterruption(\r\n        monthlyInterruptions\r\n      );\r\n\r\n      for (let rawData of rawDatas) {\r\n        newMonthlyInterruptions.addRawData(rawData);\r\n      }\r\n      resolve(newMonthlyInterruptions);\r\n    });\r\n  }\r\n\r\n  function addUpdateCallback(callBack: MonthlyInterruptionUpdatecallback) {\r\n    setUpdateCallbacks((prevCallbacks) => {\r\n      return [...prevCallbacks, callBack];\r\n    });\r\n  }\r\n\r\n  return monthlyInterruptions ? (\r\n    <MonthlyIterruptionContext.Provider\r\n      value={{ addNewRawData, monthlyInterruptions, addUpdateCallback }}\r\n    >\r\n      {props.children}\r\n    </MonthlyIterruptionContext.Provider>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionContextProvider;\r\nexport { MonthlyIterruptionContext };\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { MonthlyInterruptionRawData } from \"../../../objects/monthly_interruption/types\";\r\nimport MonthlyInterruptionParser from \"../../monthly_interruption/MonthlyInterruptionParser\";\r\nimport CustomAccordion from \"../StyledAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport FileDrop from \"../FileDrop\";\r\nimport { MonthlyIterruptionContext } from \"../../monthly_interruption/MonthlyInterruptionContextProvider\";\r\n\r\ntype MonthlyInterruptionAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"mi_panel\";\r\nconst title = \"Monthly Interruption Files\";\r\n\r\nconst MonthlyInterruptionAccordion: React.FunctionComponent<MonthlyInterruptionAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  ...others\r\n}) => {\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n\r\n  const monthlyInterruptionContext = useContext(MonthlyIterruptionContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(rawDatas: MonthlyInterruptionRawData[]) {\r\n    monthlyInterruptionContext.addNewRawData(rawDatas);\r\n  }\r\n\r\n  function handleRemoveFile(file: File) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <MonthlyInterruptionParser\r\n              onFileParsed={handleFileParsed}\r\n              onRemoveFile={handleRemoveFile}\r\n              key={file.name}\r\n              file={file}\r\n              render={(props) => (\r\n                <FileCard\r\n                  progress={props.progress}\r\n                  progressInfo={props.progressInfo}\r\n                  file={props.file}\r\n                  errors={props.errors}\r\n                  onRemoveFile={props.onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionAccordion;\r\nexport { panelName };\r\n","import { WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport ExcelUtil from \"../common/utils/ExcelUtil\";\r\nimport PowerSubstationUtil from \"./PowerSubstationUtil\";\r\nimport {\r\n  PowerSubstationCells,\r\n  PowerSubstationRawData,\r\n  PowerSubstationSettings,\r\n} from \"./types\";\r\nimport PowerSubstation from \"./PowerSubstation\";\r\n\r\nimport { findFeeder } from \"../common/GeneralUtil\";\r\nimport XLSX from \"xlsx\";\r\nimport BillingPeriod from \"../common/BillingPeriod\";\r\n\r\nfunction extractRawDatasFromWorkbook(\r\n  filename: string,\r\n  workbook: WorkBook,\r\n  billingPeriod: BillingPeriod,\r\n  progressCallback: (info: string, progress: number) => void\r\n): Promise<{ value: PowerSubstationRawData[]; errors: string[] }> {\r\n  return new Promise(async (resolve, reject) => {\r\n    let errors: string[] = [];\r\n    let value: PowerSubstationRawData[] = [];\r\n\r\n    console.log(\"MonthllyInterruption Workbook: \");\r\n    console.log(workbook);\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      let worksheet = workbook.Sheets[sheetName];\r\n      progressCallback(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      if (!worksheet[\"!ref\"]) continue;\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await ExcelUtil.calculatePercent(row, totalRows);\r\n        progressCallback(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = PowerSubstationUtil.loadSettings();\r\n          let cells = extractCells(worksheet, row, settings);\r\n          let rawData = extractDataFromCells(cells, billingPeriod);\r\n          value.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    resolve({ value, errors });\r\n  });\r\n}\r\n\r\nfunction extractDataFromCells(\r\n  rowCells: PowerSubstationCells,\r\n  bililngPeriod: BillingPeriod\r\n): PowerSubstationRawData {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: PowerSubstationRawData | null = null;\r\n\r\n  let feederCellData = ExcelUtil.extractText(rowCells.feeder);\r\n  let kwhrEnergyCellData = ExcelUtil.extractNumber(rowCells.kwhrEnergy, false);\r\n  let demandKwhrCellData = ExcelUtil.extractNumber(rowCells.demandKwhr, false);\r\n  let kvarhrEnergyCelLData = ExcelUtil.extractNumber(\r\n    rowCells.kvarhrEnergy,\r\n    false\r\n  );\r\n\r\n  if (feederCellData.text) {\r\n    let feeder = findFeeder(feederCellData.text);\r\n    if (!feeder) {\r\n      feederCellData.error = `Feeder value ${feederCellData.text} does not match any of the registered feeders`;\r\n    }\r\n  }\r\n\r\n  anyErrors = Boolean(\r\n    kwhrEnergyCellData.error ||\r\n      demandKwhrCellData.error ||\r\n      kvarhrEnergyCelLData.error ||\r\n      feederCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowCells.row + 1}:\\n`;\r\n    if (kwhrEnergyCellData.error)\r\n      error = error.concat(`\\tKwhrEnergy Cell: ${kwhrEnergyCellData.error}\\n`);\r\n    if (demandKwhrCellData.error)\r\n      error = error.concat(\r\n        `\\tDemand KwhrEnergy Cell: ${demandKwhrCellData.error}\\n`\r\n      );\r\n    if (kvarhrEnergyCelLData.error)\r\n      error = error.concat(\r\n        `\\tKvarhrEnergy Cell: ${kvarhrEnergyCelLData.error}\\n`\r\n      );\r\n    if (feederCellData.error)\r\n      error = error.concat(`\\tFeeder Cell: ${feederCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let kwhrEnergy = kwhrEnergyCellData.number as number;\r\n    let kvarhrEnergy = kvarhrEnergyCelLData.number as number;\r\n    let demandKwhr = demandKwhrCellData.number as number;\r\n    let feeder = feederCellData.text as string;\r\n    rawData = PowerSubstationUtil.createRawData(\r\n      feeder,\r\n      kwhrEnergy,\r\n      kvarhrEnergy,\r\n      demandKwhr,\r\n      bililngPeriod\r\n    );\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  settings: PowerSubstationSettings\r\n): PowerSubstationCells {\r\n  //Builds the raw cell location {column, row}\r\n  let kwhrEnergyAddress = { c: settings.kwhrEnergyCol, r: row };\r\n  let demandKwhrAddress = { c: settings.demandKwhrCol, r: row };\r\n  let kvarhrEnergyAddress = { c: settings.kvarhrEnergyCol, r: row };\r\n  let feederAddress = { c: settings.feederCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let feederRef = XLSX.utils.encode_cell(feederAddress);\r\n  let kwhrEnergyRef = XLSX.utils.encode_cell(kwhrEnergyAddress);\r\n  let kvarhrEnergyRef = XLSX.utils.encode_cell(kvarhrEnergyAddress);\r\n  let demandKwhrRef = XLSX.utils.encode_cell(demandKwhrAddress);\r\n\r\n  return {\r\n    feeder: worksheet[feederRef],\r\n    kwhrEnergy: worksheet[kwhrEnergyRef],\r\n    demandKwhr: worksheet[demandKwhrRef],\r\n    kvarhrEnergy: worksheet[kvarhrEnergyRef],\r\n    row,\r\n  };\r\n}\r\n\r\nconst PowerSubstationExcelUtil = Object.freeze({\r\n  extractRawDatasFromWorkbook,\r\n});\r\n\r\nexport default PowerSubstationExcelUtil;\r\n","import { Tabs, Typography, Box } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport useStyles from \"./use-styles\";\r\nimport {\r\n  LoadProfileSettingsPanel,\r\n  MonthlyInterruptionSettingsPanel,\r\n} from \"./tabpanels\";\r\nimport { VerticalTab } from \"../common/components/tabs\";\r\nimport PowerSubstationPanel from \"./tabpanels/PowerSubstationPanel\";\r\n\r\ntype SettingsProps = {};\r\n\r\nenum SettingsTabs {\r\n  LOADPROFILE_TAB = \"lp_tab\",\r\n  MONTHLYINTERRUPTION_TAB = \"mi_tab\",\r\n  POWERSUBSTATION_TAB = \"ps_tab\",\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-prevent-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n      className={classes.tab_panel}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Settings: React.FunctionComponent<SettingsProps> = ({ ...others }) => {\r\n  const [selectedTab, setSelectedTab] = useState<string>(\r\n    SettingsTabs.LOADPROFILE_TAB\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title_div}>\r\n        <Typography className={classes.title}>Settings</Typography>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={selectedTab}\r\n          centered={false}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n        >\r\n          <VerticalTab\r\n            label=\"Load Profile Settings\"\r\n            value={SettingsTabs.LOADPROFILE_TAB}\r\n          />\r\n          <VerticalTab\r\n            value={SettingsTabs.MONTHLYINTERRUPTION_TAB}\r\n            label=\"Monthly Interruption Settings\"\r\n          />\r\n          <VerticalTab\r\n            value={SettingsTabs.POWERSUBSTATION_TAB}\r\n            label=\"Power Substation Settings\"\r\n          />\r\n        </Tabs>\r\n        <TabPanel value={selectedTab} index={SettingsTabs.LOADPROFILE_TAB}>\r\n          <LoadProfileSettingsPanel />\r\n        </TabPanel>\r\n        <TabPanel\r\n          value={selectedTab}\r\n          index={SettingsTabs.MONTHLYINTERRUPTION_TAB}\r\n        >\r\n          <MonthlyInterruptionSettingsPanel />\r\n        </TabPanel>\r\n        <TabPanel value={selectedTab} index={SettingsTabs.POWERSUBSTATION_TAB}>\r\n          <PowerSubstationPanel />\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Theme,\r\n  createStyles,\r\n  InputBase,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: theme.shape.borderRadius,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: theme.palette.divider,\r\n      fontSize: \"1rem\",\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\"]),\r\n      // Use the system font instead of the default Roboto font.\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus, &:hover\": {\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\ntype FormSelectFieldProps = {\r\n  value: string;\r\n  onChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\r\n  items: { value: string; text: string }[];\r\n  label: string;\r\n  className?: string;\r\n};\r\n\r\nconst FormSelectField: React.FunctionComponent<FormSelectFieldProps> = (\r\n  props\r\n) => {\r\n  const { value, onChange, items, label, className, ...others } = props;\r\n  return (\r\n    <FormControl className={className} {...others}>\r\n      <InputLabel id={props.label}>{props.label}</InputLabel>\r\n      <Select\r\n        labelId={label}\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<BootstrapInput />}\r\n      >\r\n        {items.map((item) => {\r\n          return <MenuItem value={item.value}>{item.text}</MenuItem>;\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormSelectField;\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { FormEvent, useEffect, useState } from \"react\";\r\nimport BillingPeriod from \"../../objects/common/BillingPeriod\";\r\nimport { FileUtil } from \"../../objects/common/utils\";\r\nimport PowerSubstationExcelUtil from \"../../objects/power_substation/PowerSubstationExcelUtil\";\r\nimport { PowerSubstationRawData } from \"../../objects/power_substation/types\";\r\nimport FormSelectFields from \"../common/components/textfields/FormSelectField\";\r\nimport { FilecardProps } from \"../filesdrawer/FileCard\";\r\nimport { getYears, getMonths } from \"../../objects/common/GeneralUtil\";\r\n\r\ntype PowerSubstationParserProps = {\r\n  file: File;\r\n  render: React.FunctionComponent<FilecardProps>;\r\n  onFileParsed: (rawDatas: PowerSubstationRawData[]) => void;\r\n  onRemoveFile: (file: File) => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<PowerSubstationParserProps> = (\r\n  props\r\n) => {\r\n  const { file, render, onFileParsed, onRemoveFile, ...others } = props;\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [openBillingPeriodDialog, setOpenBillingPeriodDialog] = useState(true);\r\n  const [billingYear, setBillingYear] = useState(new Date().getFullYear());\r\n  const [billingMonth, setBillingMonth] = useState(new Date().getMonth() + 1);\r\n  const [billingPeriod, setBillingPeriod] = useState<BillingPeriod | null>(\r\n    null\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (billingPeriod) {\r\n      startParsing();\r\n    }\r\n  }, [billingPeriod]);\r\n\r\n  function startParsing() {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        let bp = billingPeriod;\r\n        return PowerSubstationExcelUtil.extractRawDatasFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          bp as BillingPeriod,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }\r\n\r\n  function handleFileParsed(rawDatas: PowerSubstationRawData[]) {\r\n    onFileParsed(rawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file);\r\n  }\r\n\r\n  function handleYearChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setBillingYear(Number(event.target.value));\r\n  }\r\n\r\n  function handleMonthChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setBillingMonth(Number(event.target.value));\r\n  }\r\n\r\n  function handleSubmit(event: FormEvent<HTMLElement>) {\r\n    event.preventDefault();\r\n    setBillingPeriod(new BillingPeriod(billingMonth, billingYear));\r\n    setOpenBillingPeriodDialog(false);\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n      <Dialog open={openBillingPeriodDialog}>\r\n        <DialogTitle>{`Input Billing Period for ${file.name}`}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter the billing month (in numbers) and the billing year (number)\r\n            e.g. 5 2020 = ( April 26 ~ May 25 2020)\r\n          </DialogContentText>\r\n          <form\r\n            id=\"billing-period-form\"\r\n            className={classes.form}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <FormSelectFields\r\n              className={classes.billingYear}\r\n              value={billingYear.toString()}\r\n              label=\"Year\"\r\n              onChange={handleYearChange}\r\n              items={getYears().map((year) => ({\r\n                value: year.toString(),\r\n                text: year.toString(),\r\n              }))}\r\n            />\r\n            <FormSelectFields\r\n              value={billingMonth.toString()}\r\n              label=\"Month\"\r\n              onChange={handleMonthChange}\r\n              items={getMonths().map((month) => ({\r\n                value: month.monthNum.toString(),\r\n                text: month.month.toString(),\r\n              }))}\r\n            />\r\n          </form>\r\n          <DialogActions>\r\n            <Button form=\"billing-period-form\" type=\"submit\">\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    form: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(3),\r\n      maxWidth: \"300px\",\r\n    },\r\n    billingYear: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileParser;\r\n","import { PowerSubstationRawData } from \"./types\";\r\n\r\nclass PowerSubstationItem {\r\n  demandKwhr: number;\r\n  kvarhrEnergy: number;\r\n  kwhrEnergy: number;\r\n  feeder: string;\r\n\r\n  constructor(rawData: PowerSubstationRawData) {\r\n    this.demandKwhr = rawData.demandKwhr;\r\n    this.kvarhrEnergy = rawData.kvarhrEnergy;\r\n    this.kwhrEnergy = rawData.kwhrEnergy;\r\n    this.feeder = rawData.feeder;\r\n  }\r\n}\r\n\r\nexport default PowerSubstationItem;\r\n","import { Month } from \"../../components/enums\";\r\nimport BillingPeriod from \"../common/BillingPeriod\";\r\nimport PowerSubstationItem from \"./PowerSubstationItem\";\r\nimport { PowerSubstationRawData } from \"./types\";\r\n\r\nclass PowerSubstation {\r\n  items: Map<string, PowerSubstationItem>;\r\n  billingPeriod: BillingPeriod;\r\n\r\n  constructor(billingPeriod: BillingPeriod) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.items = new Map();\r\n  }\r\n\r\n  addRawData(rawData: PowerSubstationRawData) {\r\n    this.items.set(rawData.feeder, new PowerSubstationItem(rawData));\r\n  }\r\n}\r\n\r\nexport default PowerSubstation;\r\n","import PowerSubstation from \"./PowerSubstation\";\r\nimport { PowerSubstationRawData } from \"./types\";\r\n\r\nclass MonthlyPowerSubstation {\r\n  powerSubstations: Map<string, PowerSubstation>;\r\n\r\n  constructor(monthlyPowerSubstation?: MonthlyPowerSubstation) {\r\n    if (monthlyPowerSubstation) {\r\n      this.powerSubstations = new Map(monthlyPowerSubstation.powerSubstations);\r\n    } else {\r\n      this.powerSubstations = new Map();\r\n    }\r\n    console.log(\"Monthly Power Substation Created...\");\r\n  }\r\n\r\n  addRawData(rawData: PowerSubstationRawData) {\r\n    let key = rawData.billingPeriod.toString();\r\n    if (!this.powerSubstations.has(key)) {\r\n      this.powerSubstations.set(\r\n        key,\r\n        new PowerSubstation(rawData.billingPeriod)\r\n      );\r\n    }\r\n    this.powerSubstations.get(key)?.addRawData(rawData);\r\n  }\r\n}\r\n\r\nexport default MonthlyPowerSubstation;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport Stack from \"../../objects/common/Stack\";\r\nimport { PowerSubstationRawData } from \"../../objects/power_substation/types\";\r\nimport MonthlyPowerSubstation from \"../../objects/power_substation/MonthlyPowerSubstation\";\r\n\r\nexport type PowerSubstationUpdateCallback = (\r\n  data: MonthlyPowerSubstation\r\n) => void;\r\n\r\ntype PowerSubstationContextProps = {\r\n  addNewRawDatas: (rawDatas: PowerSubstationRawData[]) => void;\r\n  monthlyPowerSubstation: MonthlyPowerSubstation;\r\n  addUpdateCallback: (callback: PowerSubstationUpdateCallback) => void;\r\n};\r\nconst PowerSubstationContext = createContext<PowerSubstationContextProps>({\r\n  addNewRawDatas: ([]) => {},\r\n  monthlyPowerSubstation: new MonthlyPowerSubstation(),\r\n  addUpdateCallback: () => {},\r\n});\r\n\r\ntype PowerSubstationContextProviderProps = {};\r\n\r\nconst PowerSubstationContextProvider: React.FunctionComponent<PowerSubstationContextProviderProps> = (\r\n  props\r\n) => {\r\n  const [monthlyPowerSubstation, setMonthlyPowerSubstations] = useState<\r\n    MonthlyPowerSubstation\r\n  >();\r\n  const [buffer, setBuffer] = useState<Stack<PowerSubstationRawData[]>>(\r\n    new Stack()\r\n  );\r\n\r\n  const [updatecallbacks, setUpdateCallbacks] = useState<\r\n    PowerSubstationUpdateCallback[]\r\n  >([]);\r\n  useEffect(() => {\r\n    async function doSomething() {\r\n      console.log(\"checking if buffer is empty...\");\r\n      if (!buffer.isEmpty()) {\r\n        let rawData = buffer.pop();\r\n        let result = await updateMonhlyPowerSubstation(\r\n          rawData as PowerSubstationRawData[]\r\n        );\r\n        console.log(result);\r\n        setMonthlyPowerSubstations(result);\r\n        setBuffer(new Stack(buffer));\r\n      } else {\r\n        console.log(\"buffer is empty\");\r\n      }\r\n    }\r\n\r\n    doSomething();\r\n  }, [buffer]);\r\n\r\n  useEffect(() => {\r\n    setMonthlyPowerSubstations(new MonthlyPowerSubstation());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updatecallbacks.forEach((callback) => {\r\n      if (monthlyPowerSubstation) {\r\n        callback(monthlyPowerSubstation);\r\n      }\r\n    });\r\n  }, [monthlyPowerSubstation]);\r\n\r\n  function updateMonhlyPowerSubstation(\r\n    rawDatas: PowerSubstationRawData[]\r\n  ): Promise<MonthlyPowerSubstation> {\r\n    return new Promise((resolve, reject) => {\r\n      let newMonthlyPowerSubstations = new MonthlyPowerSubstation(\r\n        monthlyPowerSubstation\r\n      );\r\n\r\n      for (let rawData of rawDatas) {\r\n        newMonthlyPowerSubstations.addRawData(rawData);\r\n      }\r\n      resolve(newMonthlyPowerSubstations);\r\n    });\r\n  }\r\n\r\n  function addNewRawDatas(rawDatas: PowerSubstationRawData[]) {\r\n    setBuffer((prevBuffer) => {\r\n      prevBuffer.push(rawDatas);\r\n      return new Stack(prevBuffer);\r\n    });\r\n  }\r\n\r\n  function addUpdateCallback(callback: PowerSubstationUpdateCallback) {\r\n    setUpdateCallbacks((prevCallbacks) => [...prevCallbacks, callback]);\r\n  }\r\n\r\n  return monthlyPowerSubstation ? (\r\n    <PowerSubstationContext.Provider\r\n      value={{ addNewRawDatas, monthlyPowerSubstation, addUpdateCallback }}\r\n    >\r\n      {props.children}\r\n    </PowerSubstationContext.Provider>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default PowerSubstationContextProvider;\r\nexport { PowerSubstationContext };\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CustomAccordion from \"../StyledAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport FileDrop from \"../FileDrop\";\r\nimport PowerSubstationParser from \"../../power_substation/PowerSubstationParser\";\r\nimport { PowerSubstationRawData } from \"../../../objects/power_substation/types\";\r\nimport { PowerSubstationContext } from \"../../power_substation/PowerSubstationContextProvider\";\r\n\r\ntype MonthlyInterruptionAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"ps_panel\";\r\nconst title = \"Power Substation Files\";\r\n\r\nconst MonthlyInterruptionAccordion: React.FunctionComponent<MonthlyInterruptionAccordionProps> = (\r\n  props\r\n) => {\r\n  const { expandedPanel, onPanelChange, ...others } = props;\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n  const powerSubstationContext = useContext(PowerSubstationContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(rawDatas: PowerSubstationRawData[]) {\r\n    powerSubstationContext.addNewRawDatas(rawDatas);\r\n  }\r\n\r\n  function handleRemoveFile(file: File) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <PowerSubstationParser\r\n              onFileParsed={handleFileParsed}\r\n              onRemoveFile={handleRemoveFile}\r\n              key={file.name}\r\n              file={file}\r\n              render={(props) => (\r\n                <FileCard\r\n                  progress={props.progress}\r\n                  progressInfo={props.progressInfo}\r\n                  file={props.file}\r\n                  errors={props.errors}\r\n                  onRemoveFile={props.onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionAccordion;\r\nexport { panelName };\r\n","import FilesDrawer from \"./FilesDrawer\";\r\nimport useStyles, { drawerWidth } from \"./use-styles\";\r\n\r\nexport default FilesDrawer;\r\nexport { drawerWidth, useStyles };\r\n","import { Drawer } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport useStyles from \"./use-styles\";\r\nimport LoadProfileAccordion, {\r\n  panelName as loadProfilePanelName,\r\n} from \"./accordions/LoadProfileAccordion\";\r\nimport MonthlyInterruptionAccordion from \"./accordions/MonthlyInterruptionAccordion\";\r\nimport PowerSubstationAccordion from \"./accordions/PowerSubstationAccordion\";\r\n\r\ntype FilesDrawerProps = {\r\n  open: boolean;\r\n};\r\n\r\nconst FilesDrawer: React.FunctionComponent<FilesDrawerProps> = ({\r\n  open,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [expandedPanel, setExpandedPanel] = useState<string>(\r\n    loadProfilePanelName\r\n  );\r\n\r\n  function handlePanelChange(newExpandedPanel: string) {\r\n    setExpandedPanel(newExpandedPanel);\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"persistent\"\r\n      open={open}\r\n      anchor=\"left\"\r\n      className={classes.drawer}\r\n      classes={{ paper: classes.drawerPaper }}\r\n    >\r\n      <LoadProfileAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n      <MonthlyInterruptionAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n      <PowerSubstationAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default FilesDrawer;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    background: theme.palette.background.paper,\r\n    padding: theme.spacing(3),\r\n    fontSize: \"1rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    zIndex: theme.zIndex.mobileStepper,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    minHeight: 0,\r\n  },\r\n  title_div: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(5),\r\n    fontSize: \"1.3em\",\r\n  },\r\n  tabs: {\r\n    display: \"inline-block\",\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n  tab_panel: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { FormEvent } from \"react\";\r\nimport { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\ntype LoadProfileSettingsProps = {\r\n  onSubmit: (event: FormEvent<HTMLFormElement>) => void;\r\n  children: any;\r\n};\r\n\r\nconst LoadProfileSettingsPanel: React.FunctionComponent<LoadProfileSettingsProps> = (\r\n  props\r\n) => {\r\n  const { onSubmit, children, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    onSubmit(event);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form\r\n        id=\"settings-form\"\r\n        className={classes.textFieldContainer}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {children}\r\n      </form>\r\n      <div className={classes.actionContainer}>\r\n        <Button form=\"settings-form\" type=\"submit\" color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    textFieldContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"10px\",\r\n      width: \"300px\",\r\n      fontSize: \"0.9rem\",\r\n    },\r\n    actionContainer: {\r\n      marginTop: 10,\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileSettingsPanel;\r\n","import { makeStyles, TextField, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    fontSize: \"1em\",\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: theme.palette.background.paper,\r\n    \"&.Mui-focused\": {\r\n      backgroundColor: theme.palette.background.default,\r\n      border: `1px solid ${theme.palette.primary.main}`,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    focused: {},\r\n  },\r\n}));\r\n\r\ntype FormTextFieldProps = {\r\n  value?: string | number;\r\n  name?: string;\r\n  label?: string;\r\n  placeholder?: string;\r\n  helpertext?: string;\r\n  error?: boolean;\r\n  type?: string;\r\n  limitZero?: boolean;\r\n  onChange?: (\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => void;\r\n};\r\n\r\nconst FormTextField: React.FunctionComponent<FormTextFieldProps> = ({\r\n  label,\r\n  value = \"\",\r\n  name = \"\",\r\n  placeholder = \"\",\r\n  helpertext = \"\",\r\n  error = false,\r\n  type = \"text\",\r\n  onChange = (event) => {},\r\n  limitZero = true,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function handleChange(\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) {\r\n    if (type === \"number\" && Number(event.target.value) < 0) {\r\n      return;\r\n    } else {\r\n      onChange(event);\r\n    }\r\n  }\r\n  return (\r\n    <TextField\r\n      variant=\"filled\"\r\n      label={label}\r\n      value={value}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      error={error}\r\n      helperText={helpertext}\r\n      type={type}\r\n      InputProps={{\r\n        disableUnderline: true,\r\n        classes: { root: classes.root },\r\n      }}\r\n      margin=\"dense\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormTextField;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\n\r\nimport { LoadProfileStorage } from \"../../loadprofile\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport FormTextField from \"../../common/components/textfields/FormTextField\";\r\n\r\ntype LoadProfileSettingsProps = {};\r\n\r\nconst LoadProfileSettingsPanel: React.FunctionComponent<LoadProfileSettingsProps> = ({\r\n  ...others\r\n}) => {\r\n  const [kwdel, setKwdel] = useState(0);\r\n  const [khwdel, setKwhdel] = useState(0);\r\n  const [date, setDate] = useState(0);\r\n  const [time, setTime] = useState(0);\r\n  const [dateFormat, setDateFormat] = useState(\"\");\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let lpSettings = LoadProfileStorage.loadSettings();\r\n    setKwdel(lpSettings.kwdelCol);\r\n    setKwhdel(lpSettings.kwhdelCol);\r\n    setDateFormat(lpSettings.dateFormat);\r\n    setDate(lpSettings.dateCol);\r\n    setTime(lpSettings.timeCol);\r\n    setTimeFormat(lpSettings.timeFormat);\r\n  }, []);\r\n\r\n  function handleKwdelChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwdel(Number(event.target.value));\r\n  }\r\n\r\n  function handleKwhdelChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwhdel(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDate(Number(event.target.value));\r\n  }\r\n\r\n  function handleTimeChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setTime(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateFormat(event.target.value);\r\n  }\r\n\r\n  function handleTimeFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setTimeFormat(event.target.value);\r\n  }\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    LoadProfileStorage.saveSettings({\r\n      kwdelCol: kwdel,\r\n      timeCol: time,\r\n      dateCol: date,\r\n      dateFormat,\r\n      timeFormat,\r\n      kwhdelCol: khwdel,\r\n    });\r\n    alert(\"Load profile settings saved\");\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Kwdel Column#\"\r\n        placeholder=\"Kwdel Column#\"\r\n        value={kwdel}\r\n        type=\"number\"\r\n        onChange={handleKwdelChange}\r\n        helpertext=\"the column# of the kwdel value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Kwhdel Column#\"\r\n        placeholder=\"Kwhdel Column#\"\r\n        value={khwdel}\r\n        type=\"number\"\r\n        onChange={handleKwhdelChange}\r\n        helpertext=\"the column# of the kwhdel value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Date Column#\"\r\n        placeholder=\"Date Column#\"\r\n        value={date}\r\n        type=\"number\"\r\n        onChange={handleDateChange}\r\n        helpertext=\"the column# of the date value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Time Column#\"\r\n        placeholder=\"Time Column#\"\r\n        value={time}\r\n        type=\"number\"\r\n        onChange={handleTimeChange}\r\n        helpertext=\"the column# of the time value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Date Format\"\r\n        placeholder=\"Date Format\"\r\n        value={dateFormat}\r\n        onChange={handleDateFormatChange}\r\n        helpertext=\"(MM/DD/YYYY) = '09/22/2020', (MMMM/DD/YYYY) = 'September/22/2020'  \"\r\n      />\r\n      <FormTextField\r\n        label=\"Time Format\"\r\n        placeholder=\"Time Format\"\r\n        value={timeFormat}\r\n        onChange={handleTimeFormatChange}\r\n        helpertext=\"(HH:mm) = '22:15', (hh:mm a) = '10:15 pm', (HH:mm:ss) = '22:15:13' \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default LoadProfileSettingsPanel;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport FormTextField from \"../../common/components/textfields/FormTextField\";\r\nimport MonthlyInterruptionUtil from \"../../../objects/monthly_interruption/MonthlyInterruptionUtil\";\r\n\r\ntype MonthlyInterruptionPanelProps = {};\r\n\r\nconst MonthlyInterruptionPanel: React.FunctionComponent<MonthlyInterruptionPanelProps> = (\r\n  props\r\n) => {\r\n  const { ...others } = props;\r\n\r\n  const [durationCol, setDurationCol] = useState(0);\r\n  const [dateCol, setDateCol] = useState(0);\r\n  const [feederCol, setFeederCol] = useState(0);\r\n  const [dateFormat, setDateFormat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let settings = MonthlyInterruptionUtil.loadSettings();\r\n    setDurationCol(settings.durationCol);\r\n    setDateCol(settings.dateCol);\r\n    setFeederCol(settings.feederCol);\r\n    setDateFormat(settings.dateFormat);\r\n  }, []);\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    MonthlyInterruptionUtil.saveSettings({\r\n      dateCol,\r\n      durationCol,\r\n      feederCol,\r\n      dateFormat,\r\n    });\r\n\r\n    alert(\"Monthly Interruption Settings Saved\");\r\n  }\r\n\r\n  function handleDurationColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDurationCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateFormat(event.target.value);\r\n  }\r\n\r\n  function handleFeederColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setFeederCol(Number(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Feeder Column#\"\r\n        placeholder=\"Feeder Column#\"\r\n        value={feederCol}\r\n        type=\"number\"\r\n        onChange={handleFeederColChange}\r\n        helpertext=\"the column# of the feeder value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Duration Column#\"\r\n        placeholder=\"Duration Column#\"\r\n        value={durationCol}\r\n        type=\"number\"\r\n        onChange={handleDurationColChange}\r\n        helpertext=\"the column# of the duration value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Date Column#\"\r\n        placeholder=\"Date Column#\"\r\n        value={dateCol}\r\n        type=\"number\"\r\n        onChange={handleDateColChange}\r\n        helpertext=\"the column# of the date value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Date Format\"\r\n        placeholder=\"Date Format\"\r\n        value={dateFormat}\r\n        onChange={handleDateFormatChange}\r\n        helpertext=\"(MM/DD/YYYY) = '09/22/2020', (MMMM/DD/YYYY) = 'September/22/2020'  \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionPanel;\r\n","import { makeStyles, Tab, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype VerticalTabProps = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    textAlign: \"start\",\r\n    textTransform: \"none\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"0.9em\",\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  tab_selected: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tab_wrapper: {\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n}));\r\n\r\nconst VerticalTab: React.FunctionComponent<VerticalTabProps> = ({\r\n  label,\r\n  value,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      classes={{\r\n        root: classes.tab,\r\n        wrapper: classes.tab_wrapper,\r\n        selected: classes.tab_selected,\r\n      }}\r\n      value={value}\r\n      label={label}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalTab;\r\n","import { makeStyles, Tab, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype HorizontalTabProps = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    textAlign: \"start\",\r\n    textTransform: \"none\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"0.9em\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    padding: 0,\r\n    minWidth: \"100px\",\r\n    lineHeight: 0,\r\n  },\r\n  tab_selected: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tab_wrapper: {},\r\n}));\r\n\r\nconst HorizontalTab: React.FunctionComponent<HorizontalTabProps> = ({\r\n  label,\r\n  value,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      classes={{\r\n        root: classes.tab,\r\n        wrapper: classes.tab_wrapper,\r\n        selected: classes.tab_selected,\r\n      }}\r\n      value={value}\r\n      label={label}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalTab;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport FormTextField from \"../../common/components/textfields/FormTextField\";\r\nimport PowerSubstationUtil from \"../../../objects/power_substation/PowerSubstationUtil\";\r\n\r\ntype PowerSubstationPanelProps = {};\r\n\r\nconst PowerSubstationPanel: React.FunctionComponent<PowerSubstationPanelProps> = (\r\n  props\r\n) => {\r\n  const { ...others } = props;\r\n\r\n  const [demandCol, setDemandCol] = useState(0);\r\n  const [kwhrEnergyCol, setKwhrEnergyCol] = useState(0);\r\n  const [feederCol, setFeederCol] = useState(0);\r\n  const [kvarhrEnergyCol, setKvarhrEnergyCol] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let settings = PowerSubstationUtil.loadSettings();\r\n    setDemandCol(settings.demandKwhrCol);\r\n    setKwhrEnergyCol(settings.kwhrEnergyCol);\r\n    setFeederCol(settings.feederCol);\r\n    setKvarhrEnergyCol(settings.kvarhrEnergyCol);\r\n  }, []);\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    PowerSubstationUtil.saveSettings({\r\n      kwhrEnergyCol,\r\n      demandKwhrCol: demandCol,\r\n      feederCol,\r\n      kvarhrEnergyCol,\r\n    });\r\n\r\n    alert(\"Power Substation Settings Saved\");\r\n  }\r\n\r\n  function handleDemandChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDemandCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleKvarhrEnergyChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKvarhrEnergyCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleFeederColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setFeederCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleKwhrEnergyChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwhrEnergyCol(Number(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Kwhr Energy Column#\"\r\n        placeholder=\"Kwhr Energy Column#\"\r\n        value={kwhrEnergyCol}\r\n        type=\"number\"\r\n        onChange={handleKwhrEnergyChange}\r\n        helpertext=\"the column# of the kwhr energy value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Demand Column#\"\r\n        placeholder=\"Demand Column#\"\r\n        value={demandCol}\r\n        type=\"number\"\r\n        onChange={handleDemandChange}\r\n        helpertext=\"the column# of the demand value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Kvarhr Energy Column#\"\r\n        placeholder=\"Kvarhr Energy Column#\"\r\n        value={kvarhrEnergyCol}\r\n        type=\"number\"\r\n        onChange={handleKvarhrEnergyChange}\r\n        helpertext=\"the column# of the kvarhr value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Feeder Column#\"\r\n        placeholder=\"Feeder Column#\"\r\n        value={feederCol}\r\n        onChange={handleFeederColChange}\r\n        type=\"number\"\r\n        helpertext=\"the column# of the feeder value, note: column starts at 0 \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default PowerSubstationPanel;\r\n","import Settings from \"./Settings\";\r\n\r\nexport default Settings;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(3),\r\n\r\n      color: theme.palette.text.primary,\r\n      \"&:hover > $content\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      \"&:focus > $content, &$selected > $content\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.primary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"$expanded > &\": {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      \"& $content\": {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n    labelRoot: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: `${theme.spacing(2)}px`,\r\n      padding: theme.spacing(0.5, 1),\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: \"normal\",\r\n      flexGrow: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useTreeItemStyles;\r\n","import { SvgIconProps, Typography } from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\n\r\ndeclare module \"csstype\" {\r\n  interface Properties {\r\n    \"--tree-view-color\"?: string;\r\n    \"--tree-view-bg-color\"?: string;\r\n  }\r\n}\r\n\r\ntype StyledTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n  labelInfo?: string;\r\n  labelText: string;\r\n};\r\n\r\nfunction StyledTreeItem(props: StyledTreeItemProps) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          <Typography variant=\"body2\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default StyledTreeItem;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport {\r\n  ArrowDownward,\r\n  ArrowRight,\r\n  Functions,\r\n  TrendingUp,\r\n} from \"@material-ui/icons\";\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\n\r\ntype DetailsTreeProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst DetailsTree: React.FunctionComponent<DetailsTreeProps> = (props) => {\r\n  const { monthlyLoadProfile, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={[\"1\"]}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }}></div>}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"2\"\r\n        labelText=\"Coincident Peak\"\r\n        labelIcon={TrendingUp}\r\n        labelInfo={\r\n          monthlyLoadProfile.coincidentPeak\r\n            ? `${monthlyLoadProfile.coincidentPeak.meteringPoint}: ${\r\n                monthlyLoadProfile.coincidentPeak.date.getMonth() + 1\r\n              }/${monthlyLoadProfile.coincidentPeak.date.getDate()}/${monthlyLoadProfile.coincidentPeak.date.getFullYear()} ${\r\n                monthlyLoadProfile.coincidentPeak.hour\r\n              }:00 kwdel: ${monthlyLoadProfile.coincidentPeak.kwdel.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"3\"\r\n        labelText=\"None Coincident Peak\"\r\n        labelIcon={Functions}\r\n        labelInfo={\r\n          monthlyLoadProfile.nonCoincidentPeak\r\n            ? ` ${monthlyLoadProfile.nonCoincidentPeak.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"4\"\r\n        labelText=\"Diversity Factor:\"\r\n        labelIcon={Functions}\r\n        labelInfo={\r\n          monthlyLoadProfile.diversityFactor\r\n            ? ` ${monthlyLoadProfile.diversityFactor.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"5\"\r\n        labelText=\"Max per metering point:\"\r\n        labelIcon={TrendingUp}\r\n        labelInfo={\"\"}\r\n      >\r\n        {monthlyLoadProfile.loadProfilesMax.map((lpMax) => {\r\n          return (\r\n            <StyledTreeItem\r\n              key={`LM:S${lpMax.meteringPoint}`}\r\n              nodeId={`LM:S${lpMax.meteringPoint}`}\r\n              labelIcon={TrendingUp}\r\n              labelText={`${lpMax.meteringPoint}`}\r\n              labelInfo={` ${\r\n                lpMax.date.getMonth() + 1\r\n              }/${lpMax.date.getDate()}/${lpMax.date.getFullYear()} ${\r\n                lpMax.hour\r\n              }:00 kwdel: ${lpMax.kwdel.toFixed(2)}`}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n      <StyledTreeItem\r\n        nodeId=\"7\"\r\n        labelText=\"Sum per metering point:\"\r\n        labelIcon={Functions}\r\n        labelInfo={\"\"}\r\n      >\r\n        {monthlyLoadProfile.loadProfilesSum.map((lpSum) => {\r\n          return (\r\n            <StyledTreeItem\r\n              key={`LS:S${lpSum.meteringPoint}`}\r\n              nodeId={`LS:S${lpSum.meteringPoint}`}\r\n              labelIcon={Functions}\r\n              labelText={`${lpSum.meteringPoint}`}\r\n              labelInfo={` ${lpSum.kwhdel.toFixed(2)}`}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n  })\r\n);\r\n\r\nexport default DetailsTree;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport { LoadProfile } from \"../../../loadprofile/objects\";\r\nimport React, { useEffect } from \"react\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\n\r\ntype HourTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  loadProfiles: LoadProfile[];\r\n  totalLoadProfile: LoadProfile;\r\n  dateString?: string;\r\n  hour?: number;\r\n  header?: boolean;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    labelContent: {\r\n      width: \"120px\",\r\n      fontWeight: \"normal\",\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nfunction HourTreeItem(props: HourTreeItemProps) {\r\n  const treeItemClasses = useTreeItemStyles();\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    bgColor,\r\n    loadProfiles,\r\n    dateString = \"\",\r\n    hour = 1,\r\n    header = false,\r\n    totalLoadProfile,\r\n    ...other\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(\"HourTreeItemRendered: Hour: \" + hour);\r\n  }, []);\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={treeItemClasses.labelRoot}>\r\n          <Box minWidth=\"35px\">\r\n            {header ? (\r\n              <Typography variant=\"body2\" className={treeItemClasses.labelText}>\r\n                Hour\r\n              </Typography>\r\n            ) : (\r\n              <Typography variant=\"body2\" className={treeItemClasses.labelText}>\r\n                {hour}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n          {header\r\n            ? loadProfiles.map((loadProfile) => {\r\n                return (\r\n                  <Typography\r\n                    key={`HTI: T: M:${loadProfile.meteringPoint}`}\r\n                    variant=\"body2\"\r\n                    className={classes.labelContent}\r\n                  >\r\n                    {loadProfile.meteringPoint}\r\n                  </Typography>\r\n                );\r\n              })\r\n            : loadProfiles.map((loadProfile) => {\r\n                return (\r\n                  <Typography\r\n                    key={`HTI: T: K:${loadProfile.meteringPoint}`}\r\n                    variant=\"body2\"\r\n                    className={classes.labelContent}\r\n                  >\r\n                    {loadProfile\r\n                      .getDailyLoadProfile(dateString)\r\n                      .hourlyLoadProfiles[hour - 1].getTotalKwdel()\r\n                      .toFixed(2)}\r\n                  </Typography>\r\n                );\r\n              })}\r\n          {header ? (\r\n            <Typography\r\n              className={classes.labelContent}\r\n              variant=\"caption\"\r\n              color=\"inherit\"\r\n            >\r\n              {`Total `}\r\n            </Typography>\r\n          ) : (\r\n            <Typography\r\n              className={classes.labelContent}\r\n              variant=\"caption\"\r\n              color=\"inherit\"\r\n            >\r\n              {totalLoadProfile\r\n                .getDailyLoadProfile(dateString)\r\n                .hourlyLoadProfiles[hour - 1].getRawTotal()\r\n                .toFixed(2)}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: treeItemClasses.root,\r\n        content: treeItemClasses.content,\r\n        expanded: treeItemClasses.expanded,\r\n        selected: treeItemClasses.selected,\r\n        group: treeItemClasses.group,\r\n        label: treeItemClasses.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HourTreeItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\nimport { Today } from \"@material-ui/icons\";\r\nimport { Month } from \"../../../enums\";\r\nimport HourTreeItem from \"./HourTreeItem\";\r\n\r\ntype DayTreeProps = {\r\n  loadProfiles: LoadProfile[];\r\n  totalLoadProfile: LoadProfile;\r\n  dateString: string;\r\n  nodeId: string;\r\n};\r\n\r\nconst DayTree = (props: DayTreeProps) => {\r\n  const { loadProfiles, dateString, nodeId, totalLoadProfile } = props;\r\n\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    setDate(new Date(dateString));\r\n  }, [dateString]);\r\n\r\n  return (\r\n    <StyledTreeItem\r\n      nodeId={nodeId}\r\n      labelText={`${Month[date.getMonth()]} ${date.getDate()}`}\r\n      labelIcon={Today}\r\n    >\r\n      <HourTreeItem\r\n        nodeId={`DTI:D:${dateString}H`}\r\n        dateString={dateString}\r\n        header={true}\r\n        loadProfiles={loadProfiles}\r\n        totalLoadProfile={totalLoadProfile}\r\n      />\r\n      {[...Array(24).keys()].map((hour) => {\r\n        return (\r\n          <HourTreeItem\r\n            nodeId={`HTI: H:${hour}`}\r\n            key={`HTI: H:${hour}`}\r\n            hour={hour + 1}\r\n            dateString={dateString}\r\n            loadProfiles={loadProfiles}\r\n            totalLoadProfile={totalLoadProfile}\r\n          />\r\n        );\r\n      })}\r\n    </StyledTreeItem>\r\n  );\r\n};\r\n\r\nexport default DayTree;\r\n","import React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\nimport { ArrowDownward, ArrowRight, CalendarToday } from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { Month } from \"../../../enums\";\r\nimport DayTreeItem from \"./DayTreeItem\";\r\n\r\ntype MonthlyTreeProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst MonthlyTree = (props: MonthlyTreeProps) => {\r\n  const { monthlyLoadProfile } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={[\"1\"]}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"1\"\r\n        labelText={`${Month[monthlyLoadProfile.billingPeriod.month - 1]} ${\r\n          monthlyLoadProfile.billingPeriod.year\r\n        }`}\r\n        labelIcon={CalendarToday}\r\n      >\r\n        {[...monthlyLoadProfile.dateStrings.values()].map((dateString) => {\r\n          let loadProfiles = [\r\n            ...Array.from(monthlyLoadProfile.loadProfiles.values()),\r\n          ];\r\n          let key = `DTI:D:${dateString}`;\r\n          return (\r\n            <DayTreeItem\r\n              totalLoadProfile={monthlyLoadProfile.totalLoadpRofile}\r\n              key={key}\r\n              nodeId={key}\r\n              loadProfiles={loadProfiles}\r\n              dateString={dateString}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyTree;\r\n","import { MonthlyLoadProfile, DailyLoadProfile } from \"./objects\";\r\nimport XLSX from \"xlsx\";\r\n\r\nfunction generateMonthlyLoadProfileXlsx(\r\n  monthlyLoadProfile: MonthlyLoadProfile\r\n) {\r\n  let workbook = XLSX.utils.book_new();\r\n  let worksheetName = `${monthlyLoadProfile.billingPeriod.toString()}`;\r\n  let worksheetData = generateSheetData(monthlyLoadProfile);\r\n  let worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, worksheetName);\r\n  XLSX.writeFile(\r\n    workbook,\r\n    `Monthly LoadProfile Report of ${monthlyLoadProfile.billingPeriod.toString()}.xlsx`\r\n  );\r\n}\r\n\r\nfunction generateSheetData(monthlyLoadProfile: MonthlyLoadProfile) {\r\n  let data = [];\r\n  let start = monthlyLoadProfile.billingPeriod.startDate;\r\n  let end = monthlyLoadProfile.billingPeriod.enddDate;\r\n  console.log(\r\n    `start date: ${start.toLocaleDateString()} endDate: ${end.toLocaleDateString()}`\r\n  );\r\n\r\n  //---------CREATING HEADERS-------------\r\n\r\n  let header = [\"Date\", \"Hour\"];\r\n  for (let loadProfile of monthlyLoadProfile.loadProfiles.values()) {\r\n    header.push(loadProfile.meteringPoint);\r\n  }\r\n  header.push(\"Total\");\r\n\r\n  //----------CONTENT----------------\r\n  data.push(header);\r\n  while (start <= end) {\r\n    let dateString = `${\r\n      start.getMonth() + 1\r\n    }/${start.getDate()}/${start.getFullYear()}`;\r\n\r\n    for (let hour = 0; hour < 24; hour++) {\r\n      let row: string[] = [];\r\n      row.push(dateString);\r\n\r\n      row.push(hour.toString());\r\n      for (let loadProfile of monthlyLoadProfile.loadProfiles.values()) {\r\n        let dailyLoadProfile =\r\n          loadProfile.dailyLoadProfiles.get(dateString) ||\r\n          new DailyLoadProfile(new Date(dateString));\r\n        row.push(\r\n          dailyLoadProfile.hourlyLoadProfiles[hour].getTotalKwdel().toFixed(2)\r\n        );\r\n      }\r\n\r\n      let dailyLoadProfile =\r\n        monthlyLoadProfile.totalLoadpRofile.dailyLoadProfiles.get(dateString) ||\r\n        new DailyLoadProfile(new Date(dateString));\r\n      row.push(\r\n        dailyLoadProfile.hourlyLoadProfiles[hour].getRawTotal().toFixed(2)\r\n      );\r\n      console.log(row);\r\n      data.push(row);\r\n    }\r\n    start.setDate(start.getDate() + 1);\r\n  }\r\n\r\n  console.log(data);\r\n  return data;\r\n}\r\n\r\nexport default generateMonthlyLoadProfileXlsx;\r\n","import { createStyles, makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, ReactComponentElement } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport { MonthlyLoadProfile } from \"../../loadprofile/objects\";\r\nimport MonthlyCard from \"./data/MonthlyCard\";\r\nimport LoadProfileGraph from \"./graph/LoadProfileGraph\";\r\n\r\ntype LoadProfileContentProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nenum DataTab {\r\n  DATA = \"data\",\r\n  GRAPH = \"graph\",\r\n  NONE = \"\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  monthlyLoadpRofile: MonthlyLoadProfile;\r\n  value: string;\r\n  index: string;\r\n  children: any;\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { monthlyLoadpRofile, value, index, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return value === index ? (\r\n    <div className={classes.loadProfileContent_tabPanel}>{children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst LoadProfileContent: React.FunctionComponent<LoadProfileContentProps> = (\r\n  props\r\n) => {\r\n  const { monthlyLoadProfile, index, value } = props;\r\n  const [selectedTab, setSelectedTab] = useState<string>(DataTab.DATA);\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return index === value ? (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          <HorizontalTab label=\"Data\" value={DataTab.DATA} />\r\n          <HorizontalTab label=\"Graph\" value={DataTab.GRAPH} />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel\r\n        index={DataTab.DATA}\r\n        value={selectedTab}\r\n        monthlyLoadpRofile={monthlyLoadProfile}\r\n      >\r\n        <MonthlyCard monthlyLoadProfile={monthlyLoadProfile} />\r\n      </TabPanel>\r\n      <TabPanel\r\n        index={DataTab.GRAPH}\r\n        value={selectedTab}\r\n        monthlyLoadpRofile={monthlyLoadProfile}\r\n      >\r\n        <LoadProfileGraph monthlyLoadProfile={monthlyLoadProfile} />\r\n      </TabPanel>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    loadProfileContent_root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    loadProfileContent_tabPanel: {\r\n      flex: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileContent;\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { GetAppRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\nimport DetailsTree from \"./DetailsTree\";\r\nimport MonthlyTree from \"./MonthlyTree\";\r\nimport generateLoadProfileExcel from \"../../../loadprofile/ExcelGenerator\";\r\n\r\ntype MonthlyCardProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst MonthlyCard: React.FunctionComponent<MonthlyCardProps> = (props) => {\r\n  const { monthlyLoadProfile } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleDownloadClick() {\r\n    generateLoadProfileExcel(monthlyLoadProfile);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.monthlyCard_root}>\r\n      <div className={classes.monthlyCard_paper}>\r\n        <div className={classes.monthlyCard_paperAction}>\r\n          <Button\r\n            onClick={handleDownloadClick}\r\n            className={classes.downloadBtn}\r\n            size=\"small\"\r\n            startIcon={<GetAppRounded />}\r\n          >\r\n            download\r\n          </Button>\r\n        </div>\r\n        <div className={classes.monthlyCard_paperContent}>\r\n          <MonthlyTree monthlyLoadProfile={monthlyLoadProfile} />\r\n          <DetailsTree monthlyLoadProfile={monthlyLoadProfile} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    monthlyCard_root: {\r\n      display: \"inline-flex\",\r\n      boxSizing: \"border-box\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    monthlyCard_paper: {\r\n      flexGrow: 0,\r\n      flexShrink: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      boxSizing: \"border-box\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    monthlyCard_paperAction: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    monthlyCard_paperContent: {\r\n      display: \"flex\",\r\n      flexShrink: 0,\r\n    },\r\n    downloadBtn: {\r\n      fontSize: \"14px\",\r\n      textTransform: \"none\",\r\n      fontWeight: \"lighter\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyCard;\r\n","import { AreaSeries, ArgumentScale, Stack } from \"@devexpress/dx-react-chart\";\r\nimport { scaleBand } from \"@devexpress/dx-chart-core\";\r\nimport {\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Chart,\r\n  LineSeries,\r\n  Legend,\r\n  Title,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\n\r\nimport { createStyles, makeStyles, Paper, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\ntype LoadProfileGraphProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst LoadProfileGraph: React.FunctionComponent<LoadProfileGraphProps> = (\r\n  props\r\n) => {\r\n  const { monthlyLoadProfile, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.graphContent}>\r\n      <Chart data={[...monthlyLoadProfile.chartData.values()]}>\r\n        <ArgumentScale factory={scaleBand} />\r\n        <ArgumentAxis showGrid />\r\n        <ValueAxis showGrid />\r\n        {[...monthlyLoadProfile.loadProfiles.values()].map((data) => {\r\n          return (\r\n            <LineSeries\r\n              valueField={data.meteringPoint}\r\n              argumentField=\"date\"\r\n              name={data.meteringPoint}\r\n            />\r\n          );\r\n        })}\r\n        <Stack />\r\n        <Legend />\r\n        <Title\r\n          text={`Billing Period: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    graphContent: {\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileGraph;\r\n","import { makeStyles, Tabs, Theme, Typography } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useContext, useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport LoadProfileContent from \"./LoadProfileContent\";\r\nimport { MonthlyLoadProfile } from \"../../loadprofile/objects\";\r\n\r\ntype LoadProfileContentProps = {};\r\n\r\nconst LoadProfileTabPanel: React.FunctionComponent<LoadProfileContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"\");\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n  return (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div className={classes.loadProfileContent_Header}>\r\n        <Typography className={classes.loadProfileContent_Title} variant=\"h5\">\r\n          Load Profile\r\n        </Typography>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          {[...loadProfileContext.monthlyLoadProfiles.values()].map(\r\n            (monthlyLoadProfile) => {\r\n              return (\r\n                <HorizontalTab\r\n                  label={monthlyLoadProfile.billingPeriod.toString()}\r\n                  value={monthlyLoadProfile.billingPeriod.toString()}\r\n                  key={`T: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.loadProfileContent_contentWrapper}>\r\n        <div className={classes.loadProfileContent_content}>\r\n          {[...loadProfileContext.monthlyLoadProfiles.values()].map(\r\n            (monthlyLoadProfile) => {\r\n              return (\r\n                <LoadProfileContent\r\n                  key={`C: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n                  monthlyLoadProfile={monthlyLoadProfile}\r\n                  value={selectedTab}\r\n                  index={monthlyLoadProfile.billingPeriod.toString()}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadProfileContent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"0px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  loadProfileContent_Header: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  loadProfileContent_Title: {\r\n    marginRight: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: \"center\",\r\n  },\r\n  loadProfileContent_contentWrapper: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  loadProfileContent_content: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default LoadProfileTabPanel;\r\n","import MonthlyInterruptionItem from \"../monthly_interruption/MonthlyInterruptionItem\";\r\nimport PowerSubstationItem from \"../power_substation/PowerSubstationItem\";\r\n\r\nclass FeederAndDemandItem {\r\n  feeder: string;\r\n  feederInput: number;\r\n  demand: number;\r\n  minutes: number;\r\n  hours: number;\r\n  operatingHours: number;\r\n  powerFactor: number;\r\n  loadFactor: number;\r\n  kvarhrEnergy: number;\r\n  totalOperatingHours: number;\r\n\r\n  constructor(feeder: string, totalOperatingHours: number) {\r\n    this.feeder = feeder;\r\n    this.feederInput = 0;\r\n    this.demand = 0;\r\n    this.minutes = 0;\r\n    this.hours = 0;\r\n    this.operatingHours = 0;\r\n    this.powerFactor = 0;\r\n    this.loadFactor = 0;\r\n    this.kvarhrEnergy = 0;\r\n    this.totalOperatingHours = totalOperatingHours;\r\n  }\r\n\r\n  setMonthlyInterruptionData(data: MonthlyInterruptionItem) {\r\n    this.minutes = data.duration;\r\n    this.hours = this.minutes / 60;\r\n  }\r\n\r\n  setPowerSubstationData(data: PowerSubstationItem) {\r\n    this.demand = data.demandKwhr;\r\n    this.feederInput = data.kwhrEnergy;\r\n    this.kvarhrEnergy = data.kvarhrEnergy;\r\n  }\r\n\r\n  recalculateData() {\r\n    this.operatingHours = this.totalOperatingHours - this.hours;\r\n    this.powerFactor =\r\n      Math.cos(Math.atan(this.kvarhrEnergy / this.feederInput)) * 100;\r\n    this.loadFactor = this.feederInput / this.operatingHours / this.demand;\r\n  }\r\n}\r\n\r\nexport default FeederAndDemandItem;\r\n","import BillingPeriod from \"../common/BillingPeriod\";\r\nimport MonthlyInterruptionItem from \"../monthly_interruption/MonthlyInterruptionItem\";\r\nimport PowerSubstationItem from \"../power_substation/PowerSubstationItem\";\r\nimport FeederAndDemandItem from \"./FeederAndDemandItem\";\r\n\r\nclass FeederAndDemand {\r\n  billingPeriod: BillingPeriod;\r\n\r\n  items: Map<string, FeederAndDemandItem>;\r\n  totalOperatingHours: number;\r\n\r\n  constructor(billingPeriod: BillingPeriod) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.items = new Map();\r\n    this.totalOperatingHours = billingPeriod.getTotalDays() * 24;\r\n    console.log(\"FeederAndDemand Created\");\r\n  }\r\n\r\n  addMonthlyInterruptionData(data: MonthlyInterruptionItem) {\r\n    let key = data.feeder;\r\n    if (!this.items.has(key)) {\r\n      this.items.set(\r\n        key,\r\n        new FeederAndDemandItem(data.feeder, this.totalOperatingHours)\r\n      );\r\n    }\r\n    this.items.get(key)?.setMonthlyInterruptionData(data);\r\n  }\r\n\r\n  addPowerSubstationData(data: PowerSubstationItem) {\r\n    let key = data.feeder;\r\n    if (!this.items.has(key)) {\r\n      this.items.set(\r\n        key,\r\n        new FeederAndDemandItem(data.feeder, this.totalOperatingHours)\r\n      );\r\n    }\r\n    this.items.get(key)?.setPowerSubstationData(data);\r\n  }\r\n}\r\n\r\nexport default FeederAndDemand;\r\n","import BillingPeriod from \"../common/BillingPeriod\";\r\nimport MonthlyInterruptionItem from \"../monthly_interruption/MonthlyInterruptionItem\";\r\nimport MonthlyMonthlyInterruption from \"../monthly_interruption/MonthlyMonthlyInterruption\";\r\nimport PowerSubstationItem from \"../power_substation/PowerSubstationItem\";\r\nimport FeederAndDemand from \"./FeederAndDemand\";\r\nimport FeederAndDemandItem from \"./FeederAndDemandItem\";\r\n\r\nclass MonthlyFeederAndDemand {\r\n  feederAndDemands: Map<string, FeederAndDemand>;\r\n\r\n  constructor(monthlyFeederAndDemand?: MonthlyFeederAndDemand) {\r\n    if (monthlyFeederAndDemand) {\r\n      this.feederAndDemands = new Map(monthlyFeederAndDemand.feederAndDemands);\r\n    } else {\r\n      this.feederAndDemands = new Map();\r\n    }\r\n    console.trace(\"Monthly feeder and demand created\");\r\n  }\r\n\r\n  addMonthlyInterruptionData(\r\n    data: MonthlyInterruptionItem,\r\n    billingPeriod: BillingPeriod\r\n  ) {\r\n    let key = billingPeriod.toString();\r\n    if (!this.feederAndDemands.has(key)) {\r\n      this.feederAndDemands.set(key, new FeederAndDemand(billingPeriod));\r\n    }\r\n    this.feederAndDemands.get(key)?.addMonthlyInterruptionData(data);\r\n  }\r\n\r\n  addPowerSubstationData(\r\n    data: PowerSubstationItem,\r\n    billingPeriod: BillingPeriod\r\n  ) {\r\n    let key = billingPeriod.toString();\r\n    if (!this.feederAndDemands.has(key)) {\r\n      this.feederAndDemands.set(key, new FeederAndDemand(billingPeriod));\r\n    }\r\n    this.feederAndDemands.get(key)?.addPowerSubstationData(data);\r\n  }\r\n\r\n  initValues() {\r\n    for (let feederAndDemand of this.feederAndDemands.values()) {\r\n      for (let item of feederAndDemand.items.values()) {\r\n        item.recalculateData();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MonthlyFeederAndDemand;\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport MonthlyFeederAndDemand from \"../../objects/feeder_and_demand/MonthlyFeederAndDemand\";\r\nimport MonthlyMonthlyInterruption from \"../../objects/monthly_interruption/MonthlyMonthlyInterruption\";\r\nimport MonthlyPowerSubstation from \"../../objects/power_substation/MonthlyPowerSubstation\";\r\nimport { MonthlyIterruptionContext } from \"../monthly_interruption/MonthlyInterruptionContextProvider\";\r\nimport { PowerSubstationContext } from \"../power_substation/PowerSubstationContextProvider\";\r\n\r\ntype FeederAndDemandContextProviderProps = {};\r\n\r\nconst tempMfd = new MonthlyFeederAndDemand();\r\n\r\nconst FeederAndDemandContext = createContext({\r\n  monthlyFeederAndDemand: new MonthlyFeederAndDemand(),\r\n});\r\n\r\nconst FeederAndDemandContextProvider: React.FunctionComponent<FeederAndDemandContextProviderProps> = (\r\n  props\r\n) => {\r\n  const powerSubstationContext = useContext(PowerSubstationContext);\r\n  const monthlyInterruptionCotnext = useContext(MonthlyIterruptionContext);\r\n\r\n  const [buffer, setBuffer] = useState<\r\n    (MonthlyPowerSubstation | MonthlyMonthlyInterruption)[]\r\n  >([]);\r\n  const [monthlyFeederAndDemand, setMonthlyFeederAndDemand] = useState<\r\n    MonthlyFeederAndDemand\r\n  >(tempMfd);\r\n\r\n  useEffect(() => {\r\n    powerSubstationContext.addUpdateCallback(onMonthlyPowerSubstationUpdated);\r\n    monthlyInterruptionCotnext.addUpdateCallback(onMonthlyInterruptionUpdated);\r\n    setMonthlyFeederAndDemand(new MonthlyFeederAndDemand());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(monthlyFeederAndDemand);\r\n  }, [monthlyFeederAndDemand]);\r\n\r\n  useEffect(() => {\r\n    async function updateMonthlyFeederAndDemand() {\r\n      console.log(\"Updating monthly feeder and demand\");\r\n      let newBuffer = [...buffer];\r\n      let data = newBuffer.pop();\r\n      console.log({ data });\r\n      if (data) {\r\n        let result: MonthlyFeederAndDemand = new MonthlyFeederAndDemand(\r\n          monthlyFeederAndDemand\r\n        );\r\n        if ((data as MonthlyPowerSubstation).powerSubstations) {\r\n          console.log(\"Adding Monthly Power Substation Data...\");\r\n          result = await addMonthlyPowerSubstationData(\r\n            data as MonthlyPowerSubstation,\r\n            result\r\n          );\r\n        } else {\r\n          console.log(\"Adding Monthly MOnthly interruption Data...\");\r\n          result = await addMonthlyMonthlyInterruptionData(\r\n            data as MonthlyMonthlyInterruption,\r\n            result\r\n          );\r\n        }\r\n        setMonthlyFeederAndDemand(result);\r\n        setBuffer([...newBuffer]);\r\n      }\r\n    }\r\n    console.log(\"Checking if buffer is not empty...\");\r\n    if (buffer.length <= 0) {\r\n      let newMonthlyFeederAndDemand = new MonthlyFeederAndDemand(\r\n        monthlyFeederAndDemand\r\n      );\r\n      newMonthlyFeederAndDemand.initValues();\r\n      setMonthlyFeederAndDemand(newMonthlyFeederAndDemand);\r\n    } else {\r\n      updateMonthlyFeederAndDemand();\r\n    }\r\n  }, [buffer]);\r\n\r\n  function addMonthlyPowerSubstationData(\r\n    data: MonthlyPowerSubstation,\r\n    mfd: MonthlyFeederAndDemand\r\n  ) {\r\n    return new Promise<MonthlyFeederAndDemand>((resolve, reject) => {\r\n      console.log({\r\n        message: \"Monthly Feeder And Demand to be updated: \",\r\n        mfd,\r\n      });\r\n\r\n      for (let mps of data.powerSubstations.values()) {\r\n        let billingPeriod = mps.billingPeriod;\r\n        for (let ps of mps.items.values()) {\r\n          mfd.addPowerSubstationData(ps, billingPeriod);\r\n        }\r\n      }\r\n      resolve(mfd);\r\n    });\r\n  }\r\n\r\n  function addMonthlyMonthlyInterruptionData(\r\n    data: MonthlyMonthlyInterruption,\r\n    mfd: MonthlyFeederAndDemand\r\n  ) {\r\n    return new Promise<MonthlyFeederAndDemand>((resolve, reject) => {\r\n      console.log({\r\n        message: \"Monthly Feeder And Demand to be updated: \",\r\n        mfd,\r\n      });\r\n\r\n      for (let mmi of data.monthlyInterruptions.values()) {\r\n        let billingPeriod = mmi.billingPeriod;\r\n        for (let mi of mmi.items.values()) {\r\n          mfd.addMonthlyInterruptionData(mi, billingPeriod);\r\n        }\r\n      }\r\n      resolve(mfd);\r\n    });\r\n  }\r\n\r\n  function onMonthlyPowerSubstationUpdated(data: MonthlyPowerSubstation) {\r\n    console.log(\"MonthlyPowerSubstationData Updated...\");\r\n    setBuffer((prevBuffer) => [...prevBuffer, data]);\r\n  }\r\n\r\n  function onMonthlyInterruptionUpdated(data: MonthlyMonthlyInterruption) {\r\n    console.log(\"MonthlyPower Interruption data Updated...\");\r\n    setBuffer((prevBuffer) => [...prevBuffer, data]);\r\n  }\r\n\r\n  return (\r\n    <FeederAndDemandContext.Provider\r\n      value={{\r\n        monthlyFeederAndDemand,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FeederAndDemandContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FeederAndDemandContextProvider;\r\n\r\nexport { FeederAndDemandContext };\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(3),\r\n\r\n      color: theme.palette.text.primary,\r\n      \"&:hover > $content\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      \"&:focus > $content, &$selected > $content\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.primary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"$expanded > &\": {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      \"& $content\": {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n    labelRoot: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: `${theme.spacing(2)}px`,\r\n      padding: theme.spacing(0.5, 1),\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: \"normal\",\r\n      flexGrow: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useTreeItemStyles;\r\n","import { SvgIconProps, Typography } from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport useTreeItemStyles from \"../../maincontent/data/useTreeItemStyles\";\r\n\r\ndeclare module \"csstype\" {\r\n  interface Properties {\r\n    \"--tree-view-color\"?: string;\r\n    \"--tree-view-bg-color\"?: string;\r\n  }\r\n}\r\n\r\ntype StyledTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n  labelInfo?: string;\r\n  labelText: string;\r\n};\r\n\r\nfunction StyledTreeItem(props: StyledTreeItemProps) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          <Typography variant=\"body2\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default StyledTreeItem;\r\n","import { createStyles, makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport FeederAndDemand from \"../../../objects/feeder_and_demand/FeederAndDemand\";\r\nimport MonthlyFeederCard from \"../data/MonthlyFeederCard\";\r\n\r\ntype FeederAndDemandContentProps = {\r\n  feederAndDemand: FeederAndDemand;\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nenum DataTab {\r\n  DATA = \"data\",\r\n  GRAPH = \"graph\",\r\n  NONE = \"\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  value: string;\r\n  index: string;\r\n  children: any;\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { value, index, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return value === index ? (\r\n    <div className={classes.loadProfileContent_tabPanel}>{children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst FeederAndDemandContent: React.FunctionComponent<FeederAndDemandContentProps> = (\r\n  props\r\n) => {\r\n  const { feederAndDemand, index, value } = props;\r\n  const [selectedTab, setSelectedTab] = useState<string>(DataTab.DATA);\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return index === value ? (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          <HorizontalTab label=\"Data\" value={DataTab.DATA} />\r\n          <HorizontalTab label=\"Graph\" value={DataTab.GRAPH} />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel index={DataTab.DATA} value={selectedTab}>\r\n        <MonthlyFeederCard feederAndDemand={feederAndDemand} />\r\n      </TabPanel>\r\n      {/* <TabPanel index={DataTab.GRAPH} value={selectedTab}></TabPanel> */}\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    loadProfileContent_root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    loadProfileContent_tabPanel: {\r\n      flex: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default FeederAndDemandContent;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Typography,\r\n  Box,\r\n  SvgIconProps,\r\n} from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport React, { useEffect } from \"react\";\r\nimport FeederAndDemandItem from \"../../../objects/feeder_and_demand/FeederAndDemandItem\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\n\r\ntype FederTreeitemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  feederAndDemandItem: FeederAndDemandItem;\r\n  header?: boolean;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    labelContent: {\r\n      width: \"120px\",\r\n      fontWeight: \"normal\",\r\n      flexGrow: 1,\r\n    },\r\n    feeder: {\r\n      width: \"200px\",\r\n    },\r\n    numbers: {\r\n      width: \"130px\",\r\n      maxWidth: \"130px\",\r\n    },\r\n    percent: {\r\n      width: \"90px\",\r\n      maxWidth: \"90px\",\r\n    },\r\n  })\r\n);\r\n\r\nconst FederTreeitem: React.FunctionComponent<FederTreeitemProps> = (\r\n  props: FederTreeitemProps\r\n) => {\r\n  const treeItemClasses = useTreeItemStyles();\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    bgColor,\r\n    header = false,\r\n    feederAndDemandItem,\r\n    labelIcon: LabelIcon,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={treeItemClasses.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={treeItemClasses.labelIcon} />\r\n          {header ? (\r\n            <React.Fragment>\r\n              <Typography\r\n                classes={{ root: classes.feeder }}\r\n                variant=\"body2\"\r\n                className={treeItemClasses.labelText}\r\n              >\r\n                Feeder\r\n              </Typography>\r\n\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Feeder Input Energy (KWHR)\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Demand (KW)\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Minutes\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Hours\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Operating Hours\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Power Factor\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Load Factor\r\n              </Typography>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography\r\n                classes={{ root: classes.feeder }}\r\n                variant=\"body2\"\r\n                className={treeItemClasses.labelText}\r\n              >\r\n                {feederAndDemandItem.feeder}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.feederInput.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.demand.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.minutes}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.hours.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.operatingHours.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.powerFactor.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.loadFactor.toFixed(2)}\r\n              </Typography>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: treeItemClasses.root,\r\n        content: treeItemClasses.content,\r\n        expanded: treeItemClasses.expanded,\r\n        selected: treeItemClasses.selected,\r\n        group: treeItemClasses.group,\r\n        label: treeItemClasses.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FederTreeitem;\r\n","import React from \"react\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport StyledTreeItem from \"../../common/components/StyledTreeItem\";\r\nimport {\r\n  ArrowDownward,\r\n  ArrowRight,\r\n  CalendarToday,\r\n  Place,\r\n  Title,\r\n} from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport FeederAndDemand from \"../../../objects/feeder_and_demand/FeederAndDemand\";\r\nimport FeederTreeItem from \"./FeederTreeItem\";\r\nimport FeederAndDemandContextProvider from \"../../feeder_and_demand/FeederAndDemandContextProvider\";\r\nimport FeederAndDemandItem from \"../../../objects/feeder_and_demand/FeederAndDemandItem\";\r\n\r\ntype MonthlyFeederTreeProps = {\r\n  feederAndDemand: FeederAndDemand;\r\n};\r\n\r\nconst MonthlyFeederTree = (props: MonthlyFeederTreeProps) => {\r\n  const { feederAndDemand } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"1\"\r\n        labelText={feederAndDemand.billingPeriod.toString()}\r\n        labelIcon={CalendarToday}\r\n      >\r\n        <FeederTreeItem\r\n          labelIcon={Title}\r\n          feederAndDemandItem={new FeederAndDemandItem(\"header\", 0)}\r\n          nodeId={\"header\"}\r\n          header={true}\r\n        />\r\n        {[...feederAndDemand.items.values()].map((item) => {\r\n          let key = `FTI:F:${item.feeder}`;\r\n          return (\r\n            <FeederTreeItem\r\n              labelIcon={Place}\r\n              feederAndDemandItem={item}\r\n              key={key}\r\n              nodeId={key}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyFeederTree;\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { GetAppRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport FeederAndDemand from \"../../../objects/feeder_and_demand/FeederAndDemand\";\r\nimport MonthlyTree from \"./MonthlyFeederTree\";\r\n\r\ntype MonthlyFeederCardProps = {\r\n  feederAndDemand: FeederAndDemand;\r\n};\r\n\r\nconst MonthlyFeederCard: React.FunctionComponent<MonthlyFeederCardProps> = (\r\n  props\r\n) => {\r\n  const { feederAndDemand } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.monthlyCard_root}>\r\n      <div className={classes.monthlyCard_paper}>\r\n        <div className={classes.monthlyCard_paperAction}>\r\n          <Button\r\n            className={classes.downloadBtn}\r\n            size=\"small\"\r\n            startIcon={<GetAppRounded />}\r\n          >\r\n            download\r\n          </Button>\r\n        </div>\r\n        <div className={classes.monthlyCard_paperContent}>\r\n          <MonthlyTree feederAndDemand={feederAndDemand} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    monthlyCard_root: {\r\n      display: \"inline-flex\",\r\n      boxSizing: \"border-box\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    monthlyCard_paper: {\r\n      flexGrow: 0,\r\n      flexShrink: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      boxSizing: \"border-box\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    monthlyCard_paperAction: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    monthlyCard_paperContent: {\r\n      display: \"flex\",\r\n      flexShrink: 0,\r\n    },\r\n    downloadBtn: {\r\n      fontSize: \"14px\",\r\n      textTransform: \"none\",\r\n      fontWeight: \"lighter\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyFeederCard;\r\n","import { makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { VerticalTab } from \"../common/components/tabs\";\r\nimport LoadProfileTabPanel from \"./loadprofile/LoadProfileTabPanel\";\r\nimport FeederAndDemandContentRoot from \"./feeder_demand/FeederAndDemandContentRoot\";\r\ntype MainContentProps = {};\r\n\r\nenum ContentTabs {\r\n  LOAD_PROFILE = \"lp\",\r\n  SUBSTATION_LOSS = \"ssl\",\r\n  FEEDERDEMAND_OUTAGED = \"fdo\",\r\n  POWER_BILL = \"pbl\",\r\n  POWER_SUBSTATION = \"psb\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nconst TabPanel: React.FunctionComponent<TabPanelProps> = (props) => {\r\n  const { value, index, ...others } = props;\r\n  const classes = useStyles();\r\n  return value === index ? (\r\n    <div className={classes.mainContent_content}>{props.children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst MainContent: React.FunctionComponent<MainContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\r\n    ContentTabs.LOAD_PROFILE\r\n  );\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.maincontent_root}>\r\n      <div className={classes.tabs_container}>\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={selectedTab}\r\n          centered={false}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n        >\r\n          <VerticalTab label=\"Load Profile\" value={ContentTabs.LOAD_PROFILE} />\r\n          <VerticalTab label=\"Power Bill\" value={ContentTabs.POWER_BILL} />\r\n          <VerticalTab\r\n            label=\"Feeder Demand and Outages\"\r\n            value={ContentTabs.FEEDERDEMAND_OUTAGED}\r\n          />\r\n          <VerticalTab\r\n            label=\"Substation Loss\"\r\n            value={ContentTabs.SUBSTATION_LOSS}\r\n          />\r\n          <VerticalTab\r\n            label=\"Power Substation\"\r\n            value={ContentTabs.POWER_SUBSTATION}\r\n          />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel value={selectedTab} index={ContentTabs.LOAD_PROFILE}>\r\n        <LoadProfileTabPanel />\r\n      </TabPanel>\r\n      <TabPanel value={selectedTab} index={ContentTabs.FEEDERDEMAND_OUTAGED}>\r\n        <FeederAndDemandContentRoot />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  maincontent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  tabs_container: {\r\n    marginTop: theme.spacing(12),\r\n    maxWidth: \"300px\",\r\n    flexGrow: 0,\r\n  },\r\n  tabs: {\r\n    display: \"inline-block\",\r\n  },\r\n  mainContent_content: {\r\n    flex: 1,\r\n    width: 0,\r\n  },\r\n}));\r\n\r\nexport default MainContent;\r\n","import { makeStyles, Tabs, Theme, Typography } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useContext, useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport { FeederAndDemandContext } from \"../../feeder_and_demand/FeederAndDemandContextProvider\";\r\nimport FeederAndDemandContent from \"./FeederAndDemandContent\";\r\n\r\ntype FeederAndDemandContentRootProps = {};\r\n\r\nconst FeederAndDemandContentRoot: React.FunctionComponent<FeederAndDemandContentRootProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"\");\r\n  const feederAndDemandContext = useContext(FeederAndDemandContext);\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n  return (\r\n    <div className={classes.feederAndDemandContent_root}>\r\n      <div className={classes.feederAndDemand_header}>\r\n        <Typography className={classes.feederAndDemand_title} variant=\"h5\">\r\n          Feeder Demand and Outages :D\r\n        </Typography>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          {[\r\n            ...feederAndDemandContext.monthlyFeederAndDemand.feederAndDemands.values(),\r\n          ].map((feederAndDemands) => {\r\n            return (\r\n              <HorizontalTab\r\n                label={feederAndDemands.billingPeriod.toString()}\r\n                value={feederAndDemands.billingPeriod.toString()}\r\n                key={`T: ${feederAndDemands.billingPeriod.toString()}`}\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.feederAndDemand_contentContainer}>\r\n        <div className={classes.feederAndDemandContent}>\r\n          {[\r\n            ...feederAndDemandContext.monthlyFeederAndDemand.feederAndDemands.values(),\r\n          ].map((feederAndDemand) => {\r\n            return (\r\n              <FeederAndDemandContent\r\n                key={`FDC:BP:${feederAndDemand.billingPeriod.toString()}`}\r\n                feederAndDemand={feederAndDemand}\r\n                value={selectedTab}\r\n                index={feederAndDemand.billingPeriod.toString()}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  feederAndDemandContent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"0px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  feederAndDemand_header: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  feederAndDemand_title: {\r\n    marginRight: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: \"center\",\r\n  },\r\n  feederAndDemand_contentContainer: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  feederAndDemandContent: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default FeederAndDemandContentRoot;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Toolbar from \"../toolbar\";\r\nimport FilesDrawer, { useStyles as filesDrawerStyles } from \"../filesdrawer\";\r\nimport clsx from \"clsx\";\r\nimport Settings from \"../settings\";\r\nimport { MainContent } from \"../maincontent\";\r\nimport { makeStyles, Theme } from \"@material-ui/core\";\r\ntype DashboardProps = {};\r\n\r\nconst Dashboard: React.FC<DashboardProps> = (props) => {\r\n  const classes = useStyles();\r\n  const filesDrawerClasses = filesDrawerStyles();\r\n\r\n  const [openFilesDrawer, setOpenFilesDrawer] = useState<boolean>(true);\r\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\r\n\r\n  function handleSettingsToggle() {\r\n    setOpenSettings(true);\r\n  }\r\n\r\n  function handleSettingsUntoggle() {\r\n    setOpenSettings(false);\r\n  }\r\n\r\n  function handleFilesToggle() {\r\n    setOpenFilesDrawer(true);\r\n  }\r\n\r\n  function handleFilesUntoggle() {\r\n    setOpenFilesDrawer(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dashboard_root}>\r\n      <Toolbar\r\n        onSettingsToggled={handleSettingsToggle}\r\n        onSettingsUntoggled={handleSettingsUntoggle}\r\n        onFilesToggled={handleFilesToggle}\r\n        onFilesUntoggled={handleFilesUntoggle}\r\n      />\r\n      <FilesDrawer open={openFilesDrawer} />\r\n      <div\r\n        className={clsx(classes.dashboard_content, filesDrawerClasses.content, {\r\n          [filesDrawerClasses.contentShift]: openFilesDrawer,\r\n        })}\r\n      >\r\n        {openSettings && <Settings />}\r\n        <MainContent />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dashboard_root: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n  },\r\n  dashboard_content: {\r\n    flex: 1,\r\n    position: \"relative\",\r\n    minHeight: \"0px\",\r\n    width: 0,\r\n  },\r\n}));\r\n\r\nexport default Dashboard;\r\n","import Dashboard from \"./Dashboard\";\r\n\r\nexport default Dashboard;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  ThemeProvider,\r\n  Box,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport LoadProfileContextProvider from \"./loadprofile/LoadProfileContextProvider\";\r\nimport Dashboard from \"./dashboard\";\r\nimport clsx from \"clsx\";\r\nimport MonthlyInterruptionContextProvider from \"./monthly_interruption/MonthlyInterruptionContextProvider\";\r\nimport PowerSubstationContextProvider from \"./power_substation/PowerSubstationContextProvider\";\r\nimport FeederAndDemandContextProvider from \"./feeder_and_demand/FeederAndDemandContextProvider\";\r\n\r\ntype AppProps = {};\r\n\r\nconst App: FunctionComponent<AppProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <LoadProfileContextProvider>\r\n          <MonthlyInterruptionContextProvider>\r\n            <PowerSubstationContextProvider>\r\n              <FeederAndDemandContextProvider>\r\n                <div className={clsx(classes.root)}>\r\n                  <Dashboard />\r\n                </div>\r\n              </FeederAndDemandContextProvider>\r\n            </PowerSubstationContextProvider>\r\n          </MonthlyInterruptionContextProvider>\r\n        </LoadProfileContextProvider>\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n}));\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Fragment>\n      <App />\n    </React.Fragment>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}