{"version":3,"sources":["components/common/object/Month.ts","components/theme.ts","components/loadprofile/objects/HourlyLoadProfile.ts","components/loadprofile/objects/DailyLoadProfile.ts","components/common/object/Feeder.ts","components/common/object/BillingPeriod.ts","components/common/object/Transformer.ts","components/common/object/Substation.ts","components/common/object/MeteringPoints.ts","components/common/object/GeneralUtil.ts","components/toolbar/Toolbar.tsx","components/loadprofile/objects/LoadProfile_Raw.ts","components/loadprofile/objects/LoadProfile.ts","components/loadprofile/objects/CoincidentPeak.ts","components/loadprofile/objects/MonthlyLoadProfile.ts","components/loadprofile/LoadProfileContextProvider.tsx","components/toolbar/StyledToggleButton.tsx","components/toolbar/use-styles.ts","components/loadprofile/LoadProfileStorage.ts","components/toolbar/index.ts","components/filesdrawer/use-styles.ts","components/filesdrawer/StyledAccordion.tsx","components/filesdrawer/FileCard.tsx","components/common/errors/InvalidFileError.ts","components/common/utils/FileUtil.ts","components/common/utils/ExcelUtil.ts","components/loadprofile/ExcelParser.ts","components/monthly_interruption/MonthlyInterruptionUtil.ts","components/loadprofile/LoadProfileParser.tsx","components/filesdrawer/FileDrop.tsx","components/filesdrawer/accordions/LoadProfileAccordion.tsx","components/monthly_interruption/MonthlyInterruptionExcelUtil.ts","components/monthly_interruption/MonthlyInterruptionParser.tsx","components/feeder_and_demand/FeederAndDemandUtil.ts","components/feeder_and_demand/FeederAndDemandContextProvider.tsx","components/feeder_and_demand/objects/FeederAndDemandItem.ts","components/feeder_and_demand/objects/FeederAndDemand.ts","components/feeder_and_demand/objects/MonthlyFeederAndDemand.ts","components/power_substation/PowerSubstationUtil.ts","components/filesdrawer/accordions/MonthlyInterruptionAccordion.tsx","components/power_substation/PowerSubstationExcelUtil.ts","components/styled_components/FormSelectField.tsx","components/power_substation/PowerSubstationParser.tsx","components/power_transformer_loss/objects/PowerTransformerLossItem.ts","components/power_transformer_loss/objects/PowerTransformerLossSubstation.ts","components/power_transformer_loss/objects/PowerTransformerLoss.ts","components/power_transformer_loss/objects/MonthlyPowerTransformerLoss.ts","components/power_transformer_loss/PowerTransformerLossUtil.ts","components/power_transformer_loss/PowerTransformerLossContextProvider.tsx","components/filesdrawer/accordions/PowerSubstationAccordion.tsx","components/filesdrawer/index.ts","components/filesdrawer/FilesDrawer.tsx","components/settings/use-styles.ts","components/settings/tabpanels/SettingsPanel.tsx","components/styled_components/FormTextField.tsx","components/styled_components/HorizontalTab.tsx","components/styled_components/StyledTreeItem.tsx","components/settings/Settings.tsx","components/styled_components/VerticalTab.tsx","components/settings/tabpanels/LoadProfileSettingsPanel.tsx","components/settings/tabpanels/MonthlyInterruptionPanel.tsx","components/settings/tabpanels/PowerSubstationPanel.tsx","components/settings/index.ts","components/maincontent/loadprofile/data/DetailsTree.tsx","components/maincontent/loadprofile/data/HourTreeItem.tsx","components/maincontent/loadprofile/data/DayTreeItem.tsx","components/maincontent/loadprofile/data/MonthlyTree.tsx","components/loadprofile/ExcelGenerator.ts","components/maincontent/loadprofile/LoadProfileContent.tsx","components/maincontent/loadprofile/data/MonthlyCard.tsx","components/maincontent/loadprofile/graph/LoadProfileGraph.tsx","components/maincontent/feeder_demand/FeederAndDemandContent.tsx","components/maincontent/loadprofile/LoadProfileTabPanel.tsx","components/maincontent/feeder_demand/data/FeederTreeItem.tsx","components/maincontent/feeder_demand/data/MonthlyFeederTree.tsx","components/maincontent/feeder_demand/data/MonthlyFeederCard.tsx","components/maincontent/power_transformer_loss/PowerTransformerLossContent.tsx","components/maincontent/feeder_demand/FeederAndDemandContentRoot.tsx","components/maincontent/power_transformer_loss/data/PowerTransformerLossItemTree.tsx","components/maincontent/power_transformer_loss/data/PowerTransformerLossSubstationTree.tsx","components/maincontent/power_transformer_loss/data/MonthlyPowerTransformerLossTree.tsx","components/maincontent/power_transformer_loss/data/MonthlyPowerTransformerLossCard.tsx","components/maincontent/MainContent.tsx","components/maincontent/power_transformer_loss/PowerTransformerLossContentRoot.tsx","components/dashboard/Dashboard.tsx","components/dashboard/index.ts","components/App.tsx","components/index.ts","index.js"],"names":["Month","theme","createMuiTheme","palette","primary","main","dark","contrastText","secondary","text","background","default","HourlyLoadProfile","hour","kwdelSet","this","kwdel","kwhdel","fileName","push","filter","length","total","DailyLoadProfile","date","hourlyLoadProfiles","max","sum","buildHourlyLoadProfiles","Array","keys","map","rawData","addKwdel","forEach","hourloadProfile","removeKwdel","maxKwdel","kwdelSum","kwhdelSum","hourlyLoadProfile","getTotalKwdel","getRawTotalKwhdel","Feeder","BillingPeriod","month","year","startDate","enddDate","getStartDate","getEndDate","Math","round","getTime","startMonth","startYear","moment","toDate","billingPeriod","day","minute","billingMonth","Transformer","key","serialNumber","power","brand","HYOSUNG_20MVA","SHIHLIN_20MVA","SHIHLIN_10MVVA","SHIHLIN_5MVA","NANJING_20MVA","PRIME_MEIDEN_10MVA","NEW_KOREA_10MVA","NEW_KOREA_5MVA","CHANGZHOU_10MVA","SHENDA_25MVA","SubstationItem","transformer","feeders","substationKey","feeder","has","Substation","substationItems","PUTIK","Set","GUIWAN","TUMAGA","ARENA_BLANCO","PRESA","TETUAN","MERCEDES","NORTHSIDE","ZAMPEN","SANJOSE_GUSU","SAN_JOSE","CALARIAN","BALIWASAN","DEDICATED_LINE","SANGALI","CULIANAN","CURUAN","FISHING_PORT","AYALA","TALISAYAN","LABUAN","RECODO","SINUNUC","CABATANGAN","PASONANCA","SAN_ROQUE","CAMANCHILI","ACLEM","GOVERNOR_ALVAREZ","VETERANS_AVENUE","NUNEZ","STA_CATALINA","RIO_HONDO","GUARDIA_NACIONAL","CAMPANER","ALL","MeteringPoint","substations","substation","substationItem","meteringPoint","toUpperCase","MF3MPITZAMC01","MF3MPITZAMC02","MF3MPITZAMC03","MF3MPITZAMC04","MF3MPITZAMC05","MF3MPITZAMC06","MF3MPITZAMC07","isFeederExistsOnFeeders","f","trim","ToggleValues","GeneralUtil","Object","freeze","findSubstationOfFeeder","values","item","getYears","years","yearNow","Date","getFullYear","getMonths","months","monthNum","isNaN","Number","String","findFeeder","feederText","findSubstationItemOfFeeder","LoadProfile_Raw","row","setDate","getDate","getMonth","getBillingMonth","LoadProfile","dailyLoadProfiles","Map","dateString","set","get","addLoadProfileData","dailyLoadProfile","removeLoadProfileData","maxHour","maxDate","dailyMax","dailyKwdelSum","dailyKwhdelSum","console","log","toLocaleDateString","CoincidentPeak","MonthlyLoadProfile","loadProfiles","dateStrings","coincidentPeak","nonCoincidentPeak","diversityFactor","loadProfilesMax","loadProfilesSum","totalLoadpRofile","chartData","add","meteringPoints","loadProfile","removeLoadPRofileData","getTotalKwhdel","dateKey","obj","resetData","dailyLp","genMaxAndSum","hourlyLp","extractDataThenAddToTotal","extractDailyLoadProfileTotalKwdelThenAddToData","delete","dlp","hlp","getRawTotal","info","coincidental","nonCoincidental","totalLoadProfile","hourlyLoadpRofiles","LoadProfileContext","createContext","updateLoadProfiles","rawDatas","monthlyLoadProfiles","working","deleteLoadProfiles","deleteLoadProfileInfo","LoadProfileContextProvider","props","children","useState","setMonthlyLoadProfiles","buffer","setBuffer","setWorking","useEffect","newBuffer","data","pop","isArray","Promise","resolve","reject","newMonthlyLoadProfiles","addData","mlp","initOtherDetails","then","result","mpl","removeData","Provider","value","prevBuffer","deleteLaodProfileInfo","useStyles","makeStyles","root","border","borderRadius","backgroundColor","color","selected","StyledToggleButton","others","classes","ToggleButton","width","height","zIndex","drawer","container","display","flexDirection","justifyContent","alignItems","toggleButtonsContainer","otherButtonsContainer","LoadProfileStorageKey","Toolbar","onFilesToggled","onSettingsToggled","onSettingsUntoggled","onFilesUntoggled","FILES","toggledButton","setToggledButton","NONE","otherToggledButton","setOtherToggledButton","AppBar","elevation","className","position","Box","ToggleButtonGroup","onChange","event","newToggle","method","params","prevToggled","exclusive","Folder","SETTINGS","createStyles","flexShrink","drawerPaper","borderLeft","divider","borderRight","drawerHeader","padding","spacing","mixins","toolbar","content","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","accordion","boxShadow","borderBottom","margin","expanded","accordionSummary","marginBottom","minHeight","accordionTitle","fontSize","asdf","accordionDetails","StyledAccordion","expandedPanel","onPanelChange","panelName","title","render","Accordion","square","newExpanded","AccordionSummary","expandIcon","ExpandMore","Typography","AccordionDetails","cardStyles","mobileStepper","maxWidth","boxSizing","paper","shape","overflowWrap","wordWrap","filename","progress_text","alignSelf","gap","progress_content","action","button","textTransform","error_container","error_text","whiteSpace","FileCard","file","progress","progressInfo","errors","onRemoveFile","openError","setOpenError","Fragment","name","LinearProgress","variant","Button","size","startIcon","ErrorOutline","onClick","Dialog","open","onClose","DialogTitle","Divider","DialogContent","overflow","error","index","component","LoadProfileStorage","loadSettings","kwdelCol","localStorage","getItem","KWDEL","dateCol","DATE","timeCol","TIME","dateFormat","DATE_FORMAT","timeFormat","TIME_FORMAT","kwhdelCol","KWHDEL","saveSettings","settings","setItem","toString","InvalidFileError","message","Error","a","fileExtension","split","parameteres","fileTypeSplit","reader","FileReader","onload","Uint8Array","target","workbook","XLSX","read","type","cellDates","readAsArrayBuffer","FileUtil","extractWorkbookFromFile","ExcelUtil","cell","x","t","v","w","r","isValid","strict","number","i","setTimeout","calculatePercent","extractCells","worksheet","sheetName","kwdelAddress","c","dateAddress","timeAddress","kwhdelAddress","kwdelRef","utils","encode_cell","dateRef","timeRef","kwhdelRef","kwdelCell","timeCell","dateCell","kwhdelCell","extractDataFromRow","rowData","kwdelCellData","extractNumber","kwhdelCellData","dateCellData","extractDate","timeCellData","Boolean","concat","getHours","getMinutes","extractLoadProfileRawFromWorkbook","MonthlyInterruptionSettingsKey","handleProgressUpdate","lp_rawDatas","SheetNames","exists","Sheets","range","decode_range","e","s","totalRows","percent","toFixed","cells","LoadProfileParser","onFileParsed","setProgress","setsProgressInfo","setErrors","setMeteringPoints","catch","dropZone","cursor","dropZone_focused","dropZone_content","flexWrap","dropZoneText","fontWeight","FileDrop","helperText","onFileDrop","onDragEnter","onDragLeave","onDragOver","dragging","setDragging","handleDragEnter","handleDragLeave","onDrop","getRootProps","getInputProps","onMouseEnter","onMouseLeave","clsx","gridGap","marginTop","LoadProfileAccordion","files","setFiles","loadProfileContext","useContext","prevMap","duplicate","handleFileParsed","lpRawDatas","handleRemoveFile","MonthlyInterruptionUtil","createRawDataObject","getDay","DURATION","durationCol","FEEDER","feederCol","extractDataFromCells","rowCells","feederCellData","extractText","durationCellData","feederAddress","durationAddress","feederRef","durationRef","MonthlyInterruptionExcelUtil","extractRawDatasFromWorkbook","progressCallback","monthlyInterruptionRawDatas","monthlyFeederAndDemand","addPowerSubstationRawData","addMonthlyInterruptionRawData","removePowerSubstationFile","removeMonthlyInterruptionFile","addFeederAndDemandIfNotExists","addItemIfNotExistElseGet","setPowerSubstationData","itemFeeder","addRawMonthlyInterruptionData","feederAndDemands","feederAndDemand","items","feederAndDemandItem","removePowerSubstationData","removeMonthlyInterruptionData","FeederAndDemandUtil","Data","addPowerSubstationRawDataAsync","addMonthlyInterruptionRawDataAsync","removePowerSubstationFileAsync","removeMonthlyInterruptionFileAsync","generateExcelFile","book_new","worksheetName","worksheetData","second","feederInput","demand","totalMinutes","totalHours","operatingHours","powerFactor","loadFactor","generateSheetData","aoa_to_sheet","book_append_sheet","writeFile","calculateOperatingHours","hours","getTotalDays","FeederAndDemandItem","totalOperatingHours","minutes","kvarhrEnergy","powerSubstaionFileName","demandKwhr","kwhrEnergy","getTotalMinutes","getPowerFactor","getLoadFactor","pf","cos","atan","lf","FeederAndDemand","MonthlyFeederAndDemand","recalculateData","tempMfd","PowerSubstationSettingsKey","FeederAndDemandContext","onMonthlyInterruptionOrPowerSubstationFileParsed","onPowerSubstationDataFileRemoved","onMonthlyInterruptionFileRemoved","FeederAndDemandContextProvider","setMonthlyFeederAndDemand","MonthlyInterruptionData","processBufferDatas","newMonthlyFeederAndDemand","initValues","PowerSubstationData","MonthlyInterruptionAccordion","feederAndDemandContext","MonthlyInterruptionParser","PowerSubstationUtil","DEMAND","demandKwhrCol","KWHRENERGY","kwhrEnergyCol","KVARHRENERGY","kvarhrEnergyCol","createRawData","bililngPeriod","kwhrEnergyCellData","demandKwhrCellData","kvarhrEnergyCelLData","kwhrEnergyAddress","demandKwhrAddress","kvarhrEnergyAddress","kwhrEnergyRef","kvarhrEnergyRef","demandKwhrRef","PowerSubstationExcelUtil","BootstrapInput","withStyles","input","fontFamily","join","borderColor","InputBase","FormSelectField","label","FormControl","InputLabel","id","Select","labelId","MenuItem","form","billingYear","flex","openBillingPeriodDialog","setOpenBillingPeriodDialog","setBillingYear","setBillingMonth","setBillingPeriod","bp","DialogContentText","onSubmit","preventDefault","DialogActions","PowerTransformerLossItem","operationHours","energMwhr","demandMW","loadMVA","percentLoading","averageLoad","lossFactor","coreLoss","windingLoss","auxiliaryLoss","totalLosses","rawDemand","rawEnergyMwh","rawKvarhrEnergy","getTotal","totalKvarhr","getLoadMva","getPercentLoading","getAverageLoad","getLossFactor","getCoreLoss","getWindingLoss","getAuxiliaryLoss","getTotalLosses","rawSet","kvarhr","kwhr","lmva","loadMva","powerTransformer","pl","energyMwh","avl","transformerPower","cl","wl","al","PowerTransformerLossSubstation","generateKey","PowerTransformerLoss","MonthlyPowerTransformerLoss","monthlyPowerTransformerLoss","powerTransformerLosses","ptl","pti","billingpPeriod","addPowerSubstatoinRawDatas","addIfNotExistOrElseGet","addIfNotExistsOrElseGet","addPowerSubstatoinData","replacePowerTransformerLossItem","PowerTransformerLossUtil","powerTransformerLoss","addPowerSubstatoinRawDatasAsync","replacePowerTransformerLossItemAsync","tempPowerTransformerLoss","PowerTransformerLossContext","onPowerTransformerLossItemChanged","onPowerSubstationFileParsed","onPowerSubstationFileRemoved","flieName","PowerTransformerLossContextProvider","setMonthlyPowerTransformerLoss","d","newPlts","powerTransformerLossContext","PowerSubstationParser","FilesDrawer","setExpandedPanel","handlePanelChange","newExpandedPanel","Drawer","anchor","PowerSubstationAccordion","top","left","title_div","tabs","flexGrow","tab_panel","textFieldContainer","actionContainer","LoadProfileSettingsPanel","focused","FormTextField","placeholder","helpertext","limitZero","TextField","InputProps","disableUnderline","tab","textAlign","minWidth","lineHeight","tab_selected","tab_wrapper","HorizontalTab","Tab","wrapper","SettingsTabs","useTreeItemStyles","paddingLeft","hover","borderTopRightRadius","borderBottomRightRadius","paddingRight","typography","fontWeightMedium","fontWeightRegular","group","labelRoot","labelIcon","marginRight","labelText","bold","StyledTreeItem","LabelIcon","labelInfo","Content","bgColor","other","TreeItem","style","VerticalTab","setKwdel","khwdel","setKwhdel","time","setTime","setDateFormat","setTimeFormat","lpSettings","SettingsPanel","alert","MonthlyInterruptionPanel","setDurationCol","setDateCol","setFeederCol","PowerSubstationPanel","demandCol","setDemandCol","setKwhrEnergyCol","setKvarhrEnergyCol","TabPanel","role","hidden","aria-labelledby","p","Settings","LOADPROFILE_TAB","selectedTab","setSelectedTab","Tabs","orientation","centered","indicatorColor","newTab","MONTHLYINTERRUPTION_TAB","POWERSUBSTATION_TAB","DetailsTree","monthlyLoadProfile","TreeView","defaultExpanded","defaultCollapseIcon","ArrowDownward","defaultExpandIcon","ArrowRight","defaultEndIcon","nodeId","TrendingUp","Functions","lpMax","lpSum","labelContent","labelSmall","labelHeader","HourTreeItem","header","getDailyLoadProfile","DayTree","Today","dayTree","MonthlyTree","CalendarToday","from","DayTreeItem","generateMonthlyLoadProfileXlsx","DataTab","start","end","monthlyCard_root","monthlyCard_paper","monthlyCard_paperAction","monthlyCard_paperContent","downloadBtn","MonthlyCard","generateLoadProfileExcel","GetAppRounded","graphContent","LoadProfileGraph","Paper","factory","scaleBand","showGrid","valueField","argumentField","monthlyLoadpRofile","loadProfileContent_tabPanel","loadProfileContent_root","LoadProfileContent","DATA","GRAPH","loadProfileContent_Header","loadProfileContent_Title","loadProfileContent_contentWrapper","loadProfileContent_content","LoadProfileTabPanel","numbers","FederTreeitem","MonthlyFeederTree","FeederTreeItem","MonthlyFeederCard","FeederAndDemandContent","feederAndDemandContent_root","feederAndDemand_header","feederAndDemand_title","feederAndDemand_contentContainer","feederAndDemandContent","FeederAndDemandContentRoot","inputField","outline","standard","easeInOut","errorField","PowerTransformerLossItemTree","powerTransformerLossItem","setDemand","demandError","setDemmandError","newItem","PowerTransformerLossSubstationTree","powerTransformerLossSubstation","Place","Title","PlaceOutlined","MonthlyPowerTransformerLossTree","MonthlyPowerTransformerLossCard","ContentTabs","PowerTransformerLossContent","PowerTransformerLossContentRoot","mainContent_content","maincontent_root","tabs_container","MainContent","LOAD_PROFILE","POWER_BILL","FEEDERDEMAND_OUTAGED","SUBSTATION_LOSS","POWER_TRANSFORMER_LOSS","dashboard_root","dashboard_content","Dashboard","filesDrawerClasses","filesDrawerStyles","openFilesDrawer","setOpenFilesDrawer","openSettings","setOpenSettings","App","ThemeProvider","CssBaseline","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cb56dbb.chunk.js","sourcesContent":["enum Month {\r\n  JANUARY,\r\n  FEBRUARY,\r\n  MARCH,\r\n  APRIL,\r\n  MAY,\r\n  JUNE,\r\n  JULY,\r\n  AUGUST,\r\n  SEPTEMBER,\r\n  OCTOBER,\r\n  NOVEMBER,\r\n  DECEMBER,\r\n}\r\n\r\nexport default Month;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#45aaf2\",\r\n      dark: \"#2d98da\",\r\n      contrastText: \"white\",\r\n    },\r\n    secondary: {\r\n      main: \"#fc5c65\",\r\n      dark: \"#eb3b5a\",\r\n      contrastText: \"white\",\r\n    },\r\n    text: {\r\n      primary: \"#778ca3\",\r\n      secondary: \"#B4BEC8\",\r\n    },\r\n    background: {\r\n      default: \"#F5F7F9\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","class HourlyLoadProfile {\r\n  hour: number;\r\n  kwdelSet: { fileName: string; kwdel: number; kwhdel: number }[];\r\n\r\n  constructor(hour: number) {\r\n    this.hour = hour;\r\n    this.kwdelSet = [];\r\n  }\r\n\r\n  addKwdel(kwdel: number, kwhdel: number, fileName: string): void {\r\n    this.kwdelSet.push({ fileName, kwdel, kwhdel });\r\n  }\r\n\r\n  removeKwdel(fileName: string) {\r\n    this.kwdelSet = this.kwdelSet.filter(\r\n      (kwdel) => kwdel.fileName !== fileName\r\n    );\r\n  }\r\n\r\n  getTotalKwhdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwhdel;\r\n    }\r\n    return total / this.kwdelSet.length;\r\n  }\r\n\r\n  getRawTotalKwhdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwhdel;\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalKwdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwdel;\r\n    }\r\n    return total / this.kwdelSet.length;\r\n  }\r\n\r\n  getRawTotal(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwdel;\r\n    }\r\n    return total;\r\n  }\r\n}\r\n\r\nexport default HourlyLoadProfile;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport HourlyLoadProfile from \"./HourlyLoadProfile\";\r\n\r\nclass DailyLoadProfile {\r\n  date: Date;\r\n  hourlyLoadProfiles: HourlyLoadProfile[];\r\n  max: { kwdel: number; hour: number };\r\n  sum: { kwdel: number; kwhdel: number };\r\n\r\n  constructor(date: Date) {\r\n    this.date = date;\r\n    this.hourlyLoadProfiles = this.buildHourlyLoadProfiles();\r\n    this.max = { kwdel: 0, hour: 0 };\r\n    this.sum = { kwdel: 0, kwhdel: 0 };\r\n  }\r\n\r\n  private buildHourlyLoadProfiles() {\r\n    return [...Array(24).keys()].map((hour) => {\r\n      return new HourlyLoadProfile(hour);\r\n    });\r\n  }\r\n\r\n  addLoadProfileData(rawData: LoadProfile_Raw) {\r\n    this.hourlyLoadProfiles[rawData.hour].addKwdel(\r\n      rawData.kwdel,\r\n      rawData.kwhdel,\r\n      rawData.fileName\r\n    );\r\n  }\r\n\r\n  removeLoadProfileData(fileName: string) {\r\n    this.hourlyLoadProfiles.forEach((hourloadProfile) => {\r\n      hourloadProfile.removeKwdel(fileName);\r\n    });\r\n  }\r\n\r\n  genMaxAndSum() {\r\n    let maxKwdel = 0;\r\n    let hour = 1;\r\n    let kwdelSum = 0;\r\n    let kwhdelSum = 0;\r\n    for (let hourlyLoadProfile of this.hourlyLoadProfiles) {\r\n      let kwdel = hourlyLoadProfile.getTotalKwdel();\r\n      kwdelSum += kwdel;\r\n      kwhdelSum += hourlyLoadProfile.getRawTotalKwhdel();\r\n      if (kwdel > maxKwdel) {\r\n        hour = hourlyLoadProfile.hour;\r\n        maxKwdel = kwdel;\r\n      }\r\n    }\r\n\r\n    this.max = { kwdel: maxKwdel, hour };\r\n    this.sum = { kwdel: kwdelSum, kwhdel: kwhdelSum };\r\n    return { max: this.max, sum: this.sum };\r\n  }\r\n}\r\n\r\nexport default DailyLoadProfile;\r\n","enum Feeder {\r\n  TETUAN = \"Tetuan\",\r\n  MERCEDES = \"Mercedes\",\r\n  NORTHSIDE = \"Northside\",\r\n  ZAMPEN = \"Zampen\",\r\n  GUIWAN = \"Guiwan\",\r\n  TUMAGA = \"Tumaga\",\r\n  ARENA_BLANCO = \"Arena Blanco\",\r\n  PRESA = \"Presa\",\r\n  SAN_JOSE = \"San Jose\",\r\n  CALARIAN = \"Calarian\",\r\n  BALIWASAN = \"Baliwasan\",\r\n  DEDICATED_LINE = \"Dedicated Line\",\r\n  INTERCO = \"Interco (1-3MVA)\",\r\n  CULIANAN = \"Culianan\",\r\n  CURUAN = \"Curuan\",\r\n  FISHING_PORT = \"Fishing Port\",\r\n  TALISAYAN = \"Talisayan\",\r\n  LABUAN = \"Labuan\",\r\n  RECODO = \"Recodo\",\r\n  SINUNUC = \"Sinunuc\",\r\n  PERMEX = \"PERMEX (2-2MVA)\",\r\n  BIG_FISH = \"Big Fish (1-2MVA)\",\r\n  TIN_CAN_ORIENTAL = \"Tin Can Oriental (1-2MVA)\",\r\n  MEGA_FISHIN_CORP = \"Mega Fishing Corp. (1-4MVA)\",\r\n  MEGA_FISHIN_CORP2 = \"Mega Fishing Corp. (1-3MVA)\",\r\n  PASONANCA = \"Pasonanca\",\r\n  SAN_ROQUE = \"San Roque\",\r\n  ACLEM = \"Aclem\",\r\n  GOVERNOR_ALVAREZ = \"Governor Alvarez\",\r\n  VETERANS_AVENUE = \"Veterans Avenue\",\r\n  NUNEZ = \"Nuňez\",\r\n  STA_CATALINA = \"Sta Catalina\",\r\n  RIO_HONDO = \"Rio Hondo\",\r\n  GUARDIA_NACIONAL = \"Guardia Nacional\",\r\n  CAMPANER = \"Campaner\",\r\n  KCC_MALL = \"KCC Mall (1-10MVA)\",\r\n}\r\n\r\nexport default Feeder;\r\n","import moment from \"moment\";\r\nimport Month from \"./Month\";\r\n\r\nclass BillingPeriod {\r\n  month: number;\r\n  year: number;\r\n  startDate: Date;\r\n  enddDate: Date;\r\n\r\n  constructor(month: number, year: number) {\r\n    this.month = month;\r\n    this.year = year;\r\n    this.startDate = this.getStartDate();\r\n    this.enddDate = this.getEndDate();\r\n  }\r\n\r\n  static getBillingMonth(\r\n    month: number,\r\n    day: number,\r\n    minute: number = 1,\r\n    hour: number = 0\r\n  ) {\r\n    let billingMonth = month;\r\n    if (day >= 26) {\r\n      if (!(hour === 0 && minute === 0 && day === 26)) {\r\n        billingMonth = ++billingMonth % 12;\r\n        if (billingMonth === 0) {\r\n          billingMonth = 12;\r\n        }\r\n      }\r\n    }\r\n    return billingMonth;\r\n  }\r\n\r\n  getTotalDays() {\r\n    return Math.round(\r\n      (this.enddDate.getTime() - this.startDate.getTime()) /\r\n        (1000 * 60 * 60 * 24)\r\n    );\r\n  }\r\n\r\n  private getStartDate() {\r\n    let startMonth = this.month === 1 ? 12 : this.month - 1;\r\n    let startYear = this.month === 1 ? this.year - 1 : this.year;\r\n    return moment(`${startMonth}/26/${startYear}`, \"MM/DD/YYYY\").toDate();\r\n  }\r\n\r\n  private getEndDate() {\r\n    return moment(`${this.month}/25/${this.year}`, \"MM/DD/YYYY\").toDate();\r\n  }\r\n\r\n  equalsTo(billingPeriod: BillingPeriod): boolean {\r\n    if (\r\n      this.month === null ||\r\n      billingPeriod == null ||\r\n      billingPeriod.month === null\r\n    ) {\r\n      return false;\r\n    }\r\n    return (\r\n      this.month === billingPeriod.month && this.year === billingPeriod.year\r\n    );\r\n  }\r\n\r\n  toString() {\r\n    return `${Month[this.month - 1]} ${this.year}`;\r\n  }\r\n}\r\n\r\nexport default BillingPeriod;\r\n","class Transformer {\r\n  static readonly HYOSUNG_20MVA = new Transformer(\r\n    \"HYOSUNG_20MVA\",\r\n    \"HYOSUNG PTX - 20MVA\",\r\n    \"TP99-8513\",\r\n    20,\r\n    \"HYOSUNG\"\r\n  );\r\n  static readonly SHIHLIN_20MVA = new Transformer(\r\n    \"SHIHLIN_20MVA\",\r\n    \"SHIHLIN PTX - 20MVA\",\r\n    \"810014\",\r\n    20,\r\n    \"SHIHLIN\"\r\n  );\r\n  static readonly SHIHLIN_10MVVA = new Transformer(\r\n    \"SHIHLIN_10MVVA \",\r\n    \"SHIHLIN PTX - 10MVA\",\r\n    \"T990113\",\r\n    10,\r\n    \"SHIHLIN\"\r\n  );\r\n  static readonly SHIHLIN_5MVA = new Transformer(\r\n    \"SHIHLIN_5MVA\",\r\n    \"SHIHLIN PTX - 5MVA\",\r\n    \"\",\r\n    5,\r\n    \"SHIHLIN\"\r\n  );\r\n  static readonly NANJING_20MVA = new Transformer(\r\n    \"NANJING_20MVA\",\r\n    \"NANJING PTX - 20MVA\",\r\n    \"610205\",\r\n    20,\r\n    \"NANJING\"\r\n  );\r\n  static readonly PRIME_MEIDEN_10MVA = new Transformer(\r\n    \"PRIME_MEIDEN_10MVA\",\r\n    \"PRIME MEIDEN PTX - 10MVA\",\r\n    \"\",\r\n    10,\r\n    \"PRIME MAIDEN\"\r\n  );\r\n  static readonly NEW_KOREA_10MVA = new Transformer(\r\n    \"NEW_KOREA_10MVA\",\r\n    \"NEW KOREA PTX - 10MVA\",\r\n    \"W910009\",\r\n    10,\r\n    \"NEW KOREA\"\r\n  );\r\n  static readonly NEW_KOREA_5MVA = new Transformer(\r\n    \"NEW_KOREA_5MVA\",\r\n    \"NEW KOREA PTX - 5MVA\",\r\n    \"920194\",\r\n    5,\r\n    \"NEW KOREA\"\r\n  );\r\n  static readonly CHANGZHOU_10MVA = new Transformer(\r\n    \"CHANGZHOU_10MVA\",\r\n    \"CHANGZHOU PTX - 10MVA\",\r\n    \"91-61-146\",\r\n    10,\r\n    \"CHANGZHOU\"\r\n  );\r\n  static readonly SHENDA_25MVA = new Transformer(\r\n    \"SHENDA_25MVA\",\r\n    \"SHENDA PTX - 25MVA\",\r\n    \"\",\r\n    25,\r\n    \"SHENDA\"\r\n  );\r\n\r\n  key: string;\r\n  text: string;\r\n  serialNumber: string;\r\n  power: number;\r\n  brand: string;\r\n\r\n  private constructor(\r\n    key: string,\r\n    text: string,\r\n    serialNumber: string,\r\n    power: number,\r\n    brand: string\r\n  ) {\r\n    this.key = key;\r\n    this.text = text;\r\n    this.serialNumber = serialNumber;\r\n    this.power = power;\r\n    this.brand = brand;\r\n  }\r\n\r\n  toString() {\r\n    return this.key;\r\n  }\r\n}\r\n\r\nexport default Transformer;\r\n","import Feeder from \"./Feeder\";\r\nimport Transformer from \"./Transformer\";\r\n\r\nclass SubstationItem {\r\n  transformer: Transformer;\r\n  feeders: Set<Feeder>;\r\n  substationKey: string;\r\n\r\n  constructor(\r\n    transformer: Transformer,\r\n    feeders: Set<Feeder>,\r\n    substationKey: string\r\n  ) {\r\n    this.transformer = transformer;\r\n    this.feeders = feeders;\r\n    this.substationKey = substationKey;\r\n  }\r\n\r\n  toString() {\r\n    return this.transformer.key;\r\n  }\r\n\r\n  isFeederExist(feeder: Feeder) {\r\n    return this.feeders.has(feeder);\r\n  }\r\n}\r\n\r\nclass Substation {\r\n  static readonly PUTIK = new Substation(\"PUTIK\", \"PUTIK S/S\", [\r\n    new SubstationItem(\r\n      Transformer.SHIHLIN_20MVA,\r\n      new Set([\r\n        Feeder.GUIWAN,\r\n        Feeder.TUMAGA,\r\n        Feeder.ARENA_BLANCO,\r\n        Feeder.PRESA,\r\n      ]),\r\n      \"PUTIK\"\r\n    ),\r\n    new SubstationItem(\r\n      Transformer.HYOSUNG_20MVA,\r\n      new Set([\r\n        Feeder.TETUAN,\r\n        Feeder.MERCEDES,\r\n        Feeder.NORTHSIDE,\r\n        Feeder.ZAMPEN,\r\n      ]),\r\n      \"PUTIK\"\r\n    ),\r\n  ]);\r\n  static readonly SANJOSE_GUSU = new Substation(\r\n    \"SAN JOSE GUSU\",\r\n    \"SAN JOSE GUSU S/S\",\r\n    [\r\n      new SubstationItem(\r\n        Transformer.NANJING_20MVA,\r\n        new Set([\r\n          Feeder.SAN_JOSE,\r\n          Feeder.CALARIAN,\r\n          Feeder.BALIWASAN,\r\n          Feeder.DEDICATED_LINE,\r\n        ]),\r\n        \"SAN JOSE GUSU\"\r\n      ),\r\n      new SubstationItem(\r\n        Transformer.NEW_KOREA_10MVA,\r\n        new Set(),\r\n        \"SAN JOSE GUSU\"\r\n      ),\r\n    ]\r\n  );\r\n  static readonly SANGALI = new Substation(\"SANGALI\", \"SANGALI S/S\", [\r\n    new SubstationItem(\r\n      Transformer.PRIME_MEIDEN_10MVA,\r\n      new Set([Feeder.CULIANAN, Feeder.CURUAN, Feeder.FISHING_PORT]),\r\n      \"SANGALI\"\r\n    ),\r\n  ]);\r\n  static readonly AYALA = new Substation(\"AYALA\", \"AYALA S/S\", [\r\n    new SubstationItem(\r\n      Transformer.SHIHLIN_10MVVA,\r\n      new Set([Feeder.TALISAYAN, Feeder.LABUAN]),\r\n      \"AYALA\"\r\n    ),\r\n  ]);\r\n\r\n  static readonly RECODO = new Substation(\"RECODO\", \"RECODO S/S\", [\r\n    new SubstationItem(\r\n      Transformer.NEW_KOREA_10MVA,\r\n      new Set([Feeder.RECODO]),\r\n      \"RECODO\"\r\n    ),\r\n    new SubstationItem(\r\n      Transformer.NEW_KOREA_5MVA,\r\n      new Set([Feeder.SINUNUC]),\r\n      \"RECODO\"\r\n    ),\r\n    new SubstationItem(Transformer.SHIHLIN_5MVA, new Set([]), \"RECODO\"),\r\n  ]);\r\n  static readonly CABATANGAN = new Substation(\"CABATANGAN\", \"CABATANGAN S/S\", [\r\n    new SubstationItem(\r\n      Transformer.CHANGZHOU_10MVA,\r\n      new Set([Feeder.PASONANCA]),\r\n      \"CABATANGAN\"\r\n    ),\r\n    new SubstationItem(\r\n      Transformer.PRIME_MEIDEN_10MVA,\r\n      new Set([Feeder.SAN_ROQUE]),\r\n      \"CABATANGAN\"\r\n    ),\r\n  ]);\r\n  static readonly CAMANCHILI = new Substation(\"CAMANCHILI\", \"CAMANCHILI S/S\", [\r\n    new SubstationItem(\r\n      Transformer.SHIHLIN_20MVA,\r\n      new Set([\r\n        Feeder.ACLEM,\r\n        Feeder.GOVERNOR_ALVAREZ,\r\n        Feeder.VETERANS_AVENUE,\r\n        Feeder.NUNEZ,\r\n      ]),\r\n      \"CAMANCHILI\"\r\n    ),\r\n    new SubstationItem(\r\n      Transformer.SHENDA_25MVA,\r\n      new Set([\r\n        Feeder.STA_CATALINA,\r\n        Feeder.RIO_HONDO,\r\n        Feeder.GUARDIA_NACIONAL,\r\n        Feeder.CAMPANER,\r\n      ]),\r\n      \"CAMANCHILI\"\r\n    ),\r\n  ]);\r\n\r\n  static readonly ALL = [\r\n    Substation.PUTIK,\r\n    Substation.RECODO,\r\n    Substation.SANGALI,\r\n    Substation.SANJOSE_GUSU,\r\n    Substation.AYALA,\r\n    Substation.CABATANGAN,\r\n    Substation.CAMANCHILI,\r\n  ];\r\n\r\n  key: string;\r\n  text: string;\r\n  substationItems: SubstationItem[];\r\n\r\n  private constructor(\r\n    key: string,\r\n    text: string,\r\n    substationItems: SubstationItem[]\r\n  ) {\r\n    this.key = key;\r\n    this.text = text;\r\n    this.substationItems = substationItems;\r\n  }\r\n\r\n  toStrting() {\r\n    return this.key;\r\n  }\r\n}\r\n\r\nexport default Substation;\r\nexport { SubstationItem };\r\n","import Feeder from \"./Feeder\";\r\nimport Substation from \"./Substation\";\r\n\r\nclass MeteringPoint {\r\n  static readonly MF3MPITZAMC01 = new MeteringPoint(\"MF3MPITZAMC01\", [\r\n    Substation.PUTIK,\r\n  ]);\r\n\r\n  static readonly MF3MPITZAMC02 = new MeteringPoint(\"MF3MPITZAMC02\", [\r\n    Substation.SANJOSE_GUSU,\r\n  ]);\r\n\r\n  static readonly MF3MPITZAMC03 = new MeteringPoint(\"MF3MPITZAMC03\", [\r\n    Substation.SANGALI,\r\n  ]);\r\n  static readonly MF3MPITZAMC04 = new MeteringPoint(\"MF3MPITZAMC04\", [\r\n    Substation.RECODO,\r\n    Substation.AYALA,\r\n  ]);\r\n  static readonly MF3MPITZAMC05 = new MeteringPoint(\"MF3MPITZAMC05\", [\r\n    Substation.CABATANGAN,\r\n  ]);\r\n  static readonly MF3MPITZAMC06 = new MeteringPoint(\"MF3MPITZAMC06\", []);\r\n  static readonly MF3MPITZAMC07 = new MeteringPoint(\"MF3MPITZAMC07\", [\r\n    Substation.CAMANCHILI,\r\n  ]);\r\n\r\n  key: string;\r\n  substations: Substation[];\r\n\r\n  private constructor(key: string, substations: Substation[]) {\r\n    this.key = key;\r\n    this.substations = substations;\r\n  }\r\n\r\n  toString() {\r\n    return this.key;\r\n  }\r\n\r\n  getFeeders() {\r\n    let feeders: Feeder[] = [];\r\n    for (let substation of this.substations) {\r\n      for (let substationItem of substation.substationItems) {\r\n        feeders = [...feeders, ...substationItem.feeders];\r\n      }\r\n    }\r\n    return feeders;\r\n  }\r\n\r\n  static getMeteringPoint(meteringPoint: string): MeteringPoint | null {\r\n    switch (meteringPoint.toUpperCase()) {\r\n      case this.MF3MPITZAMC01.key:\r\n        return this.MF3MPITZAMC01;\r\n      case this.MF3MPITZAMC02.key:\r\n        return this.MF3MPITZAMC02;\r\n      case this.MF3MPITZAMC03.key:\r\n        return this.MF3MPITZAMC03;\r\n      case this.MF3MPITZAMC04.key:\r\n        return this.MF3MPITZAMC04;\r\n      case this.MF3MPITZAMC05.key:\r\n        return this.MF3MPITZAMC05;\r\n      case this.MF3MPITZAMC06.key:\r\n        return this.MF3MPITZAMC06;\r\n      case this.MF3MPITZAMC07.key:\r\n        return this.MF3MPITZAMC07;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  static exists(meteringPoint: string): boolean {\r\n    switch (meteringPoint) {\r\n      case this.MF3MPITZAMC01.key:\r\n      case this.MF3MPITZAMC02.key:\r\n      case this.MF3MPITZAMC03.key:\r\n      case this.MF3MPITZAMC04.key:\r\n      case this.MF3MPITZAMC05.key:\r\n      case this.MF3MPITZAMC06.key:\r\n      case this.MF3MPITZAMC07.key:\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeteringPoint;\r\n","import Month from \"./Month\";\r\nimport Feeder from \"./Feeder\";\r\nimport Substation from \"./Substation\";\r\n\r\nfunction findFeeder(feederText: String): string | null {\r\n  feederText = feederText.toUpperCase().trim();\r\n  for (let feeder of Object.values(Feeder)) {\r\n    if (feeder.toUpperCase().trim() === feederText) {\r\n      return feeder.toUpperCase().trim();\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getMonths(): { month: string; monthNum: number }[] {\r\n  let months: { month: string; monthNum: number }[] = [];\r\n\r\n  let monthNum = 1;\r\n  for (let month of Object.values(Month)) {\r\n    if (isNaN(Number(month))) {\r\n      months.push({ month: String(month), monthNum });\r\n      monthNum++;\r\n    }\r\n  }\r\n\r\n  return months;\r\n}\r\n\r\nfunction getYears(): number[] {\r\n  let years: number[] = [];\r\n  let yearNow = new Date().getFullYear();\r\n  for (let year = 2012; year <= yearNow; year++) {\r\n    years.push(year);\r\n  }\r\n  return years;\r\n}\r\n\r\nfunction isFeederExistsOnFeeders(feeder: Feeder, feeders: Feeder[]) {\r\n  for (let f of feeders) {\r\n    if (feeder.toUpperCase().trim() === f.toUpperCase().trim()) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction findSubstationOfFeeder(feeder: Feeder) {\r\n  let result = null;\r\n  for (let substation of Substation.ALL) {\r\n    for (let item of substation.substationItems.values()) {\r\n      if (isFeederExistsOnFeeders(feeder, [...item.feeders.values()])) {\r\n        return substation;\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction findSubstationItemOfFeeder(feeder: Feeder, substation: Substation) {\r\n  let result = null;\r\n\r\n  for (let item of substation.substationItems.values()) {\r\n    if (isFeederExistsOnFeeders(feeder, [...item.feeders.values()])) {\r\n      return item;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nconst GeneralUtil = Object.freeze({\r\n  findSubstationOfFeeder,\r\n  getYears,\r\n  getMonths,\r\n  findFeeder,\r\n  findSubstationItemOfFeeder,\r\n});\r\n\r\nexport default GeneralUtil;\r\nexport { findFeeder, getMonths, getYears };\r\n","import { AppBar, Box } from \"@material-ui/core\";\r\nimport { Folder, Settings } from \"@material-ui/icons\";\r\nimport { ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport StyledToggleButton from \"./StyledToggleButton\";\r\n\r\nimport useStyles from \"./use-styles\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\ntype ToolbarProps = {\r\n  onSettingsToggled: () => void;\r\n  onSettingsUntoggled: () => void;\r\n  onFilesToggled: () => void;\r\n  onFilesUntoggled: () => void;\r\n};\r\n\r\nenum ToggleValues {\r\n  FILES = \"files\",\r\n  SETTINGS = \"settings\",\r\n  NONE = \"\",\r\n}\r\n\r\nconst Toolbar: React.FC<ToolbarProps> = ({\r\n  onFilesToggled,\r\n  onSettingsToggled,\r\n  onSettingsUntoggled,\r\n  onFilesUntoggled,\r\n  ...others\r\n}) => {\r\n  const [toggledButton, setToggledButton] = useState<string>(\r\n    ToggleValues.FILES\r\n  );\r\n  const [otherToggledButton, setOtherToggledButton] = useState<string>(\r\n    ToggleValues.NONE\r\n  );\r\n\r\n  function handleToggleChange(\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newToggle: string\r\n  ) {\r\n    console.log({\r\n      method: \"handleToggleChange()\",\r\n      params: { newToggle },\r\n    });\r\n\r\n    const prevToggled = toggledButton;\r\n    setToggledButton(newToggle);\r\n    if (newToggle === ToggleValues.FILES) {\r\n      onFilesToggled();\r\n    } else if (prevToggled === ToggleValues.FILES) {\r\n      onFilesUntoggled();\r\n    }\r\n  }\r\n\r\n  function handleOtherToggleChange(\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newToggle: string\r\n  ) {\r\n    console.log({\r\n      method: \"handleOtherToggleChange()\",\r\n      params: { newToggle },\r\n    });\r\n\r\n    const prevToggled = otherToggledButton;\r\n    setOtherToggledButton(newToggle);\r\n    if (newToggle === ToggleValues.SETTINGS) {\r\n      onSettingsToggled();\r\n    } else if (prevToggled === ToggleValues.SETTINGS) {\r\n      onSettingsUntoggled();\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar\r\n      elevation={4}\r\n      className={classes.root}\r\n      position=\"static\"\r\n      color=\"inherit\"\r\n    >\r\n      <Box className={classes.container}>\r\n        <Box className={classes.toggleButtonsContainer}>\r\n          <ToggleButtonGroup\r\n            onChange={handleToggleChange}\r\n            value={toggledButton}\r\n            exclusive\r\n          >\r\n            <StyledToggleButton value={ToggleValues.FILES}>\r\n              <Folder />\r\n            </StyledToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box className={classes.otherButtonsContainer}>\r\n          <ToggleButtonGroup\r\n            onChange={handleOtherToggleChange}\r\n            value={otherToggledButton}\r\n            exclusive\r\n          >\r\n            <StyledToggleButton value={ToggleValues.SETTINGS}>\r\n              <Settings />\r\n            </StyledToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import { BillingPeriod, Month } from \"../../common/object\";\r\n\r\nclass LoadProfile_Raw {\r\n  kwdel: number;\r\n  kwhdel: number;\r\n  hour: number;\r\n  day: number;\r\n  month: Month;\r\n  year: number;\r\n  minute: number;\r\n  meteringPoint: string;\r\n  row: number;\r\n  billingPeriod: BillingPeriod;\r\n  fileName: string;\r\n\r\n  constructor(\r\n    kwdel: number,\r\n    kwhdel: number,\r\n    day: number,\r\n    month: Month,\r\n    year: number,\r\n    hour: number,\r\n    minute: number,\r\n    meteringPoint: string,\r\n    row: number,\r\n    fileName: string = \"\"\r\n  ) {\r\n    this.kwdel = kwdel;\r\n    this.kwhdel = kwhdel;\r\n    this.day = day;\r\n    this.hour = hour;\r\n    this.month = month;\r\n    this.year = year;\r\n    this.minute = minute;\r\n    this.meteringPoint = meteringPoint;\r\n    this.row = row;\r\n    this.fileName = fileName;\r\n    if (this.hour === 0 && this.minute === 0) {\r\n      this.hour = 23;\r\n      this.minute = 59;\r\n      if (this.day - 1 <= 0) {\r\n        let date = new Date(`${this.year}/${this.month}/${this.day}`);\r\n        date.setDate(date.getDate() - 1);\r\n        this.day = date.getDate();\r\n        this.month = date.getMonth() + 1;\r\n        this.year = date.getFullYear();\r\n      } else {\r\n        this.day--;\r\n      }\r\n    }\r\n    let billingMonth = BillingPeriod.getBillingMonth(\r\n      this.month,\r\n      this.day,\r\n      this.hour,\r\n      this.minute\r\n    );\r\n\r\n    this.billingPeriod = new BillingPeriod(billingMonth, this.year);\r\n\r\n    if (this.minute === 0) {\r\n      this.hour--;\r\n      if (this.hour < 0) {\r\n        this.hour = 23;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default LoadProfile_Raw;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport DailyLoadProfile from \"./DailyLoadProfile\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"./types\";\r\n\r\nclass LoadProfile {\r\n  meteringPoint: string;\r\n  dailyLoadProfiles: Map<string, DailyLoadProfile>;\r\n  max: LoadProfileMax;\r\n  sum: LoadProfileSum;\r\n\r\n  constructor(meteringPoint: string) {\r\n    this.meteringPoint = meteringPoint;\r\n    this.dailyLoadProfiles = new Map();\r\n    this.max = { kwdel: 0, hour: 1, meteringPoint: \"\", date: new Date() };\r\n    this.sum = { kwdel: 0, kwhdel: 0, meteringPoint: this.meteringPoint };\r\n  }\r\n\r\n  addLoadProfileData(rawData: LoadProfile_Raw, dateString: string) {\r\n    if (!this.dailyLoadProfiles.has(dateString)) {\r\n      this.dailyLoadProfiles.set(\r\n        dateString,\r\n        new DailyLoadProfile(new Date(dateString))\r\n      );\r\n    }\r\n    this.dailyLoadProfiles.get(dateString)?.addLoadProfileData(rawData);\r\n  }\r\n\r\n  removeLoadPRofileData(fileName: string) {\r\n    this.dailyLoadProfiles.forEach((dailyLoadProfile) => {\r\n      dailyLoadProfile.removeLoadProfileData(fileName);\r\n    });\r\n  }\r\n\r\n  getDailyLoadProfile(dateString: string): DailyLoadProfile {\r\n    return this.dailyLoadProfiles.has(dateString)\r\n      ? (this.dailyLoadProfiles.get(dateString) as DailyLoadProfile)\r\n      : new DailyLoadProfile(new Date(dateString));\r\n  }\r\n\r\n  genMaxAndSum() {\r\n    let max = 0;\r\n    let kwhdelSum = 0;\r\n    let kwdelSum = 0;\r\n    let maxHour = 1;\r\n    let maxDate = new Date();\r\n\r\n    for (let dailyLoadProfile of this.dailyLoadProfiles.values()) {\r\n      const dailyMax = dailyLoadProfile.max;\r\n      const dailyKwdelSum = dailyLoadProfile.sum.kwdel;\r\n      const dailyKwhdelSum = dailyLoadProfile.sum.kwhdel;\r\n      console.log(\r\n        `Sum for day ${dailyLoadProfile.date.toLocaleDateString()} is: ${dailyKwhdelSum}`\r\n      );\r\n      kwhdelSum += dailyKwhdelSum;\r\n      kwdelSum += dailyKwdelSum;\r\n\r\n      if (dailyMax.kwdel > max) {\r\n        max = dailyMax.kwdel;\r\n        maxHour = dailyMax.hour;\r\n        maxDate = dailyLoadProfile.date;\r\n      }\r\n    }\r\n    console.log(`Sum for ${this.meteringPoint} is: ${kwhdelSum}`);\r\n\r\n    this.max = {\r\n      kwdel: max,\r\n      hour: maxHour,\r\n      date: maxDate,\r\n      meteringPoint: this.meteringPoint,\r\n    };\r\n    this.sum = {\r\n      kwdel: kwdelSum,\r\n      kwhdel: kwhdelSum,\r\n      meteringPoint: this.meteringPoint,\r\n    };\r\n    return { max: this.max, sum: this.sum };\r\n  }\r\n}\r\n\r\nexport default LoadProfile;\r\n","export default class CoincidentPeak {\r\n  meteringPoint: string;\r\n  kwdel: number;\r\n  hour: number;\r\n  date: Date;\r\n\r\n  constructor() {\r\n    this.meteringPoint = \"\";\r\n    this.kwdel = 0;\r\n    this.hour = 0;\r\n    this.date = new Date();\r\n  }\r\n}\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport LoadProfile from \"./LoadProfile\";\r\nimport { BillingPeriod } from \"../../common/object\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"./types\";\r\nimport CoincidentPeak from \"./CoincidentPeak\";\r\nimport HourlyLoadProfile from \"./HourlyLoadProfile\";\r\nimport DailyLoadProfile from \"./DailyLoadProfile\";\r\n\r\nclass MonthlyLoadProfile {\r\n  loadProfiles: Map<string, LoadProfile>;\r\n  billingPeriod: BillingPeriod;\r\n  dateStrings: Set<string>;\r\n  coincidentPeak: CoincidentPeak;\r\n  nonCoincidentPeak: number;\r\n  diversityFactor: number;\r\n  loadProfilesMax: LoadProfileMax[];\r\n  loadProfilesSum: LoadProfileSum[];\r\n  totalLoadpRofile: LoadProfile;\r\n  chartData: Map<string, any>;\r\n\r\n  constructor(billingPeriod: BillingPeriod) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.loadProfiles = new Map();\r\n    this.dateStrings = new Set();\r\n    this.totalLoadpRofile = new LoadProfile(\"Total\");\r\n    this.coincidentPeak = new CoincidentPeak();\r\n    this.nonCoincidentPeak = 0;\r\n    this.diversityFactor = 0;\r\n    this.loadProfilesMax = [];\r\n    this.loadProfilesSum = [];\r\n    this.chartData = new Map();\r\n  }\r\n\r\n  addData(rawData: LoadProfile_Raw) {\r\n    let key = rawData.meteringPoint;\r\n    let dateString = `${rawData.month}/${rawData.day}/${rawData.year}`;\r\n\r\n    if (!this.dateStrings.has(dateString)) {\r\n      this.dateStrings.add(dateString);\r\n    }\r\n\r\n    if (!this.loadProfiles.has(key)) {\r\n      this.loadProfiles.set(key, new LoadProfile(key));\r\n    }\r\n    this.loadProfiles.get(key)?.addLoadProfileData(rawData, dateString);\r\n  }\r\n\r\n  removeData(fileName: string, meteringPoints: string[]) {\r\n    meteringPoints.forEach((key) => {\r\n      if (this.loadProfiles.has(key)) {\r\n        let loadProfile = this.loadProfiles.get(key);\r\n        loadProfile?.removeLoadPRofileData(fileName);\r\n      }\r\n    });\r\n  }\r\n\r\n  private resetData() {\r\n    this.nonCoincidentPeak = 0;\r\n    this.loadProfilesMax = [];\r\n    this.loadProfilesSum = [];\r\n    this.totalLoadpRofile = new LoadProfile(\"Total\");\r\n    this.chartData = new Map();\r\n  }\r\n\r\n  private extractDataThenAddToTotal(\r\n    hourlyLoadProfile: HourlyLoadProfile,\r\n    dailyLoadProfile: DailyLoadProfile\r\n  ) {\r\n    let rawData = new LoadProfile_Raw(\r\n      hourlyLoadProfile.getTotalKwdel(),\r\n      hourlyLoadProfile.getTotalKwhdel(),\r\n      dailyLoadProfile.date.getDate(),\r\n      dailyLoadProfile.date.getMonth() + 1,\r\n      dailyLoadProfile.date.getFullYear(),\r\n      hourlyLoadProfile.hour,\r\n      3,\r\n      \"Total\",\r\n      0\r\n    );\r\n    let dateString = `${rawData.month}/${rawData.day}/${rawData.year}`;\r\n    this.totalLoadpRofile.addLoadProfileData(rawData, dateString);\r\n  }\r\n\r\n  private extractDailyLoadProfileTotalKwdelThenAddToData(\r\n    dailyLoadProfile: DailyLoadProfile,\r\n    loadProfile: LoadProfile\r\n  ) {\r\n    let dateKey = `${\r\n      dailyLoadProfile.date.getMonth() + 1\r\n    }/${dailyLoadProfile.date.getDate()}`;\r\n\r\n    if (!this.chartData.has(dateKey)) {\r\n      let obj: any = { date: dateKey };\r\n      obj[`${loadProfile.meteringPoint}`] = dailyLoadProfile.sum.kwdel;\r\n      this.chartData.set(dateKey, obj);\r\n    } else {\r\n      let obj = this.chartData.get(dateKey);\r\n      obj[`${loadProfile.meteringPoint}`] = dailyLoadProfile.sum.kwdel;\r\n    }\r\n  }\r\n\r\n  initOtherDetails() {\r\n    this.resetData();\r\n\r\n    let hlpList: HourlyLoadProfile[] = [];\r\n\r\n    for (let loadProfile of this.loadProfiles.values()) {\r\n      for (let dailyLp of [...loadProfile.dailyLoadProfiles.values()]) {\r\n        dailyLp.genMaxAndSum();\r\n        for (let hourlyLp of dailyLp.hourlyLoadProfiles) {\r\n          this.extractDataThenAddToTotal(hourlyLp, dailyLp);\r\n        }\r\n        this.extractDailyLoadProfileTotalKwdelThenAddToData(\r\n          dailyLp,\r\n          loadProfile\r\n        );\r\n      }\r\n      const { max, sum } = loadProfile.genMaxAndSum();\r\n\r\n      if (sum.kwdel === 0) {\r\n        this.loadProfiles.delete(loadProfile.meteringPoint);\r\n      } else {\r\n        this.loadProfilesMax.push(max);\r\n        this.loadProfilesSum.push(sum);\r\n        this.nonCoincidentPeak += max.kwdel;\r\n      }\r\n    }\r\n\r\n    for (let dlp of this.totalLoadpRofile.dailyLoadProfiles.values()) {\r\n      for (let hlp of dlp.hourlyLoadProfiles) {\r\n        if (hlp.getRawTotal() > this.coincidentPeak.kwdel) {\r\n          this.coincidentPeak.kwdel = hlp.getRawTotal();\r\n          this.coincidentPeak.date = dlp.date;\r\n          this.coincidentPeak.hour = hlp.hour;\r\n          this.coincidentPeak.meteringPoint = \"Total\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.diversityFactor = this.nonCoincidentPeak / this.coincidentPeak.kwdel;\r\n\r\n    console.log({\r\n      info: \"max and sum\",\r\n      max: this.loadProfilesMax,\r\n      sum: this.loadProfilesSum,\r\n      coincidental: this.coincidentPeak,\r\n      nonCoincidental: this.nonCoincidentPeak,\r\n      diversityFactor: this.diversityFactor,\r\n      totalLoadProfile: this.totalLoadpRofile,\r\n      chartData: this.chartData,\r\n      hourlyLoadpRofiles: hlpList,\r\n    });\r\n  }\r\n}\r\n\r\nexport default MonthlyLoadProfile;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { LoadProfile_Raw, MonthlyLoadProfile } from \"../loadprofile/objects\";\r\n\r\nexport type DeleteLoadpRofileInfo = {\r\n  fileName: string;\r\n  meteringPoints: string[];\r\n};\r\n\r\nconst LoadProfileContext = createContext<{\r\n  updateLoadProfiles: (rawDatas: LoadProfile_Raw[]) => void;\r\n  monthlyLoadProfiles: Map<string, MonthlyLoadProfile>;\r\n  working: boolean;\r\n  deleteLoadProfiles: (deleteLoadProfileInfo: DeleteLoadpRofileInfo) => void;\r\n}>({\r\n  updateLoadProfiles: (rawDatas) => {},\r\n  monthlyLoadProfiles: new Map(),\r\n  working: false,\r\n  deleteLoadProfiles: (deleteLoadProfileInfo) => {},\r\n});\r\n\r\ntype LoadProfileContextProviderProps = {};\r\nconst LoadProfileContextProvider: React.FunctionComponent<LoadProfileContextProviderProps> = (\r\n  props\r\n) => {\r\n  const { children, ...others } = props;\r\n  const [monthlyLoadProfiles, setMonthlyLoadProfiles] = useState(\r\n    new Map<string, MonthlyLoadProfile>()\r\n  );\r\n\r\n  const [buffer, setBuffer] = useState<\r\n    (LoadProfile_Raw[] | DeleteLoadpRofileInfo)[]\r\n  >([]);\r\n  const [working, setWorking] = useState(false);\r\n\r\n  useEffect(() => {}, [monthlyLoadProfiles]);\r\n\r\n  function updateLoadProfiles(rawDatas: LoadProfile_Raw[]) {\r\n    setBuffer((prevBuffer) => [...prevBuffer, rawDatas]);\r\n  }\r\n\r\n  function deleteLoadProfiles(deleteLaodProfileInfo: DeleteLoadpRofileInfo) {\r\n    setBuffer((prevBuffer) => [...prevBuffer, deleteLaodProfileInfo]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (working) return;\r\n    if (buffer.length <= 0) {\r\n      setWorking(false);\r\n      return;\r\n    }\r\n\r\n    let newBuffer = [...buffer];\r\n    let data = newBuffer.pop();\r\n    if (data) {\r\n      setWorking(true);\r\n\r\n      if (Array.isArray(data)) {\r\n        console.log(\"Data instance of ARRRRAAAAY....\");\r\n        addRawDatasToMonthlyLoadProfiles(data).then((result) => {\r\n          setMonthlyLoadProfiles(result);\r\n          setWorking(false);\r\n          setBuffer(newBuffer);\r\n        });\r\n      } else {\r\n        console.log(\"Data instance of ARRRRAAAAY....\");\r\n        deleteDataFromMonthlyLoadProfiles(\r\n          data.fileName,\r\n          data.meteringPoints\r\n        ).then((result) => {\r\n          setMonthlyLoadProfiles(result);\r\n          setWorking(false);\r\n          setBuffer(newBuffer);\r\n        });\r\n      }\r\n    }\r\n  }, [buffer]);\r\n\r\n  function addRawDatasToMonthlyLoadProfiles(rawDatas: LoadProfile_Raw[]) {\r\n    return new Promise<Map<string, MonthlyLoadProfile>>((resolve, reject) => {\r\n      console.log(\"Processing rawDatas\");\r\n      let newMonthlyLoadProfiles = new Map(monthlyLoadProfiles);\r\n      for (let rawData of rawDatas) {\r\n        let key = `${rawData.billingPeriod.month}-${rawData.year}`;\r\n        if (!newMonthlyLoadProfiles.has(key)) {\r\n          newMonthlyLoadProfiles.set(\r\n            key,\r\n            new MonthlyLoadProfile(rawData.billingPeriod)\r\n          );\r\n        }\r\n        newMonthlyLoadProfiles.get(key)?.addData(rawData);\r\n      }\r\n      newMonthlyLoadProfiles.forEach((mlp) => mlp.initOtherDetails());\r\n      resolve(newMonthlyLoadProfiles);\r\n    });\r\n  }\r\n\r\n  function deleteDataFromMonthlyLoadProfiles(\r\n    fileName: string,\r\n    meteringPoints: string[]\r\n  ) {\r\n    return new Promise<Map<string, MonthlyLoadProfile>>((resolve, reject) => {\r\n      console.log(\"DELETING LAODP ROFILESS\");\r\n      let newMonthlyLoadProfiles = new Map(monthlyLoadProfiles);\r\n      for (let key of newMonthlyLoadProfiles.keys()) {\r\n        let mpl = newMonthlyLoadProfiles.get(key);\r\n        mpl?.removeData(fileName, meteringPoints);\r\n      }\r\n      newMonthlyLoadProfiles.forEach((mlp) => {\r\n        mlp.initOtherDetails();\r\n        if (mlp.nonCoincidentPeak === 0) {\r\n          let key = `${mlp.billingPeriod.month}-${mlp.billingPeriod.year}`;\r\n          newMonthlyLoadProfiles.delete(key);\r\n        }\r\n      });\r\n      resolve(newMonthlyLoadProfiles);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <LoadProfileContext.Provider\r\n      value={{\r\n        updateLoadProfiles,\r\n        monthlyLoadProfiles,\r\n        deleteLoadProfiles,\r\n        working,\r\n      }}\r\n    >\r\n      {children}\r\n    </LoadProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LoadProfileContextProvider;\r\nexport { LoadProfileContext };\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport { ToggleButton } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\n\r\ntype StyledToggleButtonProps = {\r\n  value?: string;\r\n};\r\n\r\nconst StyledToggleButton: React.FunctionComponent<StyledToggleButtonProps> = ({\r\n  value,\r\n  children,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ToggleButton classes={{ root: classes.root }} value={value} {...others}>\r\n      {children}\r\n    </ToggleButton>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"none\",\r\n    borderRadius: 0,\r\n    \"&.Mui-selected\": {\r\n      backgroundColor: theme.palette.background.default,\r\n      color: theme.palette.primary.main,\r\n    },\r\n    \"&:hover, &.Mui-selected:hover\": {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    selected: {},\r\n  },\r\n}));\r\n\r\nexport default StyledToggleButton;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: 50,\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.drawer + 10,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  toggleButtonsContainer: {},\r\n  otherButtonsContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { LoadProfileSettings } from \"./objects/types\";\r\nenum LoadProfileStorageKey {\r\n  KWDEL = \"lp_kwdelCol\",\r\n  KWHDEL = \"lp_kwhdelCol\",\r\n  DATE = \"lp_dateCol\",\r\n  TIME = \"lp_timeCol\",\r\n  DATE_FORMAT = \"lp_dateFormat\",\r\n  TIME_FORMAT = \"lp_timeFormat\",\r\n}\r\n\r\nfunction loadSettings(): LoadProfileSettings {\r\n  let kwdelCol = Number(\r\n    localStorage.getItem(LoadProfileStorageKey.KWDEL) || \"1\"\r\n  );\r\n  let dateCol = Number(localStorage.getItem(LoadProfileStorageKey.DATE) || \"2\");\r\n  let timeCol = Number(localStorage.getItem(LoadProfileStorageKey.TIME) || \"3\");\r\n  let dateFormat =\r\n    localStorage.getItem(LoadProfileStorageKey.DATE_FORMAT) || \"MM/DD/YYYY\";\r\n  let timeFormat =\r\n    localStorage.getItem(LoadProfileStorageKey.TIME_FORMAT) || \"HH:mm\";\r\n\r\n  let kwhdelCol = Number(\r\n    localStorage.getItem(LoadProfileStorageKey.KWHDEL) || \"4\"\r\n  );\r\n  return {\r\n    kwdelCol,\r\n    dateCol,\r\n    timeCol,\r\n    dateFormat,\r\n    timeFormat,\r\n    kwhdelCol,\r\n  };\r\n}\r\n\r\nfunction saveSettings(settings: LoadProfileSettings): void {\r\n  localStorage.setItem(LoadProfileStorageKey.KWDEL, String(settings.kwdelCol));\r\n\r\n  localStorage.setItem(LoadProfileStorageKey.TIME, String(settings.timeCol));\r\n\r\n  localStorage.setItem(LoadProfileStorageKey.DATE, String(settings.dateCol));\r\n\r\n  localStorage.setItem(\r\n    LoadProfileStorageKey.DATE_FORMAT,\r\n    String(settings.dateFormat)\r\n  );\r\n\r\n  localStorage.setItem(\r\n    LoadProfileStorageKey.TIME_FORMAT,\r\n    String(settings.timeFormat)\r\n  );\r\n\r\n  localStorage.setItem(\r\n    LoadProfileStorageKey.KWHDEL,\r\n    settings.kwhdelCol.toString()\r\n  );\r\n}\r\n\r\nconst LoadProfileStorage = {\r\n  loadSettings,\r\n  saveSettings,\r\n};\r\n\r\nexport default LoadProfileStorage;\r\n","import Toolbar from \"./Toolbar\";\r\n\r\nexport default Toolbar;\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      position: \"static\",\r\n      borderLeft: `1px solid ${theme.palette.divider}`,\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useStyles;\r\nexport { drawerWidth };\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\n\r\ntype StyledAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n  panelName: string;\r\n  title: string;\r\n  render?: any;\r\n};\r\n\r\nconst StyledAccordion: React.FunctionComponent<StyledAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  panelName,\r\n  title,\r\n  render,\r\n  children,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function handlePanelChange(\r\n    event: React.ChangeEvent<{}>,\r\n    newExpanded: boolean\r\n  ) {\r\n    onPanelChange(newExpanded ? panelName : \"\");\r\n  }\r\n\r\n  return (\r\n    <Accordion\r\n      className={classes.accordion}\r\n      square\r\n      onChange={handlePanelChange}\r\n    >\r\n      <AccordionSummary\r\n        className={classes.accordionSummary}\r\n        classes={{ content: classes.content }}\r\n        expandIcon={<ExpandMore />}\r\n      >\r\n        <Typography className={classes.accordionTitle}>{title}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.accordionDetails}>\r\n        {children}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    accordion: {\r\n      border: \"1px solid rgba(0, 0, 0, .125)\",\r\n      boxShadow: \"none\",\r\n      \"&:not(:last-child)\": {\r\n        borderBottom: 0,\r\n      },\r\n      \"&:before\": {\r\n        display: \"none\",\r\n      },\r\n      \"&$expanded\": {\r\n        margin: \"auto\",\r\n      },\r\n      expanded: {},\r\n    },\r\n\r\n    accordionSummary: {\r\n      borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\r\n\r\n      marginBottom: -1,\r\n      minHeight: 30,\r\n      \"&$expanded\": {\r\n        minHeight: 30,\r\n        backgroundColor: \"black\",\r\n      },\r\n      expanded: {},\r\n    },\r\n    content: {\r\n      margin: 2,\r\n    },\r\n    accordionTitle: {\r\n      fontSize: \"0.8rem\",\r\n      asdf: {},\r\n    },\r\n    expanded: {},\r\n    accordionDetails: {\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: \"5px\",\r\n      position: \"relative\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default StyledAccordion;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ErrorOutline } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport type FilecardProps = {\r\n  file: File;\r\n  progressInfo: string;\r\n  progress: number;\r\n  errors?: string[];\r\n  onRemoveFile: () => void;\r\n};\r\n\r\nconst FileCard: React.FunctionComponent<FilecardProps> = ({\r\n  file,\r\n  progress,\r\n  progressInfo,\r\n  errors = [],\r\n  onRemoveFile,\r\n  ...others\r\n}) => {\r\n  const classes = cardStyles();\r\n  const [openError, setOpenError] = useState(false);\r\n\r\n  function handleSeeErrorsClick() {\r\n    setOpenError(true);\r\n  }\r\n\r\n  function handleCloseErrorDialog() {\r\n    setOpenError(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <div className={classes.content}>\r\n          <Typography className={classes.filename}>{file.name}</Typography>\r\n          <div className={classes.progress_content}>\r\n            <LinearProgress\r\n              value={progress}\r\n              variant={\r\n                progress === 0 || progress === 100\r\n                  ? \"determinate\"\r\n                  : \"indeterminate\"\r\n              }\r\n            />\r\n            <Typography className={classes.progress_text}>\r\n              {progressInfo}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.action}>\r\n          {errors.length !== 0 && (\r\n            <Button\r\n              className={classes.button}\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              startIcon={<ErrorOutline color=\"error\" />}\r\n              onClick={handleSeeErrorsClick}\r\n            >\r\n              see errors\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className={classes.button}\r\n            onClick={onRemoveFile}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n          >\r\n            Remove\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Dialog open={openError} onClose={handleCloseErrorDialog}>\r\n        <DialogTitle>\r\n          <Typography variant=\"h6\" color=\"error\">\r\n            Errors\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            {file.name}\r\n          </Typography>\r\n          <Divider />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box overflow=\"auto\" padding=\"5px 25px\">\r\n            {errors.map((error, index) => {\r\n              return (\r\n                <div key={index} className={classes.error_container}>\r\n                  <Typography\r\n                    component=\"p\"\r\n                    className={classes.error_text}\r\n                    key={`${index}~error`}\r\n                  >\r\n                    {error}\r\n                  </Typography>\r\n                  <Divider />\r\n                </div>\r\n              );\r\n            })}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst cardStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.mobileStepper,\r\n    maxWidth: \"100%\",\r\n    fontSize: \"0.8rem\",\r\n    boxSizing: \"border-box\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: theme.shape.borderRadius,\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    padding: 10,\r\n    overflowWrap: \"break-word\",\r\n    wordWrap: \"break-word\",\r\n  },\r\n  filename: {\r\n    fontSize: \"1em\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  progress_text: {\r\n    fontSize: \"0.7em\",\r\n    color: theme.palette.text.secondary,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"5px\",\r\n    justifyContent: \"center\",\r\n  },\r\n  progress_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"3px\",\r\n  },\r\n  action: {},\r\n  button: {\r\n    textTransform: \"none\",\r\n  },\r\n  error_container: {\r\n    maxWidth: \"100%\",\r\n    width: \"550px\",\r\n  },\r\n  error_text: {\r\n    fontSize: \"0.9rem\",\r\n    padding: \"10px 5px\",\r\n    whiteSpace: \"pre-wrap\",\r\n  },\r\n}));\r\n\r\nexport default FileCard;\r\n","class InvalidFileError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n\r\nexport default InvalidFileError;\r\n","import { WorkBook } from \"xlsx/types\";\r\nimport XLSX from \"xlsx\";\r\nimport InvalidFileError from \"../errors/InvalidFileError\";\r\n\r\nasync function extractWorkbookFromFile(file: File): Promise<WorkBook> {\r\n  return new Promise<WorkBook>((resolve, reject) => {\r\n    console.log(\"FileUTils: Timeout wait for 10 secs....\");\r\n    let fileExtension: string = file.name.split(\".\")[1];\r\n    console.log({\r\n      method: \"extractWorkbookFromFile()\",\r\n      parameteres: { file },\r\n      fileTypeSplit: file.name.split(\".\"),\r\n      fileExtension,\r\n    });\r\n\r\n    if (fileExtension !== \"xlsx\") {\r\n      reject(\r\n        new InvalidFileError(\r\n          `Invalid file: expected: .xlsx received: ${fileExtension}`\r\n        )\r\n      );\r\n    }\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (event: ProgressEvent<FileReader>) {\r\n      try {\r\n        let data = new Uint8Array(event.target?.result as ArrayBuffer);\r\n        let workbook = XLSX.read(data, { type: \"array\", cellDates: true });\r\n        resolve(workbook);\r\n      } catch (error) {\r\n        reject(new Error(error));\r\n      }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  });\r\n}\r\n\r\nconst FileUtil = Object.freeze({\r\n  extractWorkbookFromFile,\r\n});\r\n\r\nexport default FileUtil;\r\n","import moment from \"moment\";\r\nimport { CellObject } from \"xlsx/types\";\r\n\r\nclass ExcelUtil {\r\n  static extractDate(\r\n    cell: CellObject,\r\n    dateFormat: string\r\n  ): { date: Date | null; error: string | null } {\r\n    let date: Date | null = null;\r\n    let error: string | null = null;\r\n    let x = null;\r\n    if (cell) {\r\n      if (cell.t !== \"d\") {\r\n        if (cell.t === \"s\") {\r\n          x = moment(cell.v || cell.w || cell.r, dateFormat);\r\n          if (!x.isValid()) {\r\n            error = ` ${cell.v} does not match the date format in setstings ${dateFormat}`;\r\n          } else {\r\n            date = x.toDate();\r\n          }\r\n        } else {\r\n          error = `Invalid Cell Value: Expected Date, received: ${cell.v}`;\r\n        }\r\n      } else {\r\n        date = cell.v as Date;\r\n      }\r\n    } else {\r\n      error = \"Cell is empty\";\r\n    }\r\n\r\n    return { date, error };\r\n  }\r\n\r\n  static extractNumber(\r\n    cell: CellObject,\r\n    strict: boolean = false\r\n  ): { number: number | null; error: string | null } {\r\n    let number: number | null = null;\r\n    let error: string | null = null;\r\n    if (cell) {\r\n      if (!(cell.t === \"n\" || Number(cell.v || cell.w))) {\r\n        error = `Invalid Cell Value: Expected number, received: ${cell.v}`;\r\n      } else {\r\n        number = Number(cell.r || cell.v);\r\n      }\r\n    } else {\r\n      if (strict) {\r\n        error = \"Cell is empty\";\r\n      } else {\r\n        number = 0;\r\n      }\r\n    }\r\n\r\n    return { number, error };\r\n  }\r\n\r\n  static extractText(\r\n    cell: CellObject\r\n  ): { text: string | null; error: string | null } {\r\n    let error: string | null = null;\r\n    let text: string | null = null;\r\n    if (cell) {\r\n      if (cell.t !== \"s\") {\r\n        error = `Invalid Cell Value: Expected Text, received: ${cell.v}`;\r\n      } else {\r\n        text = cell.v as string;\r\n      }\r\n    } else {\r\n      error = \"Cell is empty\";\r\n    }\r\n    return { text, error };\r\n  }\r\n\r\n  static calculatePercent(i: number, total: number): Promise<number> {\r\n    return new Promise<number>((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve((i / total) * 100);\r\n      }, 0);\r\n    });\r\n  }\r\n}\r\n\r\nexport default ExcelUtil;\r\n","import XLSX from \"xlsx\";\r\nimport { LoadProfileStorage } from \".\";\r\nimport { LoadProfileSettings } from \"./objects/types\";\r\nimport { LoadProfile_Raw } from \"./objects\";\r\nimport { CellObject, WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport { MeteringPoint } from \"../common/object\";\r\nimport ExcelUtil from \"../common/utils/ExcelUtil\";\r\n\r\ntype LoadProfileRowData = {\r\n  kwdelCell: CellObject;\r\n  kwhdelCell: CellObject;\r\n  dateCell: CellObject;\r\n  timeCell: CellObject;\r\n  row: number;\r\n  sheetName: string;\r\n};\r\n\r\nfunction extractLoadProfileRawFromWorkbook(\r\n  fileName: string,\r\n  workbook: WorkBook,\r\n  handleProgressUpdate: (progressInfo: string, progress: number) => void\r\n) {\r\n  return new Promise<{\r\n    value: LoadProfile_Raw[];\r\n    errors: string[];\r\n    meteringPoints: string[];\r\n  }>(async (resolve, reject) => {\r\n    if (workbook === null) {\r\n      reject(new Error(\"Invalid file\"));\r\n      handleProgressUpdate(\"tsk, wrong file\", 100);\r\n      return;\r\n    }\r\n    console.log(\"Parsing workbook...\");\r\n\r\n    let lp_rawDatas: LoadProfile_Raw[] = [];\r\n    let errors: string[] = [];\r\n    let meteringPoints: string[] = [];\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      if (!MeteringPoint.exists(sheetName)) {\r\n        errors.push(\r\n          `Invalid sheetname: ${sheetName}, expected: MF3MPITZAMC01~7`\r\n        );\r\n        continue;\r\n      }\r\n      meteringPoints.push(sheetName);\r\n\r\n      handleProgressUpdate(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      if (!worksheet[\"!ref\"]) continue;\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await calculatePercent(row, totalRows);\r\n        handleProgressUpdate(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = LoadProfileStorage.loadSettings();\r\n          let cells = extractCells(worksheet, row, sheetName, settings);\r\n          let rawData = extractDataFromRow(cells, settings, fileName);\r\n          lp_rawDatas.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    console.log(\"finished\");\r\n    resolve({ value: lp_rawDatas, errors, meteringPoints });\r\n  });\r\n}\r\n\r\nfunction calculatePercent(i: number, total: number): Promise<number> {\r\n  return new Promise<number>((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve((i / total) * 100);\r\n    }, 0);\r\n  });\r\n}\r\n\r\n//Extracts the load profile raw data from the row,\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  sheetName: string,\r\n  settings: LoadProfileSettings\r\n): LoadProfileRowData {\r\n  //Builds the raw cell location {column, row}\r\n  let kwdelAddress = { c: settings.kwdelCol, r: row };\r\n  let dateAddress = { c: settings.dateCol, r: row };\r\n  let timeAddress = { c: settings.timeCol, r: row };\r\n  let kwhdelAddress = { c: settings.kwhdelCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let kwdelRef = XLSX.utils.encode_cell(kwdelAddress);\r\n  let dateRef = XLSX.utils.encode_cell(dateAddress);\r\n  let timeRef = XLSX.utils.encode_cell(timeAddress);\r\n  let kwhdelRef = XLSX.utils.encode_cell(kwhdelAddress);\r\n\r\n  return {\r\n    kwdelCell: worksheet[kwdelRef],\r\n    timeCell: worksheet[timeRef],\r\n    dateCell: worksheet[dateRef],\r\n    kwhdelCell: worksheet[kwhdelRef],\r\n    sheetName: sheetName,\r\n    row,\r\n  };\r\n}\r\n\r\nfunction extractDataFromRow(\r\n  rowData: LoadProfileRowData,\r\n  settings: LoadProfileSettings,\r\n  fileName: string\r\n): LoadProfile_Raw {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: LoadProfile_Raw | null = null;\r\n\r\n  let kwdelCellData = ExcelUtil.extractNumber(rowData.kwdelCell);\r\n  let kwhdelCellData = ExcelUtil.extractNumber(rowData.kwhdelCell);\r\n  let dateCellData = ExcelUtil.extractDate(\r\n    rowData.dateCell,\r\n    settings.dateFormat\r\n  );\r\n  let timeCellData = ExcelUtil.extractDate(\r\n    rowData.timeCell,\r\n    settings.timeFormat\r\n  );\r\n\r\n  anyErrors = Boolean(\r\n    kwdelCellData.error ||\r\n      dateCellData.error ||\r\n      timeCellData.error ||\r\n      kwhdelCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowData.row + 1}:\\n`;\r\n    if (kwdelCellData.error)\r\n      error = error.concat(`\\tKwdel Cell: ${kwdelCellData.error}\\n`);\r\n    if (dateCellData.error)\r\n      error = error.concat(`\\tDate Cell: ${dateCellData.error}\\n`);\r\n    if (timeCellData.error)\r\n      error = error.concat(`\\tTime Cell: ${timeCellData.error}\\n`);\r\n    if (kwhdelCellData.error)\r\n      error = error.concat(`\\tKwhdel Cell: ${timeCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let kwhdel = kwhdelCellData.number as number;\r\n    let kwdel = kwdelCellData.number as number;\r\n    let day = dateCellData.date?.getDate() as number;\r\n    let month = dateCellData.date?.getMonth() as number;\r\n    let hour = timeCellData.date?.getHours() as number;\r\n    let minute = timeCellData.date?.getMinutes() as number;\r\n    let year = dateCellData.date?.getFullYear() as number;\r\n    rawData = new LoadProfile_Raw(\r\n      kwdel,\r\n      kwhdel,\r\n      day,\r\n      month + 1,\r\n      year,\r\n      hour,\r\n      minute,\r\n      rowData.sheetName,\r\n      rowData.row,\r\n      fileName\r\n    );\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nexport default extractLoadProfileRawFromWorkbook;\r\n","import BillingPeriod from \"../common/object/BillingPeriod\";\r\nimport { Feeder } from \"../common/object\";\r\nimport {\r\n  MonthlyInterruptionRawData,\r\n  MonthlyInterruptionSettings,\r\n} from \"./types\";\r\n\r\nfunction createRawDataObject(\r\n  duration: number,\r\n  feeder: Feeder,\r\n  date: Date,\r\n  fileName: string\r\n): MonthlyInterruptionRawData {\r\n  let billingMonth = BillingPeriod.getBillingMonth(\r\n    date.getMonth() + 1,\r\n    date.getDay()\r\n  );\r\n\r\n  let billingPeriod = new BillingPeriod(billingMonth, date.getFullYear());\r\n  return {\r\n    duration,\r\n    feeder: feeder,\r\n    date,\r\n    billingPeriod,\r\n    fileName,\r\n  };\r\n}\r\n\r\nenum MonthlyInterruptionSettingsKey {\r\n  DATE = \"mis_date\",\r\n  DURATION = \"mis_duration\",\r\n  DATE_FORMAT = \"mis_dateformat\",\r\n  FEEDER = \"mis_feeder\",\r\n}\r\n\r\nfunction loadSettings(): MonthlyInterruptionSettings {\r\n  return {\r\n    dateCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.DATE)) || 0,\r\n    durationCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.DURATION)) ||\r\n      1,\r\n    dateFormat:\r\n      localStorage.getItem(MonthlyInterruptionSettingsKey.DATE_FORMAT) ||\r\n      \"MM/DD/YYYY\",\r\n\r\n    feederCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.FEEDER)) || 2,\r\n  };\r\n}\r\n\r\nfunction saveSettings(settings: MonthlyInterruptionSettings) {\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DATE,\r\n    settings.dateCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DURATION,\r\n    settings.durationCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DATE_FORMAT,\r\n    settings.dateFormat\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.FEEDER,\r\n    settings.feederCol.toString()\r\n  );\r\n}\r\n\r\nconst MonthlyInterruptionUtil = Object.freeze({\r\n  createRawDataObject,\r\n  saveSettings,\r\n  loadSettings,\r\n});\r\n\r\nexport default MonthlyInterruptionUtil;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FileUtil } from \"../common/utils\";\r\nimport { LoadProfile_Raw } from \"./objects\";\r\nimport extractLoadProfileRawFromWorkbook from \"./ExcelParser\";\r\nimport { FilecardProps } from \"../filesdrawer/FileCard\";\r\n\r\ntype LoadProfileParserProps = {\r\n  file: File;\r\n  render: React.FunctionComponent<FilecardProps>;\r\n  onFileParsed: (data: LoadProfile_Raw[]) => void;\r\n  onRemoveFile: (file: File, meteringPointss: string[]) => void;\r\n};\r\n\r\nexport type LoadProfileParserRenderProps = {\r\n  progress: number;\r\n  progressInfo: string;\r\n  fileFromParser: File;\r\n  errors: string[];\r\n  onRemoveFile: () => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<LoadProfileParserProps> = ({\r\n  file,\r\n  render,\r\n  onFileParsed,\r\n  onRemoveFile,\r\n  ...others\r\n}) => {\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [meteringPoints, setMeteringPoints] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        return extractLoadProfileRawFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n        setMeteringPoints((meteringPoint) => [\r\n          ...meteringPoint,\r\n          ...result.meteringPoints,\r\n        ]);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }, []);\r\n\r\n  function handleFileParsed(lp_rawDatas: LoadProfile_Raw[]) {\r\n    onFileParsed(lp_rawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file, meteringPoints);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoadProfileParser;\r\n","import { Box, Typography, makeStyles, Theme } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\ntype FileDropProps = {\r\n  onFileDrop: (files: File[]) => void;\r\n  onDragEnter: () => void;\r\n  onDragLeave: () => void;\r\n  onDragOver?: () => void;\r\n  helperText: string;\r\n};\r\n\r\nconst FileDrop: React.FunctionComponent<FileDropProps> = ({\r\n  helperText = \"\",\r\n  onFileDrop,\r\n  onDragEnter,\r\n  onDragLeave,\r\n  onDragOver = () => {},\r\n  children,\r\n  ...others\r\n}) => {\r\n  const [dragging, setDragging] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  function handleDragEnter() {\r\n    setDragging(true);\r\n    onDragEnter();\r\n  }\r\n\r\n  function handleDragLeave() {\r\n    setDragging(false);\r\n    onDragLeave();\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      <Dropzone\r\n        onDrop={onFileDrop}\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section\r\n            onMouseEnter={handleDragEnter}\r\n            onMouseLeave={handleDragLeave}\r\n            className={clsx(classes.dropZone, {\r\n              [classes.dropZone_focused]: dragging,\r\n            })}\r\n          >\r\n            <div\r\n              {...getRootProps({ className: `${classes.dropZone_content}` })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                color=\"textSecondary\"\r\n                className={classes.dropZoneText}\r\n              >\r\n                {helperText}\r\n              </Typography>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        maxWidth=\"100%\"\r\n        gridGap={5}\r\n        marginTop={1}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dropZone: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n    minHeight: 50,\r\n  },\r\n  dropZone_focused: {\r\n    border: `2px dashed ${theme.palette.text.secondary}`,\r\n  },\r\n  dropZone_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: \"100%\",\r\n    gap: \"10px\",\r\n    flexWrap: \"wrap\",\r\n    margin: 5,\r\n  },\r\n  dropZoneText: {\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n  },\r\n}));\r\n\r\nexport default FileDrop;\r\n","import React, { useContext, useState } from \"react\";\r\nimport CustomAccordion from \"../StyledAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport { LoadProfileParser } from \"../../loadprofile\";\r\nimport { LoadProfile_Raw } from \"../../loadprofile/objects\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport FileDrop from \"../FileDrop\";\r\n\r\ntype LoadProfileAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"laodprofile_filespanel\";\r\nconst title = \"Load Profile Files\";\r\n\r\nconst LoadProfileAccordion: React.FunctionComponent<LoadProfileAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  ...others\r\n}) => {\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(lpRawDatas: LoadProfile_Raw[]) {\r\n    loadProfileContext.updateLoadProfiles(lpRawDatas);\r\n  }\r\n\r\n  function handleRemoveFile(file: File, meteringPoints: string[]) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n\r\n    loadProfileContext.deleteLoadProfiles({\r\n      fileName: file.name,\r\n      meteringPoints,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <LoadProfileParser\r\n              onFileParsed={handleFileParsed}\r\n              key={file.name}\r\n              file={file}\r\n              onRemoveFile={handleRemoveFile}\r\n              render={(props) => (\r\n                <FileCard\r\n                  progress={props.progress}\r\n                  progressInfo={props.progressInfo}\r\n                  file={props.file}\r\n                  errors={props.errors}\r\n                  onRemoveFile={props.onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default LoadProfileAccordion;\r\nexport { panelName };\r\n","import { WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport ExcelUtil from \"../common/utils/ExcelUtil\";\r\nimport {\r\n  MonthlyInterruptionRawData,\r\n  MonthlyInterruptionCells,\r\n  MonthlyInterruptionSettings,\r\n} from \"./types\";\r\n\r\nimport { GeneralUtil } from \"../common/object\";\r\nimport XLSX from \"xlsx\";\r\nimport MonthlyInterruptionUtil from \"./MonthlyInterruptionUtil\";\r\nimport { Feeder } from \"../common/object\";\r\n\r\nfunction extractRawDatasFromWorkbook(\r\n  filename: string,\r\n  workbook: WorkBook,\r\n  progressCallback: (info: string, progress: number) => void\r\n): Promise<{ value: MonthlyInterruptionRawData[]; errors: string[] }> {\r\n  return new Promise(async (resolve, reject) => {\r\n    let errors: string[] = [];\r\n    let value: MonthlyInterruptionRawData[] = [];\r\n\r\n    console.log(\"MonthllyInterruption Workbook: \");\r\n    console.log(workbook);\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      let worksheet = workbook.Sheets[sheetName];\r\n\r\n      progressCallback(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      if (!worksheet[\"!ref\"]) continue;\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await ExcelUtil.calculatePercent(row, totalRows);\r\n        progressCallback(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = MonthlyInterruptionUtil.loadSettings();\r\n          let cells = extractCells(worksheet, row, settings);\r\n          let rawData = extractDataFromCells(cells, settings, filename);\r\n          value.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    resolve({ value, errors });\r\n  });\r\n}\r\n\r\nfunction extractDataFromCells(\r\n  rowCells: MonthlyInterruptionCells,\r\n  settings: MonthlyInterruptionSettings,\r\n  fileName: string\r\n): MonthlyInterruptionRawData {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: MonthlyInterruptionRawData | null = null;\r\n\r\n  let dateCellData = ExcelUtil.extractDate(rowCells.date, settings.dateFormat);\r\n  let feederCellData = ExcelUtil.extractText(rowCells.feeder);\r\n  let durationCellData = ExcelUtil.extractNumber(rowCells.duration);\r\n\r\n  let feeder = null;\r\n  if (feederCellData.text) {\r\n    feeder = GeneralUtil.findFeeder(feederCellData.text);\r\n    if (!feeder) {\r\n      feederCellData.error = `Feeder value ${feederCellData.text} does not match any of the registered feeders`;\r\n    }\r\n  }\r\n\r\n  anyErrors = Boolean(\r\n    dateCellData.error || durationCellData.error || feederCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowCells.row + 1}:\\n`;\r\n    if (durationCellData.error)\r\n      error = error.concat(`\\tDuration Cell: ${durationCellData.error}\\n`);\r\n    if (dateCellData.error)\r\n      error = error.concat(`\\tDate Cell: ${dateCellData.error}\\n`);\r\n    if (feederCellData.error)\r\n      error = error.concat(`\\tFeeder Cell: ${feederCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let duration = durationCellData.number as number;\r\n    let date = dateCellData.date as Date;\r\n    rawData = MonthlyInterruptionUtil.createRawDataObject(\r\n      duration,\r\n      feeder as Feeder,\r\n      date,\r\n      fileName\r\n    );\r\n    console.log({ rawData });\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  settings: MonthlyInterruptionSettings\r\n): MonthlyInterruptionCells {\r\n  //Builds the raw cell location {column, row}\r\n  let dateAddress = { c: settings.dateCol, r: row };\r\n  let feederAddress = { c: settings.feederCol, r: row };\r\n  let durationAddress = { c: settings.durationCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let dateRef = XLSX.utils.encode_cell(dateAddress);\r\n  let feederRef = XLSX.utils.encode_cell(feederAddress);\r\n  let durationRef = XLSX.utils.encode_cell(durationAddress);\r\n\r\n  return {\r\n    feeder: worksheet[feederRef],\r\n    date: worksheet[dateRef],\r\n    duration: worksheet[durationRef],\r\n    row,\r\n  };\r\n}\r\n\r\nconst MonthlyInterruptionExcelUtil = Object.freeze({\r\n  extractRawDatasFromWorkbook,\r\n});\r\n\r\nexport default MonthlyInterruptionExcelUtil;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FileUtil } from \"../common/utils\";\r\nimport MonthlyInterruptionExcelUtil from \"./MonthlyInterruptionExcelUtil\";\r\nimport { MonthlyInterruptionRawData } from \"../monthly_interruption/types\";\r\nimport { FilecardProps } from \"../filesdrawer/FileCard\";\r\n\r\ntype MonthlyInterruptionParserProps = {\r\n  file: File;\r\n  render: React.FunctionComponent<FilecardProps>;\r\n  onFileParsed: (rawDatas: MonthlyInterruptionRawData[]) => void;\r\n  onRemoveFile: (file: File) => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<MonthlyInterruptionParserProps> = (\r\n  props\r\n) => {\r\n  const { file, render, onFileParsed, onRemoveFile, ...others } = props;\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        return MonthlyInterruptionExcelUtil.extractRawDatasFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }, []);\r\n\r\n  function handleFileParsed(\r\n    monthlyInterruptionRawDatas: MonthlyInterruptionRawData[]\r\n  ) {\r\n    onFileParsed(monthlyInterruptionRawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoadProfileParser;\r\n","import XLSX from \"xlsx\";\r\nimport { PowerSubstationRawData } from \"../power_substation/types\";\r\nimport { MonthlyInterruptionRawData } from \"../monthly_interruption/types\";\r\nimport { MonthlyFeederAndDemand, FeederAndDemand } from \"./objects\";\r\nimport { BillingPeriod } from \"../common/object\";\r\n\r\nconst FeederAndDemandUtil = Object.freeze({\r\n  removePowerSubstationFile,\r\n  removeMonthlyInterruptionFile,\r\n  addPowerSubstationRawData,\r\n  addMonthlyInterruptionRawData,\r\n  addPowerSubstationRawDataAsync,\r\n  addMonthlyInterruptionRawDataAsync,\r\n  removePowerSubstationFileAsync,\r\n  removeMonthlyInterruptionFileAsync,\r\n  generateExcelFile,\r\n  calculateOperatingHours,\r\n});\r\n\r\nasync function addPowerSubstationRawDataAsync(\r\n  rawDatas: PowerSubstationRawData[],\r\n  monthlyFeederAndDemand: MonthlyFeederAndDemand\r\n) {\r\n  return addPowerSubstationRawData(rawDatas, monthlyFeederAndDemand);\r\n}\r\n\r\nasync function addMonthlyInterruptionRawDataAsync(\r\n  rawDatas: MonthlyInterruptionRawData[],\r\n  monthlyFeederAndDemand: MonthlyFeederAndDemand\r\n) {\r\n  return addMonthlyInterruptionRawData(rawDatas, monthlyFeederAndDemand);\r\n}\r\n\r\nasync function removePowerSubstationFileAsync(\r\n  fileName: string,\r\n  monthlyFeederAndDemand: MonthlyFeederAndDemand\r\n) {\r\n  return removePowerSubstationFile(fileName, monthlyFeederAndDemand);\r\n}\r\n\r\nasync function removeMonthlyInterruptionFileAsync(\r\n  fileName: string,\r\n  monthlyFeederAndDemand: MonthlyFeederAndDemand\r\n) {\r\n  return removeMonthlyInterruptionFile(fileName, monthlyFeederAndDemand);\r\n}\r\n\r\nfunction addPowerSubstationRawData(\r\n  rawDatas: PowerSubstationRawData[],\r\n  monthlyFeederAndDemand: MonthlyFeederAndDemand\r\n) {\r\n  rawDatas.forEach((rawData) => {\r\n    monthlyFeederAndDemand\r\n      .addFeederAndDemandIfNotExists(rawData.billingPeriod)\r\n      .addItemIfNotExistElseGet(rawData.feeder)\r\n      .setPowerSubstationData(rawData);\r\n  });\r\n  return monthlyFeederAndDemand;\r\n}\r\n\r\nfunction addMonthlyInterruptionRawData(\r\n  rawDatas: MonthlyInterruptionRawData[],\r\n  monthlyFeederAndDemand: MonthlyFeederAndDemand\r\n) {\r\n  console.log({ message: \"Processing raw datas\" });\r\n  rawDatas.forEach((rawData) => {\r\n    let item = monthlyFeederAndDemand\r\n      .addFeederAndDemandIfNotExists(rawData.billingPeriod)\r\n      .addItemIfNotExistElseGet(rawData.feeder);\r\n    console.log({\r\n      message: \"Adding rawData to item feeder: \",\r\n      itemFeeder: item.feeder,\r\n    });\r\n    item.addRawMonthlyInterruptionData(rawData);\r\n  });\r\n  return monthlyFeederAndDemand;\r\n}\r\n\r\nfunction removePowerSubstationFile(\r\n  fileName: string,\r\n  monthlyFeederAndDemand: MonthlyFeederAndDemand\r\n) {\r\n  [...monthlyFeederAndDemand.feederAndDemands.values()].forEach(\r\n    (feederAndDemand) => {\r\n      [...feederAndDemand.items.values()].forEach((feederAndDemandItem) => {\r\n        feederAndDemandItem.removePowerSubstationData(fileName);\r\n      });\r\n    }\r\n  );\r\n\r\n  return monthlyFeederAndDemand;\r\n}\r\n\r\nfunction removeMonthlyInterruptionFile(\r\n  fileName: string,\r\n  monthlyFeederAndDemand: MonthlyFeederAndDemand\r\n) {\r\n  [...monthlyFeederAndDemand.feederAndDemands.values()].forEach(\r\n    (feederAndDemand) => {\r\n      [...feederAndDemand.items.values()].forEach((feederAndDemandItem) => {\r\n        feederAndDemandItem.removeMonthlyInterruptionData(fileName);\r\n      });\r\n    }\r\n  );\r\n\r\n  return monthlyFeederAndDemand;\r\n}\r\n\r\nfunction generateExcelFile(feederAndDemand: FeederAndDemand) {\r\n  let workbook = XLSX.utils.book_new();\r\n  let worksheetName = `${feederAndDemand.billingPeriod.toString()}`;\r\n  let worksheetData = generateSheetData(feederAndDemand);\r\n  let worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, worksheetName);\r\n  XLSX.writeFile(\r\n    workbook,\r\n    `Monthly Feeder And Demand Report of ${feederAndDemand.billingPeriod.toString()}.xlsx`\r\n  );\r\n}\r\n\r\nfunction calculateOperatingHours(hours: number, billingPeriod: BillingPeriod) {\r\n  return (billingPeriod.getTotalDays() + 1) * 24 - hours;\r\n}\r\n\r\nfunction generateSheetData(feederAndDemand: FeederAndDemand) {\r\n  let data = [];\r\n\r\n  //---------CREATING HEADERS-------------\r\n  let first = [\"\", \"\", \"\", \"Power Outages\"];\r\n  let second = [\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    `${feederAndDemand.billingPeriod.startDate.toLocaleDateString()} ~ ${feederAndDemand.billingPeriod.enddDate.toLocaleDateString()}`,\r\n  ];\r\n  let third = [\r\n    \"Feeders\",\r\n    \"Feeder Input\",\r\n    \"Deamnd\",\r\n    \"Minutes\",\r\n    \"Hours\",\r\n    \"Operating Hours\",\r\n    \"Power Factor\",\r\n    \"Load Factor\",\r\n  ];\r\n\r\n  data.push(first, second, third);\r\n\r\n  //----------CONTENT----------------\r\n  for (let item of feederAndDemand.items.values()) {\r\n    data.push([\r\n      item.feeder,\r\n      item.feederInput.toFixed(2),\r\n      item.demand.toFixed(2),\r\n      item.totalMinutes.toString(),\r\n      item.totalHours.toFixed(2),\r\n      item.operatingHours.toFixed(2),\r\n      item.powerFactor.toFixed(2),\r\n      item.loadFactor.toFixed(2),\r\n    ]);\r\n  }\r\n  console.log(data);\r\n  return data;\r\n}\r\n\r\nexport default FeederAndDemandUtil;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { MonthlyInterruptionRawData } from \"../monthly_interruption/types\";\r\nimport { PowerSubstationRawData } from \"../power_substation/types\";\r\nimport FeederAndDemandUtil from \"./FeederAndDemandUtil\";\r\nimport { MonthlyFeederAndDemand } from \"./objects\";\r\n\r\ntype FeederAndDemandContextProviderProps = {};\r\n\r\nconst tempMfd = new MonthlyFeederAndDemand();\r\n\r\nenum Data {\r\n  MonthlyInterruptionData,\r\n  PowerSubstationData,\r\n}\r\n\r\nconst FeederAndDemandContext = createContext({\r\n  monthlyFeederAndDemand: new MonthlyFeederAndDemand(),\r\n  onMonthlyInterruptionOrPowerSubstationFileParsed: (\r\n    rawDatas: MonthlyInterruptionRawData[] | PowerSubstationRawData[]\r\n  ) => {},\r\n  onPowerSubstationDataFileRemoved: (fileName: string) => {},\r\n  onMonthlyInterruptionFileRemoved: (fileName: string) => {},\r\n});\r\n\r\nconst FeederAndDemandContextProvider: React.FunctionComponent<FeederAndDemandContextProviderProps> = (\r\n  props\r\n) => {\r\n  const [buffer, setBuffer] = useState<\r\n    (\r\n      | PowerSubstationRawData[]\r\n      | MonthlyInterruptionRawData[]\r\n      | { data: Data; fileName: string }\r\n    )[]\r\n  >([]);\r\n  const [monthlyFeederAndDemand, setMonthlyFeederAndDemand] = useState<\r\n    MonthlyFeederAndDemand\r\n  >(tempMfd);\r\n\r\n  useEffect(() => {\r\n    setMonthlyFeederAndDemand(new MonthlyFeederAndDemand());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(monthlyFeederAndDemand);\r\n  }, [monthlyFeederAndDemand]);\r\n\r\n  useEffect(() => {\r\n    if (buffer.length > 0) {\r\n      processBufferDatas();\r\n    } else {\r\n      let newMonthlyFeederAndDemand = new MonthlyFeederAndDemand(\r\n        monthlyFeederAndDemand\r\n      );\r\n      newMonthlyFeederAndDemand.initValues();\r\n      setMonthlyFeederAndDemand(newMonthlyFeederAndDemand);\r\n    }\r\n  }, [buffer]);\r\n\r\n  async function processBufferDatas() {\r\n    let newBuffer = [...buffer];\r\n    let data = newBuffer.pop();\r\n    if (data) {\r\n      let result: MonthlyFeederAndDemand = new MonthlyFeederAndDemand(\r\n        monthlyFeederAndDemand\r\n      );\r\n      if ((data as { data: Data; fileName: string }).data) {\r\n        data = data as { data: Data; fileName: string };\r\n        if (data.data == Data.MonthlyInterruptionData) {\r\n          result = await FeederAndDemandUtil.removeMonthlyInterruptionFileAsync(\r\n            data.fileName,\r\n            result\r\n          );\r\n        } else {\r\n          result = await FeederAndDemandUtil.removePowerSubstationFileAsync(\r\n            data.fileName,\r\n            result\r\n          );\r\n        }\r\n      } else if (Array.isArray(data)) {\r\n        if (data.length > 0) {\r\n          if ((data as PowerSubstationRawData[])[0].kvarhrEnergy) {\r\n            result = await FeederAndDemandUtil.addPowerSubstationRawDataAsync(\r\n              data as PowerSubstationRawData[],\r\n              result\r\n            );\r\n          } else {\r\n            result = await FeederAndDemandUtil.addMonthlyInterruptionRawDataAsync(\r\n              data as MonthlyInterruptionRawData[],\r\n              result\r\n            );\r\n          }\r\n        }\r\n      }\r\n      setMonthlyFeederAndDemand(result);\r\n      setBuffer([...newBuffer]);\r\n    }\r\n  }\r\n\r\n  function onMonthlyInterruptionOrPowerSubstationFileParsed(\r\n    rawDatas: MonthlyInterruptionRawData[] | PowerSubstationRawData[]\r\n  ) {\r\n    setBuffer((prevBuffer) => [...prevBuffer, rawDatas]);\r\n  }\r\n\r\n  function onPowerSubstationDataFileRemoved(fileName: string) {\r\n    setBuffer((prevBuffer) => [\r\n      ...prevBuffer,\r\n      { data: Data.PowerSubstationData, fileName },\r\n    ]);\r\n  }\r\n  function onMonthlyInterruptionFileRemoved(fileName: string) {\r\n    setBuffer((prevBuffer) => [\r\n      ...prevBuffer,\r\n      { data: Data.MonthlyInterruptionData, fileName },\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <FeederAndDemandContext.Provider\r\n      value={{\r\n        monthlyFeederAndDemand,\r\n        onMonthlyInterruptionOrPowerSubstationFileParsed,\r\n        onMonthlyInterruptionFileRemoved,\r\n        onPowerSubstationDataFileRemoved,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FeederAndDemandContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FeederAndDemandContextProvider;\r\n\r\nexport { FeederAndDemandContext };\r\n","import { Feeder } from \"../../common/object\";\r\nimport { MonthlyInterruptionRawData } from \"../../monthly_interruption/types\";\r\nimport { PowerSubstationRawData } from \"../../power_substation/types\";\r\n\r\nclass FeederAndDemandItem {\r\n  feeder: Feeder;\r\n  feederInput: number;\r\n  demand: number;\r\n  minutes: { fileName: string; value: number }[];\r\n  hours: number;\r\n  operatingHours: number;\r\n  powerFactor: number;\r\n  loadFactor: number;\r\n  kvarhrEnergy: number;\r\n  totalOperatingHours: number;\r\n  powerSubstaionFileName: string;\r\n  totalMinutes: number;\r\n  totalHours: number;\r\n\r\n  constructor(feeder: Feeder, totalOperatingHours: number) {\r\n    this.feeder = feeder;\r\n    this.feederInput = 0;\r\n    this.demand = 0;\r\n    this.minutes = [];\r\n    this.hours = 0;\r\n    this.operatingHours = 0;\r\n    this.powerFactor = 0;\r\n    this.loadFactor = 0;\r\n    this.kvarhrEnergy = 0;\r\n    this.totalOperatingHours = totalOperatingHours;\r\n    this.powerSubstaionFileName = \"\";\r\n    this.totalMinutes = 0;\r\n    this.totalHours = 0;\r\n  }\r\n\r\n  private getTotalMinutes() {\r\n    let total = 0;\r\n    for (let min of this.minutes) {\r\n      total += min.value;\r\n    }\r\n    return total;\r\n  }\r\n\r\n  removeMonthlyInterruptionData(fileName: string) {\r\n    this.minutes = this.minutes.filter(\r\n      (minute) => minute.fileName !== fileName\r\n    );\r\n  }\r\n\r\n  removePowerSubstationData(fileName: string) {\r\n    if (this.powerSubstaionFileName === fileName) {\r\n      this.powerSubstaionFileName = \"\";\r\n      this.demand = 0;\r\n      this.feederInput = 0;\r\n      this.kvarhrEnergy = 0;\r\n    }\r\n  }\r\n\r\n  addRawMonthlyInterruptionData(rawData: MonthlyInterruptionRawData) {\r\n    this.minutes.push({ fileName: rawData.fileName, value: rawData.duration });\r\n  }\r\n\r\n  setPowerSubstationData(data: PowerSubstationRawData) {\r\n    this.demand = data.demandKwhr;\r\n    this.feederInput = data.kwhrEnergy;\r\n    this.kvarhrEnergy = data.kvarhrEnergy;\r\n    this.powerSubstaionFileName = data.fileName;\r\n  }\r\n\r\n  recalculateData() {\r\n    this.totalMinutes = this.getTotalMinutes();\r\n    this.totalHours = this.totalMinutes / 60;\r\n    this.operatingHours = this.totalOperatingHours - this.totalHours;\r\n    this.powerFactor = this.getPowerFactor();\r\n    this.loadFactor = this.getLoadFactor();\r\n  }\r\n\r\n  private getPowerFactor() {\r\n    let pf = Math.cos(Math.atan(this.kvarhrEnergy / this.feederInput)) * 100;\r\n    return pf ? pf : 0;\r\n  }\r\n\r\n  private getLoadFactor() {\r\n    let lf = this.feederInput / this.operatingHours / this.demand;\r\n    return lf ? lf : 0;\r\n  }\r\n}\r\n\r\nexport default FeederAndDemandItem;\r\n","import BillingPeriod from \"../../common/object/BillingPeriod\";\r\nimport Feeder from \"../../common/object/Feeder\";\r\nimport FeederAndDemandItem from \"./FeederAndDemandItem\";\r\n\r\nclass FeederAndDemand {\r\n  billingPeriod: BillingPeriod;\r\n\r\n  items: Map<Feeder, FeederAndDemandItem>;\r\n  totalOperatingHours: number;\r\n\r\n  constructor(billingPeriod: BillingPeriod) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.items = new Map();\r\n    this.totalOperatingHours = (billingPeriod.getTotalDays() + 1) * 24;\r\n    console.log(\"FeederAndDemand Created\");\r\n  }\r\n\r\n  addItemIfNotExistElseGet(feeder: Feeder) {\r\n    if (!this.items.has(feeder)) {\r\n      this.items.set(\r\n        feeder,\r\n        new FeederAndDemandItem(feeder, this.totalOperatingHours)\r\n      );\r\n    }\r\n\r\n    return this.items.get(feeder) as FeederAndDemandItem;\r\n  }\r\n}\r\n\r\nexport default FeederAndDemand;\r\n","import BillingPeriod from \"../../common/object/BillingPeriod\";\r\nimport FeederAndDemand from \"./FeederAndDemand\";\r\n\r\nclass MonthlyFeederAndDemand {\r\n  feederAndDemands: Map<string, FeederAndDemand>;\r\n\r\n  constructor(monthlyFeederAndDemand?: MonthlyFeederAndDemand) {\r\n    if (monthlyFeederAndDemand) {\r\n      this.feederAndDemands = new Map(monthlyFeederAndDemand.feederAndDemands);\r\n    } else {\r\n      this.feederAndDemands = new Map();\r\n    }\r\n    console.log(\"Monthly feeder and demand created\");\r\n  }\r\n\r\n  addFeederAndDemandIfNotExists(billingPeriod: BillingPeriod) {\r\n    let key = billingPeriod.toString();\r\n    if (!this.feederAndDemands.has(key)) {\r\n      this.feederAndDemands.set(key, new FeederAndDemand(billingPeriod));\r\n    }\r\n    return this.feederAndDemands.get(key) as FeederAndDemand;\r\n  }\r\n\r\n  initValues() {\r\n    for (let feederAndDemand of this.feederAndDemands.values()) {\r\n      for (let item of feederAndDemand.items.values()) {\r\n        item.recalculateData();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MonthlyFeederAndDemand;\r\n","import { Feeder, BillingPeriod } from \"../common/object\";\r\nimport { PowerSubstationRawData, PowerSubstationSettings } from \"./types\";\r\n\r\nenum PowerSubstationSettingsKey {\r\n  FEEDER = \"ps_feeder\",\r\n  DEMAND = \"ps_demand\",\r\n  KWHRENERGY = \"ps_kwhrenergy\",\r\n  KVARHRENERGY = \"ps_kvarhrenergy\",\r\n}\r\n\r\nfunction saveSettings(settings: PowerSubstationSettings) {\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.DEMAND,\r\n    settings.demandKwhrCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.FEEDER,\r\n    settings.feederCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.KWHRENERGY,\r\n    settings.kwhrEnergyCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.KVARHRENERGY,\r\n    settings.kvarhrEnergyCol.toString()\r\n  );\r\n}\r\n\r\nfunction loadSettings(): PowerSubstationSettings {\r\n  return {\r\n    kvarhrEnergyCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.KVARHRENERGY)) ||\r\n      0,\r\n    kwhrEnergyCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.KWHRENERGY)) || 1,\r\n    demandKwhrCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.DEMAND)) || 2,\r\n    feederCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.FEEDER)) || 3,\r\n  };\r\n}\r\n\r\nfunction createRawData(\r\n  feeder: Feeder,\r\n  kwhrEnergy: number,\r\n  kvarhrEnergy: number,\r\n  demandKwhr: number,\r\n  billingPeriod: BillingPeriod,\r\n  fileName: string\r\n): PowerSubstationRawData {\r\n  return {\r\n    kwhrEnergy,\r\n    kvarhrEnergy,\r\n    demandKwhr,\r\n    billingPeriod,\r\n    feeder,\r\n    fileName,\r\n  };\r\n}\r\n\r\nconst PowerSubstationUtil = Object.freeze({\r\n  saveSettings,\r\n  loadSettings,\r\n  createRawData,\r\n});\r\n\r\nexport default PowerSubstationUtil;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { MonthlyInterruptionRawData } from \"../../monthly_interruption/types\";\r\nimport MonthlyInterruptionParser from \"../../monthly_interruption/MonthlyInterruptionParser\";\r\nimport CustomAccordion from \"../StyledAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport FileDrop from \"../FileDrop\";\r\nimport { FeederAndDemandContext } from \"../../feeder_and_demand/FeederAndDemandContextProvider\";\r\n\r\ntype MonthlyInterruptionAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"mi_panel\";\r\nconst title = \"Monthly Interruption Files\";\r\n\r\nconst MonthlyInterruptionAccordion: React.FunctionComponent<MonthlyInterruptionAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  ...others\r\n}) => {\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n\r\n  const feederAndDemandContext = useContext(FeederAndDemandContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(rawDatas: MonthlyInterruptionRawData[]) {\r\n    feederAndDemandContext.onMonthlyInterruptionOrPowerSubstationFileParsed(\r\n      rawDatas\r\n    );\r\n  }\r\n\r\n  function handleRemoveFile(file: File) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n    feederAndDemandContext.onMonthlyInterruptionFileRemoved(file.name);\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <MonthlyInterruptionParser\r\n              onFileParsed={handleFileParsed}\r\n              onRemoveFile={handleRemoveFile}\r\n              key={file.name}\r\n              file={file}\r\n              render={(props) => (\r\n                <FileCard\r\n                  progress={props.progress}\r\n                  progressInfo={props.progressInfo}\r\n                  file={props.file}\r\n                  errors={props.errors}\r\n                  onRemoveFile={props.onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionAccordion;\r\nexport { panelName };\r\n","import { WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport ExcelUtil from \"../common/utils/ExcelUtil\";\r\nimport PowerSubstationUtil from \"./PowerSubstationUtil\";\r\nimport {\r\n  PowerSubstationCells,\r\n  PowerSubstationRawData,\r\n  PowerSubstationSettings,\r\n} from \"./types\";\r\n\r\nimport { GeneralUtil } from \"../common/object\";\r\nimport XLSX from \"xlsx\";\r\nimport { BillingPeriod, Feeder } from \"../common/object\";\r\n\r\nfunction extractRawDatasFromWorkbook(\r\n  filename: string,\r\n  workbook: WorkBook,\r\n  billingPeriod: BillingPeriod,\r\n  progressCallback: (info: string, progress: number) => void\r\n): Promise<{ value: PowerSubstationRawData[]; errors: string[] }> {\r\n  return new Promise(async (resolve, reject) => {\r\n    let errors: string[] = [];\r\n    let value: PowerSubstationRawData[] = [];\r\n\r\n    console.log(\"MonthllyInterruption Workbook: \");\r\n    console.log(workbook);\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      let worksheet = workbook.Sheets[sheetName];\r\n      progressCallback(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      if (!worksheet[\"!ref\"]) continue;\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await ExcelUtil.calculatePercent(row, totalRows);\r\n        progressCallback(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = PowerSubstationUtil.loadSettings();\r\n          let cells = extractCells(worksheet, row, settings);\r\n          let rawData = extractDataFromCells(cells, billingPeriod, filename);\r\n          value.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    resolve({ value, errors });\r\n  });\r\n}\r\n\r\nfunction extractDataFromCells(\r\n  rowCells: PowerSubstationCells,\r\n  bililngPeriod: BillingPeriod,\r\n  fileName: string\r\n): PowerSubstationRawData {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: PowerSubstationRawData | null = null;\r\n\r\n  let feederCellData = ExcelUtil.extractText(rowCells.feeder);\r\n  let kwhrEnergyCellData = ExcelUtil.extractNumber(rowCells.kwhrEnergy, false);\r\n  let demandKwhrCellData = ExcelUtil.extractNumber(rowCells.demandKwhr, false);\r\n  let kvarhrEnergyCelLData = ExcelUtil.extractNumber(\r\n    rowCells.kvarhrEnergy,\r\n    false\r\n  );\r\n\r\n  let feeder = null;\r\n  if (feederCellData.text) {\r\n    feeder = GeneralUtil.findFeeder(feederCellData.text);\r\n    if (!feeder) {\r\n      feederCellData.error = `Feeder value ${feederCellData.text} does not match any of the registered feeders`;\r\n    }\r\n  }\r\n\r\n  anyErrors = Boolean(\r\n    kwhrEnergyCellData.error ||\r\n      demandKwhrCellData.error ||\r\n      kvarhrEnergyCelLData.error ||\r\n      feederCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowCells.row + 1}:\\n`;\r\n    if (kwhrEnergyCellData.error)\r\n      error = error.concat(`\\tKwhrEnergy Cell: ${kwhrEnergyCellData.error}\\n`);\r\n    if (demandKwhrCellData.error)\r\n      error = error.concat(\r\n        `\\tDemand KwhrEnergy Cell: ${demandKwhrCellData.error}\\n`\r\n      );\r\n    if (kvarhrEnergyCelLData.error)\r\n      error = error.concat(\r\n        `\\tKvarhrEnergy Cell: ${kvarhrEnergyCelLData.error}\\n`\r\n      );\r\n    if (feederCellData.error)\r\n      error = error.concat(`\\tFeeder Cell: ${feederCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let kwhrEnergy = kwhrEnergyCellData.number as number;\r\n    let kvarhrEnergy = kvarhrEnergyCelLData.number as number;\r\n    let demandKwhr = demandKwhrCellData.number as number;\r\n    let feeder = feederCellData.text as string;\r\n    rawData = PowerSubstationUtil.createRawData(\r\n      feeder as Feeder,\r\n      kwhrEnergy,\r\n      kvarhrEnergy,\r\n      demandKwhr,\r\n      bililngPeriod,\r\n      fileName\r\n    );\r\n    console.log({ rawData });\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  settings: PowerSubstationSettings\r\n): PowerSubstationCells {\r\n  //Builds the raw cell location {column, row}\r\n  let kwhrEnergyAddress = { c: settings.kwhrEnergyCol, r: row };\r\n  let demandKwhrAddress = { c: settings.demandKwhrCol, r: row };\r\n  let kvarhrEnergyAddress = { c: settings.kvarhrEnergyCol, r: row };\r\n  let feederAddress = { c: settings.feederCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let feederRef = XLSX.utils.encode_cell(feederAddress);\r\n  let kwhrEnergyRef = XLSX.utils.encode_cell(kwhrEnergyAddress);\r\n  let kvarhrEnergyRef = XLSX.utils.encode_cell(kvarhrEnergyAddress);\r\n  let demandKwhrRef = XLSX.utils.encode_cell(demandKwhrAddress);\r\n\r\n  return {\r\n    feeder: worksheet[feederRef],\r\n    kwhrEnergy: worksheet[kwhrEnergyRef],\r\n    demandKwhr: worksheet[demandKwhrRef],\r\n    kvarhrEnergy: worksheet[kvarhrEnergyRef],\r\n    row,\r\n  };\r\n}\r\n\r\nconst PowerSubstationExcelUtil = Object.freeze({\r\n  extractRawDatasFromWorkbook,\r\n});\r\n\r\nexport default PowerSubstationExcelUtil;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Theme,\r\n  createStyles,\r\n  InputBase,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: theme.shape.borderRadius,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: theme.palette.divider,\r\n      fontSize: \"1rem\",\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\"]),\r\n      // Use the system font instead of the default Roboto font.\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus, &:hover\": {\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\ntype FormSelectFieldProps = {\r\n  value: string;\r\n  onChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\r\n  items: { value: string; text: string }[];\r\n  label: string;\r\n  className?: string;\r\n};\r\n\r\nconst FormSelectField: React.FunctionComponent<FormSelectFieldProps> = (\r\n  props\r\n) => {\r\n  const { value, onChange, items, label, className, ...others } = props;\r\n  return (\r\n    <FormControl className={className} {...others}>\r\n      <InputLabel id={props.label}>{props.label}</InputLabel>\r\n      <Select\r\n        labelId={label}\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<BootstrapInput />}\r\n      >\r\n        {items.map((item) => {\r\n          return <MenuItem value={item.value}>{item.text}</MenuItem>;\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormSelectField;\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { FormEvent, useEffect, useState } from \"react\";\r\nimport { BillingPeriod } from \"../common/object\";\r\nimport { FileUtil } from \"../common/utils\";\r\nimport PowerSubstationExcelUtil from \"./PowerSubstationExcelUtil\";\r\nimport { PowerSubstationRawData } from \"../power_substation/types\";\r\nimport FormSelectFields from \"../styled_components/FormSelectField\";\r\nimport { FilecardProps } from \"../filesdrawer/FileCard\";\r\nimport { GeneralUtil } from \"../common/object\";\r\n\r\ntype PowerSubstationParserProps = {\r\n  file: File;\r\n  render: React.FunctionComponent<FilecardProps>;\r\n  onFileParsed: (rawDatas: PowerSubstationRawData[]) => void;\r\n  onRemoveFile: (file: File) => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<PowerSubstationParserProps> = (\r\n  props\r\n) => {\r\n  const { file, render, onFileParsed, onRemoveFile, ...others } = props;\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [openBillingPeriodDialog, setOpenBillingPeriodDialog] = useState(true);\r\n  const [billingYear, setBillingYear] = useState(new Date().getFullYear());\r\n  const [billingMonth, setBillingMonth] = useState(new Date().getMonth() + 1);\r\n  const [billingPeriod, setBillingPeriod] = useState<BillingPeriod | null>(\r\n    null\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (billingPeriod) {\r\n      startParsing();\r\n    }\r\n  }, [billingPeriod]);\r\n\r\n  function startParsing() {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        let bp = billingPeriod;\r\n        return PowerSubstationExcelUtil.extractRawDatasFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          bp as BillingPeriod,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }\r\n\r\n  function handleFileParsed(rawDatas: PowerSubstationRawData[]) {\r\n    onFileParsed(rawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file);\r\n  }\r\n\r\n  function handleYearChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setBillingYear(Number(event.target.value));\r\n  }\r\n\r\n  function handleMonthChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setBillingMonth(Number(event.target.value));\r\n  }\r\n\r\n  function handleSubmit(event: FormEvent<HTMLElement>) {\r\n    event.preventDefault();\r\n    setBillingPeriod(new BillingPeriod(billingMonth, billingYear));\r\n    setOpenBillingPeriodDialog(false);\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n      <Dialog open={openBillingPeriodDialog}>\r\n        <DialogTitle>{`Input Billing Period for ${file.name}`}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter the billing month (in numbers) and the billing year (number)\r\n            e.g. 5 2020 = ( April 26 ~ May 25 2020)\r\n          </DialogContentText>\r\n          <form\r\n            id=\"billing-period-form\"\r\n            className={classes.form}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <FormSelectFields\r\n              className={classes.billingYear}\r\n              value={billingYear.toString()}\r\n              label=\"Year\"\r\n              onChange={handleYearChange}\r\n              items={GeneralUtil.getYears().map((year) => ({\r\n                value: year.toString(),\r\n                text: year.toString(),\r\n              }))}\r\n            />\r\n            <FormSelectFields\r\n              value={billingMonth.toString()}\r\n              label=\"Month\"\r\n              onChange={handleMonthChange}\r\n              items={GeneralUtil.getMonths().map((month) => ({\r\n                value: month.monthNum.toString(),\r\n                text: month.month.toString(),\r\n              }))}\r\n            />\r\n          </form>\r\n          <DialogActions>\r\n            <Button form=\"billing-period-form\" type=\"submit\">\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    form: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(3),\r\n      maxWidth: \"300px\",\r\n    },\r\n    billingYear: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileParser;\r\n","import { SubstationItem } from \"../../common/object\";\r\nimport { PowerSubstationRawData } from \"../../power_substation/types\";\r\n\r\nclass PowerTransformerLossItem {\r\n  substationItem: SubstationItem;\r\n  energMwhr: number;\r\n  demandMW: number;\r\n  powerFactor: number;\r\n  loadMVA: number;\r\n  percentLoading: number;\r\n  operationHours: number;\r\n  averageLoad: number;\r\n  loadFactor: number;\r\n  lossFactor: number;\r\n  coreLoss: number;\r\n  windingLoss: number;\r\n  auxiliaryLoss: number;\r\n  totalLosses: number;\r\n  rawDemand: { fileName: string; value: number }[];\r\n  rawEnergyMwh: { fileName: string; value: number }[];\r\n  rawKvarhrEnergy: { fileName: string; value: number }[];\r\n\r\n  constructor(\r\n    substationItem: SubstationItem,\r\n    operationHours: number,\r\n    item?: PowerTransformerLossItem\r\n  ) {\r\n    if (item) {\r\n      this.substationItem = item.substationItem;\r\n      this.operationHours = item.operationHours;\r\n      this.energMwhr = item.energMwhr;\r\n      this.demandMW = item.demandMW;\r\n      this.powerFactor = item.powerFactor;\r\n      this.loadMVA = item.loadMVA;\r\n      this.percentLoading = item.percentLoading;\r\n      this.averageLoad = item.averageLoad;\r\n      this.loadFactor = item.loadFactor;\r\n      this.lossFactor = item.lossFactor;\r\n      this.coreLoss = item.coreLoss;\r\n      this.windingLoss = item.windingLoss;\r\n      this.auxiliaryLoss = item.auxiliaryLoss;\r\n      this.totalLosses = item.totalLosses;\r\n      this.rawDemand = item.rawDemand;\r\n      this.rawEnergyMwh = item.rawEnergyMwh;\r\n      this.rawKvarhrEnergy = item.rawKvarhrEnergy;\r\n    } else {\r\n      this.substationItem = substationItem;\r\n      this.operationHours = operationHours;\r\n      this.energMwhr = 0;\r\n      this.demandMW = 0;\r\n      this.powerFactor = 0;\r\n      this.loadMVA = 0;\r\n      this.percentLoading = 0;\r\n      this.averageLoad = 0;\r\n      this.loadFactor = 0;\r\n      this.lossFactor = 0;\r\n      this.coreLoss = 0;\r\n      this.windingLoss = 0;\r\n      this.auxiliaryLoss = 0;\r\n      this.totalLosses = 0;\r\n      this.rawDemand = [];\r\n      this.rawEnergyMwh = [];\r\n      this.rawKvarhrEnergy = [];\r\n    }\r\n\r\n    console.log(\r\n      \"PowerTransformerLossItem Created: \" + substationItem.toString()\r\n    );\r\n  }\r\n\r\n  addPowerSubstatoinData(data: PowerSubstationRawData) {\r\n    console.log(\"Adding power substation data\");\r\n    console.log({ data });\r\n    this.rawEnergyMwh.push({\r\n      fileName: data.fileName,\r\n      value: data.kwhrEnergy,\r\n    });\r\n    this.rawDemand.push({ fileName: data.fileName, value: data.demandKwhr });\r\n    this.rawKvarhrEnergy.push({\r\n      fileName: data.fileName,\r\n      value: data.kvarhrEnergy,\r\n    });\r\n  }\r\n\r\n  refreshData() {\r\n    this.rawDemand = [];\r\n    this.rawEnergyMwh = [];\r\n    this.rawKvarhrEnergy = [];\r\n  }\r\n\r\n  initValues() {\r\n    this.energMwhr = this.getTotal(this.rawEnergyMwh) / 1000;\r\n    let totalKvarhr = this.getTotal(this.rawKvarhrEnergy) / 1000;\r\n    this.powerFactor = this.getPowerFactor(totalKvarhr, this.energMwhr);\r\n    this.loadMVA = this.getLoadMva(this.demandMW, this.powerFactor); /////////\r\n    this.percentLoading = this.getPercentLoading(\r\n      this.loadMVA,\r\n      this.substationItem.transformer.power\r\n    );\r\n    this.loadFactor = this.getLoadFactor(\r\n      this.energMwhr,\r\n      this.demandMW,\r\n      this.operationHours\r\n    ); ///////////\r\n    this.averageLoad = this.getAverageLoad(this.demandMW, this.loadFactor); ////////\r\n    this.lossFactor = this.getLossFactor(this.loadFactor);\r\n    this.coreLoss = this.getCoreLoss(\r\n      this.substationItem.transformer.power,\r\n      this.operationHours\r\n    );\r\n    this.windingLoss = this.getWindingLoss(\r\n      this.percentLoading,\r\n      this.lossFactor,\r\n      this.operationHours\r\n    );\r\n    this.auxiliaryLoss = this.getAuxiliaryLoss(this.operationHours);\r\n    this.totalLosses = this.getTotalLosses(\r\n      this.coreLoss,\r\n      this.auxiliaryLoss,\r\n      this.windingLoss\r\n    );\r\n  }\r\n\r\n  private getTotal(rawSet: { fileName: string; value: number }[]) {\r\n    let total = 0;\r\n    for (let raw of rawSet) {\r\n      total += raw.value;\r\n    }\r\n    return total ? total : 0;\r\n  }\r\n\r\n  private getPowerFactor(kvarhr: number, kwhr: number) {\r\n    let pf = Math.cos(Math.atan(kvarhr / kwhr)) * 100;\r\n    return pf ? pf : 0;\r\n  }\r\n\r\n  private getLoadMva(demand: number, powerFactor: number) {\r\n    let lmva = (demand * 100) / powerFactor;\r\n    return lmva ? lmva : 0;\r\n  }\r\n\r\n  private getPercentLoading(loadMva: number, powerTransformer: number) {\r\n    let pl = (loadMva * 100) / powerTransformer;\r\n    return pl ? pl : 0;\r\n  }\r\n\r\n  private getLoadFactor(\r\n    energyMwh: number,\r\n    demand: number,\r\n    operationHours: number\r\n  ) {\r\n    let bottom = demand * operationHours;\r\n    let lf = energyMwh / bottom;\r\n    return lf ? lf : 0;\r\n  }\r\n\r\n  private getAverageLoad(demand: number, loadFactor: number) {\r\n    let avl = demand * loadFactor;\r\n    return avl ? avl : 0;\r\n  }\r\n\r\n  private getLossFactor(lossFactor: number) {\r\n    let lf = 0.2 * lossFactor + 0.8 * (lossFactor * lossFactor);\r\n    return lf ? lf : 0;\r\n  }\r\n\r\n  private getCoreLoss(transformerPower: number, operationHours: number) {\r\n    let cl = transformerPower * operationHours;\r\n    return cl ? cl : 0;\r\n  }\r\n\r\n  private getWindingLoss(\r\n    percentLoading: number,\r\n    lossFactor: number,\r\n    operationHours: number\r\n  ) {\r\n    let wl =\r\n      77 *\r\n      (percentLoading / 100) *\r\n      (percentLoading / 100) *\r\n      lossFactor *\r\n      operationHours;\r\n    return wl ? wl : 0;\r\n  }\r\n\r\n  private getAuxiliaryLoss(operationHours: number) {\r\n    let al = 2 * 3 * (operationHours / 24);\r\n    return al ? al : 0;\r\n  }\r\n\r\n  private getTotalLosses(\r\n    coreLoss: number,\r\n    windingLoss: number,\r\n    auxiliaryLoss: number\r\n  ) {\r\n    return coreLoss + windingLoss + auxiliaryLoss;\r\n  }\r\n}\r\n\r\nexport default PowerTransformerLossItem;\r\n","import { Substation, SubstationItem } from \"../../common/object\";\r\nimport PowerTransformerLossItem from \"./PowerTransformerLossItem\";\r\n\r\nclass PowerTransformerLossSubstation {\r\n  substation: Substation;\r\n  //key = substation.key + transformer.key\r\n  substationItems: Map<string, PowerTransformerLossItem>;\r\n  operatingHours: number;\r\n  constructor(substation: Substation, operatingHours: number) {\r\n    this.substation = substation;\r\n    this.substationItems = new Map();\r\n    this.operatingHours = operatingHours;\r\n  }\r\n\r\n  replacePowerTransformerLossItem(item: PowerTransformerLossItem) {\r\n    this.substationItems.set(this.generateKey(item.substationItem), item);\r\n  }\r\n\r\n  addIfNotExistsOrElseGet(substationItem: SubstationItem) {\r\n    let key = this.generateKey(substationItem);\r\n    if (!this.substationItems.has(key)) {\r\n      this.substationItems.set(\r\n        key,\r\n        new PowerTransformerLossItem(substationItem, this.operatingHours)\r\n      );\r\n    }\r\n    return this.substationItems.get(key) as PowerTransformerLossItem;\r\n  }\r\n\r\n  generateKey(substationItem: SubstationItem) {\r\n    return this.substation.key + substationItem.transformer.key;\r\n  }\r\n}\r\nexport default PowerTransformerLossSubstation;\r\n","import PowerTransformerLossSubstation from \"./PowerTransformerLossSubstation\";\r\n\r\nimport { Substation, BillingPeriod } from \"../../common/object\";\r\n\r\nclass PowerTransformerLoss {\r\n  billingPeriod: BillingPeriod;\r\n  //key: substation\r\n  items: Map<string, PowerTransformerLossSubstation>;\r\n  operatingHours: number;\r\n  fileName: string;\r\n\r\n  constructor(billingPeriod: BillingPeriod, fileName: string) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.operatingHours = (billingPeriod.getTotalDays() + 1) * 24;\r\n    this.items = new Map();\r\n    this.fileName = fileName;\r\n  }\r\n\r\n  addIfNotExistsOrElseGet(substation: Substation) {\r\n    let key = substation.key;\r\n    if (!this.items.has(key)) {\r\n      console.log(\r\n        \"Adding new PowerTransformerSubstationItem, subtation: \" +\r\n          substation.key\r\n      );\r\n      this.items.set(\r\n        key,\r\n        new PowerTransformerLossSubstation(substation, this.operatingHours)\r\n      );\r\n    }\r\n    return this.items.get(key) as PowerTransformerLossSubstation;\r\n  }\r\n}\r\n\r\nexport default PowerTransformerLoss;\r\n","import { BillingPeriod } from \"../../common/object\";\r\nimport PowerTransformerLoss from \"./PowerTransformerLoss\";\r\n\r\nclass MonthlyPowerTransformerLoss {\r\n  //key: billingpPeriod.toString(),\r\n  powerTransformerLosses: Map<string, PowerTransformerLoss>;\r\n\r\n  constructor(monthlyPowerTransformerLoss?: MonthlyPowerTransformerLoss) {\r\n    if (monthlyPowerTransformerLoss) {\r\n      this.powerTransformerLosses = new Map(\r\n        monthlyPowerTransformerLoss.powerTransformerLosses\r\n      );\r\n    } else {\r\n      this.powerTransformerLosses = new Map();\r\n    }\r\n    console.log(\"MonthlyPowerTransformerLoss created..\");\r\n  }\r\n\r\n  initValues() {\r\n    [...this.powerTransformerLosses.values()].forEach((ptl) => {\r\n      [...ptl.items.values()].forEach((pti) => {\r\n        [...pti.substationItems.values()].forEach((item) => {\r\n          item.initValues();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  addIfNotExistOrElseGet(billingpPeriod: BillingPeriod, fileName: string) {\r\n    let key = billingpPeriod.toString();\r\n    if (!this.powerTransformerLosses.has(key)) {\r\n      this.powerTransformerLosses.set(\r\n        key,\r\n        new PowerTransformerLoss(billingpPeriod, fileName)\r\n      );\r\n    }\r\n    return this.powerTransformerLosses.get(key) as PowerTransformerLoss;\r\n  }\r\n}\r\n\r\nexport default MonthlyPowerTransformerLoss;\r\n","import {\r\n  PowerTransformerLoss,\r\n  PowerTransformerLossItem,\r\n  MonthlyPowerTransformerLoss,\r\n} from \"./objects\";\r\nimport { PowerSubstationRawData } from \"../power_substation/types\";\r\nimport XLSX from \"xlsx\";\r\nimport { GeneralUtil, BillingPeriod } from \"../common/object\";\r\n\r\nconst PowerTransformerLossUtil = Object.freeze({\r\n  generateExcelFile,\r\n  addPowerSubstatoinRawDatas,\r\n  addPowerSubstatoinRawDatasAsync,\r\n  removePowerSubstationFileAsync,\r\n  removePowerSubstationFile,\r\n  replacePowerTransformerLossItem,\r\n  replacePowerTransformerLossItemAsync,\r\n});\r\n\r\nasync function addPowerSubstatoinRawDatasAsync(\r\n  rawDatas: PowerSubstationRawData[],\r\n  monthlyPowerTransformerLoss: MonthlyPowerTransformerLoss\r\n) {\r\n  return addPowerSubstatoinRawDatas(rawDatas, monthlyPowerTransformerLoss);\r\n}\r\n\r\nfunction addPowerSubstatoinRawDatas(\r\n  rawDatas: PowerSubstationRawData[],\r\n  monthlyPowerTransformerLoss: MonthlyPowerTransformerLoss\r\n) {\r\n  rawDatas.forEach((rawData) => {\r\n    let substation = GeneralUtil.findSubstationOfFeeder(rawData.feeder);\r\n    if (substation) {\r\n      let substationItem = GeneralUtil.findSubstationItemOfFeeder(\r\n        rawData.feeder,\r\n        substation\r\n      );\r\n      if (substationItem) {\r\n        monthlyPowerTransformerLoss\r\n          .addIfNotExistOrElseGet(rawData.billingPeriod, rawData.fileName)\r\n          .addIfNotExistsOrElseGet(substation)\r\n          .addIfNotExistsOrElseGet(substationItem)\r\n          .addPowerSubstatoinData(rawData);\r\n      }\r\n    }\r\n  });\r\n  return monthlyPowerTransformerLoss;\r\n}\r\nasync function removePowerSubstationFileAsync(\r\n  fileName: string,\r\n  monthlyPowerTransformerLoss: MonthlyPowerTransformerLoss\r\n) {\r\n  return removePowerSubstationFile(fileName, monthlyPowerTransformerLoss);\r\n}\r\n\r\nfunction removePowerSubstationFile(\r\n  fileName: string,\r\n  monthlyPowerTransformerLoss: MonthlyPowerTransformerLoss\r\n) {\r\n  [...monthlyPowerTransformerLoss.powerTransformerLosses.keys()].forEach(\r\n    (key) => {\r\n      if (\r\n        monthlyPowerTransformerLoss.powerTransformerLosses.get(key)\r\n          ?.fileName === fileName\r\n      ) {\r\n        monthlyPowerTransformerLoss.powerTransformerLosses.delete(key);\r\n      }\r\n    }\r\n  );\r\n\r\n  return monthlyPowerTransformerLoss;\r\n}\r\n\r\nasync function replacePowerTransformerLossItemAsync(\r\n  item: PowerTransformerLossItem,\r\n  billingPeriod: BillingPeriod,\r\n  monthlyPowerTransformerLoss: MonthlyPowerTransformerLoss\r\n) {\r\n  return replacePowerTransformerLossItem(\r\n    item,\r\n    billingPeriod,\r\n    monthlyPowerTransformerLoss\r\n  );\r\n}\r\n\r\nfunction replacePowerTransformerLossItem(\r\n  item: PowerTransformerLossItem,\r\n  billingPeriod: BillingPeriod,\r\n  monthlyPowerTransformerLoss: MonthlyPowerTransformerLoss\r\n) {\r\n  monthlyPowerTransformerLoss.powerTransformerLosses\r\n    .get(billingPeriod.toString())\r\n    ?.items.get(item.substationItem.substationKey)\r\n    ?.replacePowerTransformerLossItem(item);\r\n\r\n  return monthlyPowerTransformerLoss;\r\n}\r\n\r\nfunction generateExcelFile(powerTransformerLoss: PowerTransformerLoss) {\r\n  let workbook = XLSX.utils.book_new();\r\n  let worksheetName = `${powerTransformerLoss.billingPeriod.toString()}`;\r\n  let worksheetData = generateSheetData(powerTransformerLoss);\r\n  let worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, worksheetName);\r\n  XLSX.writeFile(\r\n    workbook,\r\n    `Monthly Power Transformer Loss Report of ${powerTransformerLoss.billingPeriod.toString()}.xlsx`\r\n  );\r\n}\r\n\r\nfunction generateSheetData(powerTransformerLoss: PowerTransformerLoss) {\r\n  let data = [];\r\n\r\n  //---------CREATING HEADERS-------------\r\n\r\n  let header = [\r\n    \"Substation\",\r\n    \"Power Transformer\",\r\n    \"Brand\",\r\n    \"Energy (MWHR)\",\r\n    \"Demand (MW)\",\r\n    \"Power Factor\",\r\n    \"Load (MVA)\",\r\n    \"Percent Loading\",\r\n    \"Operation Hours\",\r\n    \"Ave. Load (MW)\",\r\n    \"Load Factor\",\r\n    \"Loss Factor\",\r\n    \"Core Loss\",\r\n    \"Winding Loss\",\r\n    \"Auxiliary Loss\",\r\n    \"Total Losses\",\r\n  ];\r\n\r\n  data.push(header);\r\n\r\n  //----------CONTENT----------------\r\n  for (let substation of powerTransformerLoss.items.values()) {\r\n    for (let item of substation.substationItems.values()) {\r\n      data.push([\r\n        substation.substation.text,\r\n        `${item.substationItem.transformer.power} mVA`,\r\n        item.substationItem.transformer.brand,\r\n        item.energMwhr.toFixed(2),\r\n        item.demandMW.toFixed(2),\r\n        item.powerFactor.toFixed(2),\r\n        item.loadMVA.toFixed(2),\r\n        item.percentLoading.toFixed(2),\r\n        item.operationHours.toFixed(2),\r\n        item.averageLoad.toFixed(2),\r\n        item.loadFactor.toFixed(2),\r\n        item.coreLoss.toFixed(2),\r\n        item.windingLoss.toFixed(2),\r\n        item.auxiliaryLoss.toFixed(2),\r\n        item.totalLosses.toFixed(2),\r\n      ]);\r\n    }\r\n  }\r\n  console.log(data);\r\n  return data;\r\n}\r\nexport default PowerTransformerLossUtil;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {\r\n  PowerTransformerLossItem,\r\n  MonthlyPowerTransformerLoss,\r\n} from \"./objects\";\r\nimport { BillingPeriod } from \"../common/object\";\r\nimport { PowerSubstationRawData } from \"../power_substation/types\";\r\nimport PowerTransformerLossUtil from \"./PowerTransformerLossUtil\";\r\n\r\ntype PowerTransformerLossContextProviderProps = {};\r\n\r\nconst tempPowerTransformerLoss = new MonthlyPowerTransformerLoss();\r\n\r\nconst PowerTransformerLossContext = createContext({\r\n  monthlyPowerTransformerLoss: tempPowerTransformerLoss,\r\n  onPowerTransformerLossItemChanged: (\r\n    item: PowerTransformerLossItem,\r\n    billingPeriod: BillingPeriod\r\n  ) => {},\r\n  onPowerSubstationFileParsed: (rawDatas: PowerSubstationRawData[]) => {},\r\n  onPowerSubstationFileRemoved: (flieName: string) => {},\r\n});\r\n\r\nconst PowerTransformerLossContextProvider: React.FunctionComponent<PowerTransformerLossContextProviderProps> = (\r\n  props\r\n) => {\r\n  const [\r\n    monthlyPowerTransformerLoss,\r\n    setMonthlyPowerTransformerLoss,\r\n  ] = useState(tempPowerTransformerLoss);\r\n\r\n  const [buffer, setBuffer] = useState<\r\n    (\r\n      | PowerSubstationRawData[]\r\n      | { item: PowerTransformerLossItem; billingPeriod: BillingPeriod }\r\n      | string\r\n    )[]\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    console.log({\r\n      method: \"useEffect()\",\r\n      message: \"Buffer  length is: \" + buffer.length,\r\n    });\r\n    if (buffer.length > 0) {\r\n      let newBuffer = [...buffer];\r\n      let data = newBuffer.pop();\r\n\r\n      if (\r\n        (data as {\r\n          item: PowerTransformerLossItem;\r\n          billingPeriod: BillingPeriod;\r\n        }).item\r\n      ) {\r\n        let d = data as {\r\n          item: PowerTransformerLossItem;\r\n          billingPeriod: BillingPeriod;\r\n        };\r\n        PowerTransformerLossUtil.replacePowerTransformerLossItemAsync(\r\n          d.item,\r\n          d.billingPeriod,\r\n          monthlyPowerTransformerLoss\r\n        ).then((result) => {\r\n          setMonthlyPowerTransformerLoss(\r\n            new MonthlyPowerTransformerLoss(result)\r\n          );\r\n          setBuffer(newBuffer);\r\n        });\r\n      } else if (Array.isArray(data)) {\r\n        PowerTransformerLossUtil.addPowerSubstatoinRawDatasAsync(\r\n          data as PowerSubstationRawData[],\r\n          monthlyPowerTransformerLoss\r\n        ).then((result) => {\r\n          setMonthlyPowerTransformerLoss(\r\n            new MonthlyPowerTransformerLoss(result)\r\n          );\r\n          setBuffer(newBuffer);\r\n        });\r\n      } else {\r\n        PowerTransformerLossUtil.removePowerSubstationFileAsync(\r\n          data as string,\r\n          monthlyPowerTransformerLoss\r\n        ).then((result) => {\r\n          setMonthlyPowerTransformerLoss(\r\n            new MonthlyPowerTransformerLoss(result)\r\n          );\r\n          setBuffer(newBuffer);\r\n        });\r\n      }\r\n    } else {\r\n      initPowerTransformerLossValues().then((result) => {\r\n        setMonthlyPowerTransformerLoss(result);\r\n      });\r\n    }\r\n  }, [buffer]);\r\n\r\n  useEffect(() => {\r\n    console.log({ monthlyPowerTransformerLoss });\r\n  }, [monthlyPowerTransformerLoss]);\r\n\r\n  function initPowerTransformerLossValues() {\r\n    return new Promise<MonthlyPowerTransformerLoss>((resolve, reject) => {\r\n      let newPlts = new MonthlyPowerTransformerLoss(\r\n        monthlyPowerTransformerLoss\r\n      );\r\n      newPlts.initValues();\r\n      resolve(newPlts);\r\n    });\r\n  }\r\n\r\n  function onPowerSubstationFileParsed(rawDatas: PowerSubstationRawData[]) {\r\n    setBuffer((prevBuffer) => [...prevBuffer, rawDatas]);\r\n  }\r\n\r\n  function onPowerSubstationFileRemoved(fileName: string) {\r\n    setBuffer((prevBuffer) => [...prevBuffer, fileName]);\r\n  }\r\n\r\n  function onPowerTransformerLossItemChanged(\r\n    item: PowerTransformerLossItem,\r\n    billingPeriod: BillingPeriod\r\n  ) {\r\n    setBuffer((prevBuffer) => [...prevBuffer, { item, billingPeriod }]);\r\n  }\r\n\r\n  return (\r\n    <PowerTransformerLossContext.Provider\r\n      value={{\r\n        monthlyPowerTransformerLoss,\r\n        onPowerTransformerLossItemChanged,\r\n        onPowerSubstationFileParsed,\r\n        onPowerSubstationFileRemoved,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PowerTransformerLossContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PowerTransformerLossContextProvider;\r\nexport { PowerTransformerLossContext };\r\n","import React, { useContext, useState } from \"react\";\r\nimport CustomAccordion from \"../StyledAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport FileDrop from \"../FileDrop\";\r\nimport PowerSubstationParser from \"../../power_substation/PowerSubstationParser\";\r\nimport { PowerSubstationRawData } from \"../../power_substation/types\";\r\nimport { PowerTransformerLossContext } from \"../../power_transformer_loss/PowerTransformerLossContextProvider\";\r\nimport { FeederAndDemandContext } from \"../../feeder_and_demand/FeederAndDemandContextProvider\";\r\n\r\ntype MonthlyInterruptionAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"ps_panel\";\r\nconst title = \"Power Substation Files\";\r\n\r\nconst MonthlyInterruptionAccordion: React.FunctionComponent<MonthlyInterruptionAccordionProps> = (\r\n  props\r\n) => {\r\n  const { expandedPanel, onPanelChange, ...others } = props;\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n  const powerTransformerLossContext = useContext(PowerTransformerLossContext);\r\n  const feederAndDemandContext = useContext(FeederAndDemandContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(rawDatas: PowerSubstationRawData[]) {\r\n    powerTransformerLossContext.onPowerSubstationFileParsed(rawDatas);\r\n    feederAndDemandContext.onMonthlyInterruptionOrPowerSubstationFileParsed(\r\n      rawDatas\r\n    );\r\n  }\r\n\r\n  function handleRemoveFile(file: File) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n    feederAndDemandContext.onPowerSubstationDataFileRemoved(file.name);\r\n    powerTransformerLossContext.onPowerSubstationFileRemoved(file.name);\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <PowerSubstationParser\r\n              onFileParsed={handleFileParsed}\r\n              onRemoveFile={handleRemoveFile}\r\n              key={file.name}\r\n              file={file}\r\n              render={(props) => (\r\n                <FileCard\r\n                  progress={props.progress}\r\n                  progressInfo={props.progressInfo}\r\n                  file={props.file}\r\n                  errors={props.errors}\r\n                  onRemoveFile={props.onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionAccordion;\r\nexport { panelName };\r\n","import FilesDrawer from \"./FilesDrawer\";\r\nimport useStyles, { drawerWidth } from \"./use-styles\";\r\n\r\nexport default FilesDrawer;\r\nexport { drawerWidth, useStyles };\r\n","import { Drawer } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport useStyles from \"./use-styles\";\r\nimport LoadProfileAccordion, {\r\n  panelName as loadProfilePanelName,\r\n} from \"./accordions/LoadProfileAccordion\";\r\nimport MonthlyInterruptionAccordion from \"./accordions/MonthlyInterruptionAccordion\";\r\nimport PowerSubstationAccordion from \"./accordions/PowerSubstationAccordion\";\r\n\r\ntype FilesDrawerProps = {\r\n  open: boolean;\r\n};\r\n\r\nconst FilesDrawer: React.FunctionComponent<FilesDrawerProps> = ({\r\n  open,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [expandedPanel, setExpandedPanel] = useState<string>(\r\n    loadProfilePanelName\r\n  );\r\n\r\n  function handlePanelChange(newExpandedPanel: string) {\r\n    setExpandedPanel(newExpandedPanel);\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"persistent\"\r\n      open={open}\r\n      anchor=\"left\"\r\n      className={classes.drawer}\r\n      classes={{ paper: classes.drawerPaper }}\r\n    >\r\n      <LoadProfileAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n      <MonthlyInterruptionAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n      <PowerSubstationAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default FilesDrawer;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    background: theme.palette.background.paper,\r\n    padding: theme.spacing(3),\r\n    fontSize: \"1rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    zIndex: theme.zIndex.mobileStepper,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    minHeight: 0,\r\n  },\r\n  title_div: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(5),\r\n    fontSize: \"1.3em\",\r\n  },\r\n  tabs: {\r\n    display: \"inline-block\",\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n  tab_panel: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { FormEvent } from \"react\";\r\nimport { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\ntype LoadProfileSettingsProps = {\r\n  onSubmit: (event: FormEvent<HTMLFormElement>) => void;\r\n  children: any;\r\n};\r\n\r\nconst LoadProfileSettingsPanel: React.FunctionComponent<LoadProfileSettingsProps> = (\r\n  props\r\n) => {\r\n  const { onSubmit, children, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    onSubmit(event);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form\r\n        id=\"settings-form\"\r\n        className={classes.textFieldContainer}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {children}\r\n      </form>\r\n      <div className={classes.actionContainer}>\r\n        <Button form=\"settings-form\" type=\"submit\" color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    textFieldContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"10px\",\r\n      width: \"300px\",\r\n      fontSize: \"0.9rem\",\r\n    },\r\n    actionContainer: {\r\n      marginTop: 10,\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileSettingsPanel;\r\n","import { makeStyles, TextField, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    fontSize: \"1em\",\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: theme.palette.background.paper,\r\n    \"&.Mui-focused\": {\r\n      backgroundColor: theme.palette.background.default,\r\n      border: `1px solid ${theme.palette.primary.main}`,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    focused: {},\r\n  },\r\n}));\r\n\r\ntype FormTextFieldProps = {\r\n  value?: string | number;\r\n  name?: string;\r\n  label?: string;\r\n  placeholder?: string;\r\n  helpertext?: string;\r\n  error?: boolean;\r\n  type?: string;\r\n  limitZero?: boolean;\r\n  onChange?: (\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => void;\r\n};\r\n\r\nconst FormTextField: React.FunctionComponent<FormTextFieldProps> = ({\r\n  label,\r\n  value = \"\",\r\n  name = \"\",\r\n  placeholder = \"\",\r\n  helpertext = \"\",\r\n  error = false,\r\n  type = \"text\",\r\n  onChange = (event) => {},\r\n  limitZero = true,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function handleChange(\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) {\r\n    if (type === \"number\" && Number(event.target.value) < 0) {\r\n      return;\r\n    } else {\r\n      onChange(event);\r\n    }\r\n  }\r\n  return (\r\n    <TextField\r\n      variant=\"filled\"\r\n      label={label}\r\n      value={value}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      error={error}\r\n      helperText={helpertext}\r\n      type={type}\r\n      InputProps={{\r\n        disableUnderline: true,\r\n        classes: { root: classes.root },\r\n      }}\r\n      margin=\"dense\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormTextField;\r\n","import { makeStyles, Tab, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype HorizontalTabProps = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    textAlign: \"start\",\r\n    textTransform: \"none\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"0.9em\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    padding: 0,\r\n    minWidth: \"100px\",\r\n    lineHeight: 0,\r\n  },\r\n  tab_selected: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tab_wrapper: {},\r\n}));\r\n\r\nconst HorizontalTab: React.FunctionComponent<HorizontalTabProps> = ({\r\n  label,\r\n  value,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      classes={{\r\n        root: classes.tab,\r\n        wrapper: classes.tab_wrapper,\r\n        selected: classes.tab_selected,\r\n      }}\r\n      value={value}\r\n      label={label}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalTab;\r\n","import {\r\n  createStyles,\r\n  makeStyles,\r\n  SvgIconProps,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport clsx from \"clsx\";\r\nimport React, { ReactElement } from \"react\";\r\n\r\ndeclare module \"csstype\" {\r\n  interface Properties {\r\n    \"--tree-view-color\"?: string;\r\n    \"--tree-view-bg-color\"?: string;\r\n  }\r\n}\r\n\r\ntype StyledTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  labelIcon?: React.ElementType<SvgIconProps>;\r\n  labelInfo?: string;\r\n  labelText?: string;\r\n  content?: any;\r\n  bold?: boolean;\r\n};\r\n\r\nfunction StyledTreeItem(props: StyledTreeItemProps) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText = \"\",\r\n    labelIcon: LabelIcon,\r\n    labelInfo = \"\",\r\n    color,\r\n    content: Content,\r\n    bgColor,\r\n    bold,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={clsx(classes.labelRoot, classes.bold && bold)}>\r\n          {Content ? (\r\n            <React.Fragment>\r\n              {LabelIcon ? (\r\n                <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {Content}\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              {LabelIcon ? (\r\n                <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Typography variant=\"body2\" className={classes.labelText}>\r\n                {labelText}\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"inherit\">\r\n                {labelInfo}\r\n              </Typography>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(3),\r\n\r\n      color: theme.palette.text.primary,\r\n      \"&:hover > $content\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      \"&:focus > $content, &$selected > $content\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.primary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"$expanded > &\": {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      \"& $content\": {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n    labelRoot: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: `${theme.spacing(2)}px`,\r\n      padding: theme.spacing(0.5, 1),\r\n      fontWeight: \"normal\",\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: \"inherit\",\r\n      flexGrow: 0,\r\n    },\r\n    bold: {\r\n      fontWeight: \"bold\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default StyledTreeItem;\r\n","import { Tabs, Typography, Box } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport useStyles from \"./use-styles\";\r\nimport {\r\n  LoadProfileSettingsPanel,\r\n  MonthlyInterruptionSettingsPanel,\r\n} from \"./tabpanels\";\r\nimport { VerticalTab } from \"../styled_components\";\r\nimport PowerSubstationPanel from \"./tabpanels/PowerSubstationPanel\";\r\n\r\ntype SettingsProps = {};\r\n\r\nenum SettingsTabs {\r\n  LOADPROFILE_TAB = \"lp_tab\",\r\n  MONTHLYINTERRUPTION_TAB = \"mi_tab\",\r\n  POWERSUBSTATION_TAB = \"ps_tab\",\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-prevent-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n      className={classes.tab_panel}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Settings: React.FunctionComponent<SettingsProps> = ({ ...others }) => {\r\n  const [selectedTab, setSelectedTab] = useState<string>(\r\n    SettingsTabs.LOADPROFILE_TAB\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title_div}>\r\n        <Typography className={classes.title}>Settings</Typography>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={selectedTab}\r\n          centered={false}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n        >\r\n          <VerticalTab\r\n            label=\"Load Profile Settings\"\r\n            value={SettingsTabs.LOADPROFILE_TAB}\r\n          />\r\n          <VerticalTab\r\n            value={SettingsTabs.MONTHLYINTERRUPTION_TAB}\r\n            label=\"Monthly Interruption Settings\"\r\n          />\r\n          <VerticalTab\r\n            value={SettingsTabs.POWERSUBSTATION_TAB}\r\n            label=\"Power Substation Settings\"\r\n          />\r\n        </Tabs>\r\n        <TabPanel value={selectedTab} index={SettingsTabs.LOADPROFILE_TAB}>\r\n          <LoadProfileSettingsPanel />\r\n        </TabPanel>\r\n        <TabPanel\r\n          value={selectedTab}\r\n          index={SettingsTabs.MONTHLYINTERRUPTION_TAB}\r\n        >\r\n          <MonthlyInterruptionSettingsPanel />\r\n        </TabPanel>\r\n        <TabPanel value={selectedTab} index={SettingsTabs.POWERSUBSTATION_TAB}>\r\n          <PowerSubstationPanel />\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { makeStyles, Tab, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype VerticalTabProps = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    textAlign: \"start\",\r\n    textTransform: \"none\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"0.9em\",\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  tab_selected: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tab_wrapper: {\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n}));\r\n\r\nconst VerticalTab: React.FunctionComponent<VerticalTabProps> = ({\r\n  label,\r\n  value,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      classes={{\r\n        root: classes.tab,\r\n        wrapper: classes.tab_wrapper,\r\n        selected: classes.tab_selected,\r\n      }}\r\n      value={value}\r\n      label={label}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalTab;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\n\r\nimport { LoadProfileStorage } from \"../../loadprofile\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport { FormTextField } from \"../../styled_components\";\r\n\r\ntype LoadProfileSettingsProps = {};\r\n\r\nconst LoadProfileSettingsPanel: React.FunctionComponent<LoadProfileSettingsProps> = ({\r\n  ...others\r\n}) => {\r\n  const [kwdel, setKwdel] = useState(0);\r\n  const [khwdel, setKwhdel] = useState(0);\r\n  const [date, setDate] = useState(0);\r\n  const [time, setTime] = useState(0);\r\n  const [dateFormat, setDateFormat] = useState(\"\");\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let lpSettings = LoadProfileStorage.loadSettings();\r\n    setKwdel(lpSettings.kwdelCol);\r\n    setKwhdel(lpSettings.kwhdelCol);\r\n    setDateFormat(lpSettings.dateFormat);\r\n    setDate(lpSettings.dateCol);\r\n    setTime(lpSettings.timeCol);\r\n    setTimeFormat(lpSettings.timeFormat);\r\n  }, []);\r\n\r\n  function handleKwdelChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwdel(Number(event.target.value));\r\n  }\r\n\r\n  function handleKwhdelChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwhdel(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDate(Number(event.target.value));\r\n  }\r\n\r\n  function handleTimeChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setTime(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateFormat(event.target.value);\r\n  }\r\n\r\n  function handleTimeFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setTimeFormat(event.target.value);\r\n  }\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    LoadProfileStorage.saveSettings({\r\n      kwdelCol: kwdel,\r\n      timeCol: time,\r\n      dateCol: date,\r\n      dateFormat,\r\n      timeFormat,\r\n      kwhdelCol: khwdel,\r\n    });\r\n    alert(\"Load profile settings saved\");\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Kwdel Column#\"\r\n        placeholder=\"Kwdel Column#\"\r\n        value={kwdel}\r\n        type=\"number\"\r\n        onChange={handleKwdelChange}\r\n        helpertext=\"the column# of the kwdel value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Kwhdel Column#\"\r\n        placeholder=\"Kwhdel Column#\"\r\n        value={khwdel}\r\n        type=\"number\"\r\n        onChange={handleKwhdelChange}\r\n        helpertext=\"the column# of the kwhdel value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Date Column#\"\r\n        placeholder=\"Date Column#\"\r\n        value={date}\r\n        type=\"number\"\r\n        onChange={handleDateChange}\r\n        helpertext=\"the column# of the date value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Time Column#\"\r\n        placeholder=\"Time Column#\"\r\n        value={time}\r\n        type=\"number\"\r\n        onChange={handleTimeChange}\r\n        helpertext=\"the column# of the time value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Date Format\"\r\n        placeholder=\"Date Format\"\r\n        value={dateFormat}\r\n        onChange={handleDateFormatChange}\r\n        helpertext=\"(MM/DD/YYYY) = '09/22/2020', (MMMM/DD/YYYY) = 'September/22/2020'  \"\r\n      />\r\n      <FormTextField\r\n        label=\"Time Format\"\r\n        placeholder=\"Time Format\"\r\n        value={timeFormat}\r\n        onChange={handleTimeFormatChange}\r\n        helpertext=\"(HH:mm) = '22:15', (hh:mm a) = '10:15 pm', (HH:mm:ss) = '22:15:13' \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default LoadProfileSettingsPanel;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport { FormTextField } from \"../../styled_components\";\r\nimport MonthlyInterruptionUtil from \"../../monthly_interruption/MonthlyInterruptionUtil\";\r\n\r\ntype MonthlyInterruptionPanelProps = {};\r\n\r\nconst MonthlyInterruptionPanel: React.FunctionComponent<MonthlyInterruptionPanelProps> = (\r\n  props\r\n) => {\r\n  const { ...others } = props;\r\n\r\n  const [durationCol, setDurationCol] = useState(0);\r\n  const [dateCol, setDateCol] = useState(0);\r\n  const [feederCol, setFeederCol] = useState(0);\r\n  const [dateFormat, setDateFormat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let settings = MonthlyInterruptionUtil.loadSettings();\r\n    setDurationCol(settings.durationCol);\r\n    setDateCol(settings.dateCol);\r\n    setFeederCol(settings.feederCol);\r\n    setDateFormat(settings.dateFormat);\r\n  }, []);\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    MonthlyInterruptionUtil.saveSettings({\r\n      dateCol,\r\n      durationCol,\r\n      feederCol,\r\n      dateFormat,\r\n    });\r\n\r\n    alert(\"Monthly Interruption Settings Saved\");\r\n  }\r\n\r\n  function handleDurationColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDurationCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateFormat(event.target.value);\r\n  }\r\n\r\n  function handleFeederColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setFeederCol(Number(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Feeder Column#\"\r\n        placeholder=\"Feeder Column#\"\r\n        value={feederCol}\r\n        type=\"number\"\r\n        onChange={handleFeederColChange}\r\n        helpertext=\"the column# of the feeder value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Duration Column#\"\r\n        placeholder=\"Duration Column#\"\r\n        value={durationCol}\r\n        type=\"number\"\r\n        onChange={handleDurationColChange}\r\n        helpertext=\"the column# of the duration value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Date Column#\"\r\n        placeholder=\"Date Column#\"\r\n        value={dateCol}\r\n        type=\"number\"\r\n        onChange={handleDateColChange}\r\n        helpertext=\"the column# of the date value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Date Format\"\r\n        placeholder=\"Date Format\"\r\n        value={dateFormat}\r\n        onChange={handleDateFormatChange}\r\n        helpertext=\"(MM/DD/YYYY) = '09/22/2020', (MMMM/DD/YYYY) = 'September/22/2020'  \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionPanel;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport { FormTextField } from \"../../styled_components\";\r\nimport PowerSubstationUtil from \"../../power_substation/PowerSubstationUtil\";\r\n\r\ntype PowerSubstationPanelProps = {};\r\n\r\nconst PowerSubstationPanel: React.FunctionComponent<PowerSubstationPanelProps> = (\r\n  props\r\n) => {\r\n  const { ...others } = props;\r\n\r\n  const [demandCol, setDemandCol] = useState(0);\r\n  const [kwhrEnergyCol, setKwhrEnergyCol] = useState(0);\r\n  const [feederCol, setFeederCol] = useState(0);\r\n  const [kvarhrEnergyCol, setKvarhrEnergyCol] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let settings = PowerSubstationUtil.loadSettings();\r\n    setDemandCol(settings.demandKwhrCol);\r\n    setKwhrEnergyCol(settings.kwhrEnergyCol);\r\n    setFeederCol(settings.feederCol);\r\n    setKvarhrEnergyCol(settings.kvarhrEnergyCol);\r\n  }, []);\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    PowerSubstationUtil.saveSettings({\r\n      kwhrEnergyCol,\r\n      demandKwhrCol: demandCol,\r\n      feederCol,\r\n      kvarhrEnergyCol,\r\n    });\r\n\r\n    alert(\"Power Substation Settings Saved\");\r\n  }\r\n\r\n  function handleDemandChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDemandCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleKvarhrEnergyChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKvarhrEnergyCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleFeederColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setFeederCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleKwhrEnergyChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwhrEnergyCol(Number(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Kwhr Energy Column#\"\r\n        placeholder=\"Kwhr Energy Column#\"\r\n        value={kwhrEnergyCol}\r\n        type=\"number\"\r\n        onChange={handleKwhrEnergyChange}\r\n        helpertext=\"the column# of the kwhr energy value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Demand Column#\"\r\n        placeholder=\"Demand Column#\"\r\n        value={demandCol}\r\n        type=\"number\"\r\n        onChange={handleDemandChange}\r\n        helpertext=\"the column# of the demand value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Kvarhr Energy Column#\"\r\n        placeholder=\"Kvarhr Energy Column#\"\r\n        value={kvarhrEnergyCol}\r\n        type=\"number\"\r\n        onChange={handleKvarhrEnergyChange}\r\n        helpertext=\"the column# of the kvarhr value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Feeder Column#\"\r\n        placeholder=\"Feeder Column#\"\r\n        value={feederCol}\r\n        onChange={handleFeederColChange}\r\n        type=\"number\"\r\n        helpertext=\"the column# of the feeder value, note: column starts at 0 \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default PowerSubstationPanel;\r\n","import Settings from \"./Settings\";\r\n\r\nexport default Settings;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport {\r\n  ArrowDownward,\r\n  ArrowRight,\r\n  Functions,\r\n  TrendingUp,\r\n} from \"@material-ui/icons\";\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport { StyledTreeItem } from \"../../../styled_components\";\r\n\r\ntype DetailsTreeProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst DetailsTree: React.FunctionComponent<DetailsTreeProps> = (props) => {\r\n  const { monthlyLoadProfile, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={[\"1\"]}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }}></div>}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"2\"\r\n        labelText=\"Coincident Peak\"\r\n        labelIcon={TrendingUp}\r\n        labelInfo={\r\n          monthlyLoadProfile.coincidentPeak\r\n            ? `${monthlyLoadProfile.coincidentPeak.meteringPoint}: ${\r\n                monthlyLoadProfile.coincidentPeak.date.getMonth() + 1\r\n              }/${monthlyLoadProfile.coincidentPeak.date.getDate()}/${monthlyLoadProfile.coincidentPeak.date.getFullYear()} ${\r\n                monthlyLoadProfile.coincidentPeak.hour\r\n              }:00 kwdel: ${monthlyLoadProfile.coincidentPeak.kwdel.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"3\"\r\n        labelText=\"None Coincident Peak\"\r\n        labelIcon={Functions}\r\n        labelInfo={\r\n          monthlyLoadProfile.nonCoincidentPeak\r\n            ? ` ${monthlyLoadProfile.nonCoincidentPeak.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"4\"\r\n        labelText=\"Diversity Factor:\"\r\n        labelIcon={Functions}\r\n        labelInfo={\r\n          monthlyLoadProfile.diversityFactor\r\n            ? ` ${monthlyLoadProfile.diversityFactor.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"5\"\r\n        labelText=\"Max per metering point:\"\r\n        labelIcon={TrendingUp}\r\n        labelInfo={\"\"}\r\n      >\r\n        {monthlyLoadProfile.loadProfilesMax.map((lpMax) => {\r\n          return (\r\n            <StyledTreeItem\r\n              key={`LM:S${lpMax.meteringPoint}`}\r\n              nodeId={`LM:S${lpMax.meteringPoint}`}\r\n              labelIcon={TrendingUp}\r\n              labelText={`${lpMax.meteringPoint}`}\r\n              labelInfo={` ${\r\n                lpMax.date.getMonth() + 1\r\n              }/${lpMax.date.getDate()}/${lpMax.date.getFullYear()} ${\r\n                lpMax.hour\r\n              }:00 kwdel: ${lpMax.kwdel.toFixed(2)}`}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n      <StyledTreeItem\r\n        nodeId=\"7\"\r\n        labelText=\"Sum per metering point:\"\r\n        labelIcon={Functions}\r\n        labelInfo={\"\"}\r\n      >\r\n        {monthlyLoadProfile.loadProfilesSum.map((lpSum) => {\r\n          return (\r\n            <StyledTreeItem\r\n              key={`LS:S${lpSum.meteringPoint}`}\r\n              nodeId={`LS:S${lpSum.meteringPoint}`}\r\n              labelIcon={Functions}\r\n              labelText={`${lpSum.meteringPoint}`}\r\n              labelInfo={` ${lpSum.kwhdel.toFixed(2)}`}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n  })\r\n);\r\n\r\nexport default DetailsTree;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { TreeItemProps } from \"@material-ui/lab\";\r\nimport { LoadProfile } from \"../../../loadprofile/objects\";\r\nimport React from \"react\";\r\nimport { StyledTreeItem } from \"../../../styled_components\";\r\nimport clsx from \"clsx\";\r\n\r\ntype HourTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  loadProfiles: LoadProfile[];\r\n  totalLoadProfile: LoadProfile;\r\n  dateString?: string;\r\n  hour?: number;\r\n  header?: boolean;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    labelContent: {\r\n      width: \"120px\",\r\n      fontWeight: \"normal\",\r\n      flexGrow: 1,\r\n    },\r\n    labelSmall: {\r\n      width: \"35px\",\r\n    },\r\n    labelHeader: {\r\n      fontWeight: \"bold\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction HourTreeItem(props: HourTreeItemProps) {\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    bgColor,\r\n    loadProfiles,\r\n    dateString = \"\",\r\n    hour = 1,\r\n    header = false,\r\n    totalLoadProfile,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <StyledTreeItem\r\n      nodeId={`${dateString}-${hour}`}\r\n      content={\r\n        header ? (\r\n          <React.Fragment>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={clsx(classes.labelHeader, classes.labelSmall)}\r\n            >\r\n              Hour\r\n            </Typography>\r\n            {loadProfiles.map((loadProfile) => {\r\n              return (\r\n                <Typography\r\n                  key={`HTI: T: M:${loadProfile.meteringPoint}`}\r\n                  variant=\"body2\"\r\n                  className={classes.labelContent}\r\n                >\r\n                  {loadProfile.meteringPoint}\r\n                </Typography>\r\n              );\r\n            })}\r\n            <Typography\r\n              className={classes.labelContent}\r\n              variant=\"caption\"\r\n              color=\"inherit\"\r\n            >\r\n              Total\r\n            </Typography>\r\n            :\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Typography variant=\"body2\" className={classes.labelSmall}>\r\n              {hour}\r\n            </Typography>\r\n            {loadProfiles.map((loadProfile) => {\r\n              return (\r\n                <Typography\r\n                  key={`HTI: T: K:${loadProfile.meteringPoint}`}\r\n                  variant=\"body2\"\r\n                  className={classes.labelContent}\r\n                >\r\n                  {loadProfile\r\n                    .getDailyLoadProfile(dateString)\r\n                    .hourlyLoadProfiles[hour - 1].getTotalKwdel()\r\n                    .toFixed(2)}\r\n                </Typography>\r\n              );\r\n            })}\r\n            <Typography\r\n              className={classes.labelContent}\r\n              variant=\"caption\"\r\n              color=\"inherit\"\r\n            >\r\n              {totalLoadProfile\r\n                .getDailyLoadProfile(dateString)\r\n                .hourlyLoadProfiles[hour - 1].getRawTotal()\r\n                .toFixed(2)}\r\n            </Typography>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default HourTreeItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport { StyledTreeItem } from \"../../../styled_components\";\r\nimport { Today } from \"@material-ui/icons\";\r\nimport { Month } from \"../../../common/object\";\r\nimport HourTreeItem from \"./HourTreeItem\";\r\n\r\ntype DayTreeProps = {\r\n  loadProfiles: LoadProfile[];\r\n  totalLoadProfile: LoadProfile;\r\n  dateString: string;\r\n  nodeId: string;\r\n};\r\n\r\nconst DayTree = (props: DayTreeProps) => {\r\n  const { loadProfiles, dateString, nodeId, totalLoadProfile } = props;\r\n\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    setDate(new Date(dateString));\r\n  }, [dateString]);\r\n\r\n  return (\r\n    <StyledTreeItem\r\n      nodeId={nodeId}\r\n      labelText={`${Month[date.getMonth()]} ${date.getDate()}`}\r\n      labelIcon={Today}\r\n    >\r\n      <HourTreeItem\r\n        nodeId={`DTI:D:${dateString}H`}\r\n        dateString={dateString}\r\n        header={true}\r\n        loadProfiles={loadProfiles}\r\n        totalLoadProfile={totalLoadProfile}\r\n      />\r\n      {[...Array(24).keys()].map((hour) => {\r\n        return (\r\n          <HourTreeItem\r\n            nodeId={`HTI: H:${hour}`}\r\n            key={`HTI: H:${hour}`}\r\n            hour={hour + 1}\r\n            dateString={dateString}\r\n            loadProfiles={loadProfiles}\r\n            totalLoadProfile={totalLoadProfile}\r\n          />\r\n        );\r\n      })}\r\n    </StyledTreeItem>\r\n  );\r\n};\r\n\r\nexport default DayTree;\r\n","import React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport { StyledTreeItem } from \"../../../styled_components\";\r\nimport { ArrowDownward, ArrowRight, CalendarToday } from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { Month } from \"../../../common/object\";\r\nimport DayTreeItem from \"./DayTreeItem\";\r\n\r\ntype MonthlyTreeProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst MonthlyTree = (props: MonthlyTreeProps) => {\r\n  const { monthlyLoadProfile } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={[\"1\"]}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"1\"\r\n        labelText={`${Month[monthlyLoadProfile.billingPeriod.month - 1]} ${\r\n          monthlyLoadProfile.billingPeriod.year\r\n        }`}\r\n        labelIcon={CalendarToday}\r\n      >\r\n        {[...monthlyLoadProfile.dateStrings.values()].map((dateString) => {\r\n          let loadProfiles = [\r\n            ...Array.from(monthlyLoadProfile.loadProfiles.values()),\r\n          ];\r\n          let key = `DTI:D:${dateString}`;\r\n          return (\r\n            <DayTreeItem\r\n              totalLoadProfile={monthlyLoadProfile.totalLoadpRofile}\r\n              key={key}\r\n              nodeId={key}\r\n              loadProfiles={loadProfiles}\r\n              dateString={dateString}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyTree;\r\n","import { MonthlyLoadProfile, DailyLoadProfile } from \"./objects\";\r\nimport XLSX from \"xlsx\";\r\n\r\nfunction generateMonthlyLoadProfileXlsx(\r\n  monthlyLoadProfile: MonthlyLoadProfile\r\n) {\r\n  let workbook = XLSX.utils.book_new();\r\n  let worksheetName = `${monthlyLoadProfile.billingPeriod.toString()}`;\r\n  let worksheetData = generateSheetData(monthlyLoadProfile);\r\n  let worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, worksheetName);\r\n  XLSX.writeFile(\r\n    workbook,\r\n    `Monthly LoadProfile Report of ${monthlyLoadProfile.billingPeriod.toString()}.xlsx`\r\n  );\r\n}\r\n\r\nfunction generateSheetData(monthlyLoadProfile: MonthlyLoadProfile) {\r\n  let data = [];\r\n  let start = monthlyLoadProfile.billingPeriod.startDate;\r\n  let end = monthlyLoadProfile.billingPeriod.enddDate;\r\n  console.log(\r\n    `start date: ${start.toLocaleDateString()} endDate: ${end.toLocaleDateString()}`\r\n  );\r\n\r\n  //---------CREATING HEADERS-------------\r\n\r\n  let header = [\"Date\", \"Hour\"];\r\n  for (let loadProfile of monthlyLoadProfile.loadProfiles.values()) {\r\n    header.push(loadProfile.meteringPoint);\r\n  }\r\n  header.push(\"Total\");\r\n\r\n  //----------CONTENT----------------\r\n  data.push(header);\r\n  while (start <= end) {\r\n    let dateString = `${\r\n      start.getMonth() + 1\r\n    }/${start.getDate()}/${start.getFullYear()}`;\r\n\r\n    for (let hour = 0; hour < 24; hour++) {\r\n      let row: string[] = [];\r\n      row.push(dateString);\r\n\r\n      row.push(hour.toString());\r\n      for (let loadProfile of monthlyLoadProfile.loadProfiles.values()) {\r\n        let dailyLoadProfile =\r\n          loadProfile.dailyLoadProfiles.get(dateString) ||\r\n          new DailyLoadProfile(new Date(dateString));\r\n        row.push(\r\n          dailyLoadProfile.hourlyLoadProfiles[hour].getTotalKwdel().toFixed(2)\r\n        );\r\n      }\r\n\r\n      let dailyLoadProfile =\r\n        monthlyLoadProfile.totalLoadpRofile.dailyLoadProfiles.get(dateString) ||\r\n        new DailyLoadProfile(new Date(dateString));\r\n      row.push(\r\n        dailyLoadProfile.hourlyLoadProfiles[hour].getRawTotal().toFixed(2)\r\n      );\r\n      console.log(row);\r\n      data.push(row);\r\n    }\r\n    start.setDate(start.getDate() + 1);\r\n  }\r\n\r\n  console.log(data);\r\n  return data;\r\n}\r\n\r\nexport default generateMonthlyLoadProfileXlsx;\r\n","import { createStyles, makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { HorizontalTab } from \"../../styled_components\";\r\nimport { MonthlyLoadProfile } from \"../../loadprofile/objects\";\r\nimport MonthlyCard from \"./data/MonthlyCard\";\r\nimport LoadProfileGraph from \"./graph/LoadProfileGraph\";\r\n\r\ntype LoadProfileContentProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nenum DataTab {\r\n  DATA = \"data\",\r\n  GRAPH = \"graph\",\r\n  NONE = \"\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  monthlyLoadpRofile: MonthlyLoadProfile;\r\n  value: string;\r\n  index: string;\r\n  children: any;\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { monthlyLoadpRofile, value, index, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return value === index ? (\r\n    <div className={classes.loadProfileContent_tabPanel}>{children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst LoadProfileContent: React.FunctionComponent<LoadProfileContentProps> = (\r\n  props\r\n) => {\r\n  const { monthlyLoadProfile, index, value } = props;\r\n  const [selectedTab, setSelectedTab] = useState<string>(DataTab.DATA);\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return index === value ? (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          <HorizontalTab label=\"Data\" value={DataTab.DATA} />\r\n          <HorizontalTab label=\"Graph\" value={DataTab.GRAPH} />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel\r\n        index={DataTab.DATA}\r\n        value={selectedTab}\r\n        monthlyLoadpRofile={monthlyLoadProfile}\r\n      >\r\n        <MonthlyCard monthlyLoadProfile={monthlyLoadProfile} />\r\n      </TabPanel>\r\n      <TabPanel\r\n        index={DataTab.GRAPH}\r\n        value={selectedTab}\r\n        monthlyLoadpRofile={monthlyLoadProfile}\r\n      >\r\n        <LoadProfileGraph monthlyLoadProfile={monthlyLoadProfile} />\r\n      </TabPanel>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    loadProfileContent_root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    loadProfileContent_tabPanel: {\r\n      flex: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileContent;\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { GetAppRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\nimport DetailsTree from \"./DetailsTree\";\r\nimport MonthlyTree from \"./MonthlyTree\";\r\nimport generateLoadProfileExcel from \"../../../loadprofile/ExcelGenerator\";\r\n\r\ntype MonthlyCardProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst MonthlyCard: React.FunctionComponent<MonthlyCardProps> = (props) => {\r\n  const { monthlyLoadProfile } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleDownloadClick() {\r\n    generateLoadProfileExcel(monthlyLoadProfile);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.monthlyCard_root}>\r\n      <div className={classes.monthlyCard_paper}>\r\n        <div className={classes.monthlyCard_paperAction}>\r\n          <Button\r\n            onClick={handleDownloadClick}\r\n            className={classes.downloadBtn}\r\n            size=\"small\"\r\n            startIcon={<GetAppRounded />}\r\n          >\r\n            download\r\n          </Button>\r\n        </div>\r\n        <div className={classes.monthlyCard_paperContent}>\r\n          <MonthlyTree monthlyLoadProfile={monthlyLoadProfile} />\r\n          <DetailsTree monthlyLoadProfile={monthlyLoadProfile} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    monthlyCard_root: {\r\n      display: \"inline-flex\",\r\n      boxSizing: \"border-box\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    monthlyCard_paper: {\r\n      flexGrow: 0,\r\n      flexShrink: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      boxSizing: \"border-box\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    monthlyCard_paperAction: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    monthlyCard_paperContent: {\r\n      display: \"flex\",\r\n      flexShrink: 0,\r\n    },\r\n    downloadBtn: {\r\n      fontSize: \"14px\",\r\n      textTransform: \"none\",\r\n      fontWeight: \"lighter\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyCard;\r\n","import { ArgumentScale, Stack } from \"@devexpress/dx-react-chart\";\r\nimport { scaleBand } from \"@devexpress/dx-chart-core\";\r\nimport {\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Chart,\r\n  LineSeries,\r\n  Legend,\r\n  Title,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\n\r\nimport { createStyles, makeStyles, Paper, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\ntype LoadProfileGraphProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst LoadProfileGraph: React.FunctionComponent<LoadProfileGraphProps> = (\r\n  props\r\n) => {\r\n  const { monthlyLoadProfile, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.graphContent}>\r\n      <Chart data={[...monthlyLoadProfile.chartData.values()]}>\r\n        <ArgumentScale factory={scaleBand} />\r\n        <ArgumentAxis showGrid />\r\n        <ValueAxis showGrid />\r\n        {[...monthlyLoadProfile.loadProfiles.values()].map((data) => {\r\n          return (\r\n            <LineSeries\r\n              valueField={data.meteringPoint}\r\n              argumentField=\"date\"\r\n              name={data.meteringPoint}\r\n            />\r\n          );\r\n        })}\r\n        <Stack />\r\n        <Legend />\r\n        <Title\r\n          text={`Billing Period: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    graphContent: {\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileGraph;\r\n","import { createStyles, makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { HorizontalTab } from \"../../styled_components\";\r\nimport FeederAndDemand from \"../../feeder_and_demand/objects/FeederAndDemand\";\r\nimport MonthlyFeederCard from \"./data/MonthlyFeederCard\";\r\n\r\ntype FeederAndDemandContentProps = {\r\n  feederAndDemand: FeederAndDemand;\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nenum DataTab {\r\n  DATA = \"data\",\r\n  GRAPH = \"graph\",\r\n  NONE = \"\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  value: string;\r\n  index: string;\r\n  children: any;\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { value, index, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return value === index ? (\r\n    <div className={classes.loadProfileContent_tabPanel}>{children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst FeederAndDemandContent: React.FunctionComponent<FeederAndDemandContentProps> = (\r\n  props\r\n) => {\r\n  const { feederAndDemand, index, value } = props;\r\n  const [selectedTab, setSelectedTab] = useState<string>(DataTab.DATA);\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return index === value ? (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          <HorizontalTab label=\"Data\" value={DataTab.DATA} />\r\n          <HorizontalTab label=\"Graph\" value={DataTab.GRAPH} />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel index={DataTab.DATA} value={selectedTab}>\r\n        <MonthlyFeederCard feederAndDemand={feederAndDemand} />\r\n      </TabPanel>\r\n      {/* <TabPanel index={DataTab.GRAPH} value={selectedTab}></TabPanel> */}\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    loadProfileContent_root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    loadProfileContent_tabPanel: {\r\n      flex: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default FeederAndDemandContent;\r\n","import { makeStyles, Tabs, Theme, Typography } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useContext, useState } from \"react\";\r\nimport { HorizontalTab } from \"../../styled_components\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport LoadProfileContent from \"./LoadProfileContent\";\r\n\r\ntype LoadProfileContentProps = {};\r\n\r\nconst LoadProfileTabPanel: React.FunctionComponent<LoadProfileContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"\");\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n  return (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div className={classes.loadProfileContent_Header}>\r\n        <Typography className={classes.loadProfileContent_Title} variant=\"h5\">\r\n          Load Profile\r\n        </Typography>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          {[...loadProfileContext.monthlyLoadProfiles.values()].map(\r\n            (monthlyLoadProfile) => {\r\n              return (\r\n                <HorizontalTab\r\n                  label={monthlyLoadProfile.billingPeriod.toString()}\r\n                  value={monthlyLoadProfile.billingPeriod.toString()}\r\n                  key={`T: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.loadProfileContent_contentWrapper}>\r\n        <div className={classes.loadProfileContent_content}>\r\n          {[...loadProfileContext.monthlyLoadProfiles.values()].map(\r\n            (monthlyLoadProfile) => {\r\n              return (\r\n                <LoadProfileContent\r\n                  key={`C: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n                  monthlyLoadProfile={monthlyLoadProfile}\r\n                  value={selectedTab}\r\n                  index={monthlyLoadProfile.billingPeriod.toString()}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadProfileContent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"0px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  loadProfileContent_Header: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  loadProfileContent_Title: {\r\n    marginRight: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: \"center\",\r\n  },\r\n  loadProfileContent_contentWrapper: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  loadProfileContent_content: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default LoadProfileTabPanel;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Typography,\r\n  SvgIconProps,\r\n} from \"@material-ui/core\";\r\nimport { Place } from \"@material-ui/icons\";\r\nimport { TreeItemProps } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport { FeederAndDemandItem } from \"../../../feeder_and_demand/objects\";\r\nimport { StyledTreeItem } from \"../../../styled_components\";\r\n\r\ntype FederTreeitemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  feederAndDemandItem: FeederAndDemandItem;\r\n  nodeId: string;\r\n  header?: boolean;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    labelContent: {\r\n      width: \"120px\",\r\n      fontWeight: \"normal\",\r\n      flexGrow: 1,\r\n    },\r\n    feeder: {\r\n      width: \"200px\",\r\n    },\r\n    numbers: {\r\n      width: \"130px\",\r\n      maxWidth: \"130px\",\r\n    },\r\n    percent: {\r\n      width: \"90px\",\r\n      maxWidth: \"90px\",\r\n    },\r\n  })\r\n);\r\n\r\nconst FederTreeitem: React.FunctionComponent<FederTreeitemProps> = (\r\n  props: FederTreeitemProps\r\n) => {\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    bgColor,\r\n    header = false,\r\n    feederAndDemandItem,\r\n    nodeId,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <StyledTreeItem\r\n      nodeId={nodeId}\r\n      content={\r\n        header ? (\r\n          <React.Fragment>\r\n            <Typography classes={{ root: classes.feeder }} variant=\"body2\">\r\n              Feeder\r\n            </Typography>\r\n\r\n            <Typography\r\n              classes={{ root: classes.numbers }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              Feeder Input Energy (KWHR)\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.numbers }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              Demand (KW)\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.percent }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              Minutes\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.numbers }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              Hours\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.numbers }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              Operating Hours\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.percent }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              Power Factor\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.percent }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              Load Factor\r\n            </Typography>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Typography classes={{ root: classes.feeder }} variant=\"body2\">\r\n              {feederAndDemandItem.feeder}\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.numbers }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              {feederAndDemandItem.feederInput.toFixed(2)}\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.numbers }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              {feederAndDemandItem.demand.toFixed(2)}\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.percent }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              {feederAndDemandItem.totalMinutes}\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.numbers }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              {feederAndDemandItem.totalHours.toFixed(2)}\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.numbers }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              {feederAndDemandItem.operatingHours.toFixed(2)}\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.percent }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              {feederAndDemandItem.powerFactor.toFixed(2)}\r\n            </Typography>\r\n            <Typography\r\n              classes={{ root: classes.percent }}\r\n              variant=\"body2\"\r\n              className={classes.labelContent}\r\n            >\r\n              {feederAndDemandItem.loadFactor.toFixed(2)}\r\n            </Typography>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default FederTreeitem;\r\n","import React from \"react\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport { ArrowDownward, ArrowRight, Place, Title } from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nimport FeederTreeItem from \"./FeederTreeItem\";\r\nimport {\r\n  FeederAndDemandItem,\r\n  FeederAndDemand,\r\n} from \"../../../feeder_and_demand/objects/\";\r\nimport { Feeder } from \"../../../common/object\";\r\n\r\ntype MonthlyFeederTreeProps = {\r\n  feederAndDemand: FeederAndDemand;\r\n};\r\n\r\nconst MonthlyFeederTree = (props: MonthlyFeederTreeProps) => {\r\n  const { feederAndDemand } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      <FeederTreeItem\r\n        feederAndDemandItem={new FeederAndDemandItem(Feeder.ACLEM, 0)}\r\n        nodeId={\"header\"}\r\n        header={true}\r\n      />\r\n      {[...feederAndDemand.items.values()].map((item) => {\r\n        let key = `FTI:F:${item.feeder}`;\r\n        return (\r\n          <FeederTreeItem feederAndDemandItem={item} key={key} nodeId={key} />\r\n        );\r\n      })}\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyFeederTree;\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { GetAppRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport FeederAndDemand from \"../../../feeder_and_demand/objects/FeederAndDemand\";\r\nimport MonthlyTree from \"./MonthlyFeederTree\";\r\nimport FeederAndDemandUtil from \"../../../feeder_and_demand/FeederAndDemandUtil\";\r\n\r\ntype MonthlyFeederCardProps = {\r\n  feederAndDemand: FeederAndDemand;\r\n};\r\n\r\nconst MonthlyFeederCard: React.FunctionComponent<MonthlyFeederCardProps> = (\r\n  props\r\n) => {\r\n  const { feederAndDemand } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleDownloadClick() {\r\n    FeederAndDemandUtil.generateExcelFile(feederAndDemand);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.monthlyCard_root}>\r\n      <div className={classes.monthlyCard_paper}>\r\n        <div className={classes.monthlyCard_paperAction}>\r\n          <Button\r\n            className={classes.downloadBtn}\r\n            size=\"small\"\r\n            startIcon={<GetAppRounded />}\r\n            onClick={handleDownloadClick}\r\n          >\r\n            download\r\n          </Button>\r\n        </div>\r\n        <div className={classes.monthlyCard_paperContent}>\r\n          <MonthlyTree feederAndDemand={feederAndDemand} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    monthlyCard_root: {\r\n      display: \"inline-flex\",\r\n      boxSizing: \"border-box\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    monthlyCard_paper: {\r\n      flexGrow: 0,\r\n      flexShrink: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      boxSizing: \"border-box\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    monthlyCard_paperAction: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    monthlyCard_paperContent: {\r\n      display: \"flex\",\r\n      flexShrink: 0,\r\n    },\r\n    downloadBtn: {\r\n      fontSize: \"14px\",\r\n      textTransform: \"none\",\r\n      fontWeight: \"lighter\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyFeederCard;\r\n","import { createStyles, makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { HorizontalTab } from \"../../styled_components\";\r\nimport { PowerTransformerLoss } from \"../../power_transformer_loss/objects\";\r\nimport MonthlyPowerTransformerLossCard from \"./data/MonthlyPowerTransformerLossCard\";\r\n\r\ntype PowerTransformerLossContentProps = {\r\n  powerTransformerLoss: PowerTransformerLoss;\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nenum DataTab {\r\n  DATA = \"data\",\r\n  GRAPH = \"graph\",\r\n  NONE = \"\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  value: string;\r\n  index: string;\r\n  children: any;\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { value, index, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return value === index ? (\r\n    <div className={classes.loadProfileContent_tabPanel}>{children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst PowerTransformerLossContent: React.FunctionComponent<PowerTransformerLossContentProps> = (\r\n  props\r\n) => {\r\n  const { powerTransformerLoss, index, value } = props;\r\n  const [selectedTab, setSelectedTab] = useState<string>(DataTab.DATA);\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return index === value ? (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          <HorizontalTab label=\"Data\" value={DataTab.DATA} />\r\n          <HorizontalTab label=\"Graph\" value={DataTab.GRAPH} />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel index={DataTab.DATA} value={selectedTab}>\r\n        <MonthlyPowerTransformerLossCard\r\n          powerTransformerLoss={powerTransformerLoss}\r\n        />\r\n      </TabPanel>\r\n      {/* <TabPanel index={DataTab.GRAPH} value={selectedTab}></TabPanel> */}\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    loadProfileContent_root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    loadProfileContent_tabPanel: {\r\n      flex: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default PowerTransformerLossContent;\r\n","import { makeStyles, Tabs, Theme, Typography } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useContext, useState } from \"react\";\r\nimport { HorizontalTab } from \"../../styled_components\";\r\nimport { FeederAndDemandContext } from \"../../feeder_and_demand/FeederAndDemandContextProvider\";\r\nimport FeederAndDemandContent from \"./FeederAndDemandContent\";\r\n\r\ntype FeederAndDemandContentRootProps = {};\r\n\r\nconst FeederAndDemandContentRoot: React.FunctionComponent<FeederAndDemandContentRootProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"\");\r\n  const feederAndDemandContext = useContext(FeederAndDemandContext);\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n  return (\r\n    <div className={classes.feederAndDemandContent_root}>\r\n      <div className={classes.feederAndDemand_header}>\r\n        <Typography className={classes.feederAndDemand_title} variant=\"h5\">\r\n          Feeder Demand and Outages :D\r\n        </Typography>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          {[\r\n            ...feederAndDemandContext.monthlyFeederAndDemand.feederAndDemands.values(),\r\n          ].map((feederAndDemands) => {\r\n            return (\r\n              <HorizontalTab\r\n                label={feederAndDemands.billingPeriod.toString()}\r\n                value={feederAndDemands.billingPeriod.toString()}\r\n                key={`T: ${feederAndDemands.billingPeriod.toString()}`}\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.feederAndDemand_contentContainer}>\r\n        <div className={classes.feederAndDemandContent}>\r\n          {[\r\n            ...feederAndDemandContext.monthlyFeederAndDemand.feederAndDemands.values(),\r\n          ].map((feederAndDemand) => {\r\n            return (\r\n              <FeederAndDemandContent\r\n                key={`FDC:BP:${feederAndDemand.billingPeriod.toString()}`}\r\n                feederAndDemand={feederAndDemand}\r\n                value={selectedTab}\r\n                index={feederAndDemand.billingPeriod.toString()}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  feederAndDemandContent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"0px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  feederAndDemand_header: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  feederAndDemand_title: {\r\n    marginRight: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: \"center\",\r\n  },\r\n  feederAndDemand_contentContainer: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  feederAndDemandContent: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default FeederAndDemandContentRoot;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Typography,\r\n  SvgIconProps,\r\n} from \"@material-ui/core\";\r\nimport transitions from \"@material-ui/core/styles/transitions\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport clsx from \"clsx\";\r\nimport React, {\r\n  ChangeEvent,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  FormEvent,\r\n} from \"react\";\r\nimport { BillingPeriod, Substation } from \"../../../common/object\";\r\nimport { PowerTransformerLossItem } from \"../../../power_transformer_loss/objects\";\r\nimport { PowerTransformerLossContext } from \"../../../power_transformer_loss/PowerTransformerLossContextProvider\";\r\nimport { StyledTreeItem } from \"../../../styled_components\";\r\n\r\ntype PowerTransformerLossItemTreeProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  powerTransformerLossItem?: PowerTransformerLossItem;\r\n  billingPeriod: BillingPeriod;\r\n  substation: Substation;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n};\r\n\r\nconst PowerTransformerLossItemTree: React.FunctionComponent<PowerTransformerLossItemTreeProps> = (\r\n  props\r\n) => {\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    bgColor,\r\n    powerTransformerLossItem,\r\n    substation,\r\n    labelIcon: LabelIcon,\r\n    billingPeriod,\r\n    nodeId,\r\n    ...other\r\n  } = props;\r\n  const powerTransformerLossContext = useContext(PowerTransformerLossContext);\r\n  const [demand, setDemand] = useState(\"0\");\r\n  const [demandError, setDemmandError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (powerTransformerLossItem) {\r\n      setDemand(powerTransformerLossItem.demandMW.toString());\r\n    }\r\n  }, []);\r\n\r\n  function handleDemandChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    if (Number(event.target.value)) {\r\n      setDemmandError(false);\r\n    } else {\r\n      setDemmandError(true);\r\n    }\r\n    setDemand(event.target.value);\r\n  }\r\n\r\n  function handleDemandSubmit(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    if (!demandError && powerTransformerLossItem) {\r\n      let newItem = new PowerTransformerLossItem(\r\n        powerTransformerLossItem.substationItem,\r\n        0,\r\n        powerTransformerLossItem\r\n      );\r\n      newItem.demandMW = Number(demand);\r\n      console.log({ newItem });\r\n      powerTransformerLossContext.onPowerTransformerLossItemChanged(\r\n        newItem,\r\n        billingPeriod\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledTreeItem\r\n      nodeId={nodeId}\r\n      bold={!powerTransformerLossItem}\r\n      content={\r\n        !powerTransformerLossItem ? (\r\n          <React.Fragment>\r\n            <Typography classes={{ root: classes.feeder }} variant=\"body2\">\r\n              Substation\r\n            </Typography>\r\n\r\n            <Typography classes={{ root: classes.feeder }} variant=\"body2\">\r\n              Transformer\r\n            </Typography>\r\n            <Typography classes={{ root: classes.numbers }} variant=\"body2\">\r\n              Energy (MWHR)\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              Demand (MW)\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              Power Factor\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              Load (MVA)\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              Percent Loading\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              Operation Hours\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              Ave. Load (MW)\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              Load Factor\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              Loss Factor\r\n            </Typography>\r\n            <Typography classes={{ root: classes.numbers }} variant=\"body2\">\r\n              Core Loss\r\n            </Typography>\r\n            <Typography classes={{ root: classes.numbers }} variant=\"body2\">\r\n              Winding Loss\r\n            </Typography>\r\n            <Typography classes={{ root: classes.numbers }} variant=\"body2\">\r\n              Auxiliary Loss\r\n            </Typography>\r\n            <Typography classes={{ root: classes.numbers }} variant=\"body2\">\r\n              Total Losses\r\n            </Typography>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Typography classes={{ root: classes.feeder }} variant=\"body2\">\r\n              {substation.text}\r\n            </Typography>\r\n\r\n            <Typography classes={{ root: classes.feeder }} variant=\"body2\">\r\n              {powerTransformerLossItem.substationItem.transformer.text}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.numbers }} variant=\"body2\">\r\n              {powerTransformerLossItem.energMwhr.toFixed(2)}\r\n            </Typography>\r\n            <form className={classes.percent} onSubmit={handleDemandSubmit}>\r\n              <input\r\n                value={demand}\r\n                className={clsx(classes.inputField, {\r\n                  [classes.errorField]: demandError,\r\n                })}\r\n                onChange={handleDemandChange}\r\n              />\r\n            </form>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              {powerTransformerLossItem.powerFactor.toFixed(2)}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              {powerTransformerLossItem.loadMVA.toFixed(2)}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              {powerTransformerLossItem.percentLoading.toFixed(2)}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              {powerTransformerLossItem.operationHours}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              {powerTransformerLossItem.averageLoad.toFixed(2)}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              {powerTransformerLossItem.loadFactor.toFixed(2)}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.percent }} variant=\"body2\">\r\n              {powerTransformerLossItem.lossFactor.toFixed(2)}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.numbers }} variant=\"body2\">\r\n              {powerTransformerLossItem.coreLoss.toFixed(2)}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.numbers }} variant=\"body2\">\r\n              {powerTransformerLossItem.windingLoss.toFixed(2)}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.numbers }} variant=\"body2\">\r\n              {powerTransformerLossItem.auxiliaryLoss.toFixed(2)}\r\n            </Typography>\r\n            <Typography classes={{ root: classes.numbers }} variant=\"body2\">\r\n              {powerTransformerLossItem.totalLosses.toFixed(2)}\r\n            </Typography>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    feeder: {\r\n      width: \"200px\",\r\n      fontWeight: \"inherit\",\r\n    },\r\n    numbers: {\r\n      width: \"130px\",\r\n      maxWidth: \"130px\",\r\n      fontWeight: \"inherit\",\r\n    },\r\n    percent: {\r\n      width: \"90px\",\r\n      maxWidth: \"90px\",\r\n      fontWeight: \"inherit\",\r\n    },\r\n    inputField: {\r\n      width: \"100%\",\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      borderRadius: theme.shape.borderRadius,\r\n      outline: \"none\",\r\n      color: theme.palette.text.primary,\r\n      transition: theme.transitions.create(\"borderColor\", {\r\n        duration: theme.transitions.duration.standard,\r\n        easing: transitions.easing.easeInOut,\r\n      }),\r\n      \"&:focus, &:hover\": {\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n    errorField: {\r\n      borderColor: theme.palette.error.main,\r\n      \"&:focus, &:hover\": {\r\n        borderColor: theme.palette.error.main,\r\n      },\r\n      color: theme.palette.error.main,\r\n    },\r\n  })\r\n);\r\n\r\nexport default PowerTransformerLossItemTree;\r\n","import React from \"react\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport { StyledTreeItem } from \"../../../styled_components\";\r\nimport {\r\n  ArrowDownward,\r\n  ArrowRight,\r\n  Place,\r\n  PlaceOutlined,\r\n  Title,\r\n} from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { PowerTransformerLossSubstation } from \"../../../power_transformer_loss/objects\";\r\nimport PowerTransformerLossItemTree from \"./PowerTransformerLossItemTree\";\r\nimport { BillingPeriod } from \"../../../common/object\";\r\n\r\ntype PowerTransformerLossSubstationTreeProps = {\r\n  powerTransformerLossSubstation: PowerTransformerLossSubstation;\r\n  billingPeriod: BillingPeriod;\r\n};\r\n\r\nconst PowerTransformerLossSubstationTree = (\r\n  props: PowerTransformerLossSubstationTreeProps\r\n) => {\r\n  const { powerTransformerLossSubstation, billingPeriod } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId={powerTransformerLossSubstation.substation.key}\r\n        labelText={powerTransformerLossSubstation.substation.text}\r\n        labelIcon={Place}\r\n      >\r\n        <PowerTransformerLossItemTree\r\n          labelIcon={Title}\r\n          substation={powerTransformerLossSubstation.substation}\r\n          nodeId=\"header\"\r\n          billingPeriod={billingPeriod}\r\n        />\r\n        {[...powerTransformerLossSubstation.substationItems.values()].map(\r\n          (substationItem) => {\r\n            let key = `PFTS:H:${substationItem.substationItem.toString()}`;\r\n            return (\r\n              <PowerTransformerLossItemTree\r\n                labelIcon={PlaceOutlined}\r\n                powerTransformerLossItem={substationItem}\r\n                substation={powerTransformerLossSubstation.substation}\r\n                key={key}\r\n                nodeId={key}\r\n                billingPeriod={billingPeriod}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default PowerTransformerLossSubstationTree;\r\n","import React from \"react\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport { ArrowDownward, ArrowRight } from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { PowerTransformerLoss } from \"../../../power_transformer_loss/objects\";\r\nimport PowerTransformerLossSubstationTree from \"./PowerTransformerLossSubstationTree\";\r\n\r\ntype MonthlyPowerTransformerLossTreeProps = {\r\n  powerTransformerLoss: PowerTransformerLoss;\r\n};\r\n\r\nconst MonthlyPowerTransformerLossTree = (\r\n  props: MonthlyPowerTransformerLossTreeProps\r\n) => {\r\n  const { powerTransformerLoss } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      {[...powerTransformerLoss.items.values()].map((item) => {\r\n        let key = `PFT:F:${item.substation.key}`;\r\n        return (\r\n          <PowerTransformerLossSubstationTree\r\n            powerTransformerLossSubstation={item}\r\n            billingPeriod={powerTransformerLoss.billingPeriod}\r\n            key={key}\r\n          />\r\n        );\r\n      })}\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyPowerTransformerLossTree;\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { GetAppRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { PowerTransformerLoss } from \"../../../power_transformer_loss/objects\";\r\nimport MonthlyPowerTransformerLossTree from \"./MonthlyPowerTransformerLossTree\";\r\nimport PowerTransformerLossUtil from \"../../../power_transformer_loss/PowerTransformerLossUtil\";\r\n\r\ntype MonthlyPoowerTransformerLossCard = {\r\n  powerTransformerLoss: PowerTransformerLoss;\r\n};\r\n\r\nconst MonthlyPowerTransformerLossCard: React.FunctionComponent<MonthlyPoowerTransformerLossCard> = (\r\n  props\r\n) => {\r\n  const { powerTransformerLoss } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleDownloadClick() {\r\n    PowerTransformerLossUtil.generateExcelFile(powerTransformerLoss);\r\n  }\r\n  return (\r\n    <div className={classes.monthlyCard_root}>\r\n      <div className={classes.monthlyCard_paper}>\r\n        <div className={classes.monthlyCard_paperAction}>\r\n          <Button\r\n            className={classes.downloadBtn}\r\n            size=\"small\"\r\n            startIcon={<GetAppRounded />}\r\n            onClick={handleDownloadClick}\r\n          >\r\n            download\r\n          </Button>\r\n        </div>\r\n        <div className={classes.monthlyCard_paperContent}>\r\n          <MonthlyPowerTransformerLossTree\r\n            powerTransformerLoss={powerTransformerLoss}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    monthlyCard_root: {\r\n      display: \"inline-flex\",\r\n      boxSizing: \"border-box\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    monthlyCard_paper: {\r\n      flexGrow: 0,\r\n      flexShrink: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      boxSizing: \"border-box\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    monthlyCard_paperAction: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    monthlyCard_paperContent: {\r\n      display: \"flex\",\r\n      flexShrink: 0,\r\n    },\r\n    downloadBtn: {\r\n      fontSize: \"14px\",\r\n      textTransform: \"none\",\r\n      fontWeight: \"lighter\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyPowerTransformerLossCard;\r\n","import { makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { VerticalTab } from \"../styled_components\";\r\nimport LoadProfileTabPanel from \"./loadprofile/LoadProfileTabPanel\";\r\nimport FeederAndDemandContentRoot from \"./feeder_demand/FeederAndDemandContentRoot\";\r\nimport PowerTransformerLossContentRoot from \"./power_transformer_loss/PowerTransformerLossContentRoot\";\r\ntype MainContentProps = {};\r\n\r\nenum ContentTabs {\r\n  LOAD_PROFILE = \"lp\",\r\n  SUBSTATION_LOSS = \"ssl\",\r\n  FEEDERDEMAND_OUTAGED = \"fdo\",\r\n  POWER_BILL = \"pbl\",\r\n  POWER_TRANSFORMER_LOSS = \"pts\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nconst TabPanel: React.FunctionComponent<TabPanelProps> = (props) => {\r\n  const { value, index, ...others } = props;\r\n  const classes = useStyles();\r\n  return value === index ? (\r\n    <div className={classes.mainContent_content}>{props.children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst MainContent: React.FunctionComponent<MainContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\r\n    ContentTabs.LOAD_PROFILE\r\n  );\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.maincontent_root}>\r\n      <div className={classes.tabs_container}>\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={selectedTab}\r\n          centered={false}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n        >\r\n          <VerticalTab label=\"Load Profile\" value={ContentTabs.LOAD_PROFILE} />\r\n          <VerticalTab label=\"Power Bill\" value={ContentTabs.POWER_BILL} />\r\n          <VerticalTab\r\n            label=\"Feeder Demand and Outages\"\r\n            value={ContentTabs.FEEDERDEMAND_OUTAGED}\r\n          />\r\n          <VerticalTab\r\n            label=\"Substation Loss\"\r\n            value={ContentTabs.SUBSTATION_LOSS}\r\n          />\r\n          <VerticalTab\r\n            label=\"Power Transformer Loss\"\r\n            value={ContentTabs.POWER_TRANSFORMER_LOSS}\r\n          />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel value={selectedTab} index={ContentTabs.LOAD_PROFILE}>\r\n        <LoadProfileTabPanel />\r\n      </TabPanel>\r\n      <TabPanel value={selectedTab} index={ContentTabs.FEEDERDEMAND_OUTAGED}>\r\n        <FeederAndDemandContentRoot />\r\n      </TabPanel>\r\n      <TabPanel value={selectedTab} index={ContentTabs.POWER_TRANSFORMER_LOSS}>\r\n        <PowerTransformerLossContentRoot />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  maincontent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  tabs_container: {\r\n    marginTop: theme.spacing(12),\r\n    maxWidth: \"300px\",\r\n    flexGrow: 0,\r\n  },\r\n  tabs: {\r\n    display: \"inline-block\",\r\n  },\r\n  mainContent_content: {\r\n    flex: 1,\r\n    width: 0,\r\n  },\r\n}));\r\n\r\nexport default MainContent;\r\n","import { makeStyles, Tabs, Theme, Typography } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useContext, useState } from \"react\";\r\nimport { HorizontalTab } from \"../../styled_components\";\r\nimport { PowerTransformerLossContext } from \"../../power_transformer_loss/PowerTransformerLossContextProvider\";\r\nimport PowerTransformerLossContent from \"./PowerTransformerLossContent\";\r\n\r\ntype PowerTransformerLossRootProps = {};\r\n\r\nconst PowerTransformerLossContentRoot: React.FunctionComponent<PowerTransformerLossRootProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"\");\r\n  const powerTransformerLossContext = useContext(PowerTransformerLossContext);\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n  return (\r\n    <div className={classes.feederAndDemandContent_root}>\r\n      <div className={classes.feederAndDemand_header}>\r\n        <Typography className={classes.feederAndDemand_title} variant=\"h5\">\r\n          Power Transformer Loss\r\n        </Typography>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          {[\r\n            ...powerTransformerLossContext.monthlyPowerTransformerLoss.powerTransformerLosses.values(),\r\n          ].map((powerTransformerLoss) => {\r\n            return (\r\n              <HorizontalTab\r\n                label={powerTransformerLoss.billingPeriod.toString()}\r\n                value={powerTransformerLoss.billingPeriod.toString()}\r\n                key={`T: ${powerTransformerLoss.billingPeriod.toString()}`}\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.feederAndDemand_contentContainer}>\r\n        <div className={classes.feederAndDemandContent}>\r\n          {[\r\n            ...powerTransformerLossContext.monthlyPowerTransformerLoss.powerTransformerLosses.values(),\r\n          ].map((powerTransformerLoss) => {\r\n            return (\r\n              <PowerTransformerLossContent\r\n                key={`FDC:BP:${powerTransformerLoss.billingPeriod.toString()}`}\r\n                powerTransformerLoss={powerTransformerLoss}\r\n                value={selectedTab}\r\n                index={powerTransformerLoss.billingPeriod.toString()}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  feederAndDemandContent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"0px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  feederAndDemand_header: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  feederAndDemand_title: {\r\n    marginRight: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: \"center\",\r\n  },\r\n  feederAndDemand_contentContainer: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  feederAndDemandContent: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default PowerTransformerLossContentRoot;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Toolbar from \"../toolbar\";\r\nimport FilesDrawer, { useStyles as filesDrawerStyles } from \"../filesdrawer\";\r\nimport clsx from \"clsx\";\r\nimport Settings from \"../settings\";\r\nimport { MainContent } from \"../maincontent\";\r\nimport { makeStyles, Theme } from \"@material-ui/core\";\r\ntype DashboardProps = {};\r\n\r\nconst Dashboard: React.FC<DashboardProps> = (props) => {\r\n  const classes = useStyles();\r\n  const filesDrawerClasses = filesDrawerStyles();\r\n\r\n  const [openFilesDrawer, setOpenFilesDrawer] = useState<boolean>(true);\r\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\r\n\r\n  function handleSettingsToggle() {\r\n    setOpenSettings(true);\r\n  }\r\n\r\n  function handleSettingsUntoggle() {\r\n    setOpenSettings(false);\r\n  }\r\n\r\n  function handleFilesToggle() {\r\n    setOpenFilesDrawer(true);\r\n  }\r\n\r\n  function handleFilesUntoggle() {\r\n    setOpenFilesDrawer(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dashboard_root}>\r\n      <Toolbar\r\n        onSettingsToggled={handleSettingsToggle}\r\n        onSettingsUntoggled={handleSettingsUntoggle}\r\n        onFilesToggled={handleFilesToggle}\r\n        onFilesUntoggled={handleFilesUntoggle}\r\n      />\r\n      <FilesDrawer open={openFilesDrawer} />\r\n      <div\r\n        className={clsx(classes.dashboard_content, filesDrawerClasses.content, {\r\n          [filesDrawerClasses.contentShift]: openFilesDrawer,\r\n        })}\r\n      >\r\n        {openSettings && <Settings />}\r\n        <MainContent />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dashboard_root: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n  },\r\n  dashboard_content: {\r\n    flex: 1,\r\n    position: \"relative\",\r\n    minHeight: \"0px\",\r\n    width: 0,\r\n  },\r\n}));\r\n\r\nexport default Dashboard;\r\n","import Dashboard from \"./Dashboard\";\r\n\r\nexport default Dashboard;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  ThemeProvider,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport LoadProfileContextProvider from \"./loadprofile/LoadProfileContextProvider\";\r\nimport Dashboard from \"./dashboard\";\r\nimport clsx from \"clsx\";\r\nimport FeederAndDemandContextProvider from \"./feeder_and_demand/FeederAndDemandContextProvider\";\r\nimport PowerTransformerLossContextProvider from \"./power_transformer_loss/PowerTransformerLossContextProvider\";\r\n\r\ntype AppProps = {};\r\n\r\nconst App: FunctionComponent<AppProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <LoadProfileContextProvider>\r\n          <FeederAndDemandContextProvider>\r\n            <PowerTransformerLossContextProvider>\r\n              <div className={clsx(classes.root)}>\r\n                <Dashboard />\r\n              </div>\r\n            </PowerTransformerLossContextProvider>\r\n          </FeederAndDemandContextProvider>\r\n        </LoadProfileContextProvider>\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n}));\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Fragment>\n      <App />\n    </React.Fragment>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}