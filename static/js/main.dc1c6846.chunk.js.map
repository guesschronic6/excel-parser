{"version":3,"sources":["components/loadprofile/enums/Feeder.ts","components/theme.ts","components/loadprofile/objects/HourlyLoadProfile.ts","components/loadprofile/objects/DailyLoadProfile.ts","components/common/BillingPeriod.ts","components/loadprofile/objects/LoadProfile_Raw.ts","components/loadprofile/objects/LoadProfile.ts","components/loadprofile/enums/Transformer.ts","components/loadprofile/enums/Substation.ts","components/loadprofile/enums/MeteringPoints.ts","components/toolbar/Toolbar.tsx","components/loadprofile/objects/MonthlyLoadProfile.ts","components/common/Stack.ts","components/loadprofile/LoadProfileContextProvider.tsx","components/toolbar/StyledToggleButton.tsx","components/toolbar/use-styles.ts","components/loadprofile/LoadProfileStorage.ts","components/toolbar/index.ts","components/filesdrawer/use-styles.ts","components/filesdrawer/CustomAccordion.tsx","components/filesdrawer/FileCard.tsx","components/errors/InvalidFileError.ts","components/common/utils/FileUtil.ts","components/loadprofile/ExcelParser.ts","components/settings/Settings.tsx","components/loadprofile/LoadProfileParser.tsx","components/filesdrawer/FileDrop.tsx","components/filesdrawer/loadprofile/LoadProfileAccordion.tsx","components/filesdrawer/index.ts","components/filesdrawer/FilesDrawer.tsx","components/settings/use-styles.ts","components/common/components/textfields/FormTextField.tsx","components/settings/tabpanels/lp-styles.ts","components/settings/tabpanels/LoadProfileSettingsPanel.tsx","components/common/components/tabs/VerticalTab.tsx","components/common/components/tabs/HorizontalTab.tsx","components/settings/index.ts","components/maincontent/loadprofile/data/useTreeItemStyles.ts","components/maincontent/loadprofile/data/StyledTreeItem.tsx","components/enums/Month.ts","components/maincontent/loadprofile/data/DetailsTree.tsx","components/maincontent/loadprofile/data/HourTreeItem.tsx","components/maincontent/loadprofile/LoadProfileContent.tsx","components/maincontent/loadprofile/data/DayTreeItem.tsx","components/maincontent/loadprofile/data/MonthlyTree.tsx","components/maincontent/loadprofile/data/MonthlyCard.tsx","components/maincontent/loadprofile/data/DataContent.tsx","components/maincontent/MainContent.tsx","components/dashboard/Dashboard.tsx","components/dashboard/index.ts","components/App.tsx","components/index.ts","index.js"],"names":["Feeder","theme","createMuiTheme","palette","primary","main","dark","contrastText","secondary","text","background","default","HourlyLoadProfile","hour","kwdelSet","this","kwdel","fileName","push","filter","length","total","DailyLoadProfile","date","hourlyLoadProfiles","buildHourlyLoadProfiles","Array","keys","map","rawData","addKwdel","forEach","hourloadProfile","removeKwdel","maxKwdel","sum","hourlyLoadProfile","getTotalKwdel","max","meteringPoint","Date","BillingPeriod","month","year","startDate","enddDate","getStartDate","getEndDate","startMonth","startYear","moment","toDate","billingPeriod","LoadProfile_Raw","day","minute","row","setDate","getDate","getMonth","getFullYear","billingMonth","getBillingMonth","LoadProfile","dailyLoadProfiles","Map","dateString","has","set","get","addLoadProfileData","dailyLoadProfile","removeLoadProfileData","maxHour","maxDate","values","getMaxAndSum","lpMax","lpSum","Transformer","key","serialNumber","power","HYOSUNG_20MVA","SHIHLIN_20MVA","SHIHLIN_10MVVA","SHIHLIN_5MVA","NANJING_20MVA","PRIME_MEIDEN_10MVA","NEW_KOREA_10MVA","NEW_KOREA_5MVA","CHANGZHOU_10MVA","SHENDA_25MVA","SubstationItem","transformer","feeders","Substation","substationItems","PUTIK","GUIWAN","TUMAGA","ARENA_BLANCO","PRESA","TETUAN","MERCEDES","NORTHSIDE","ZAMPEN","SANJOSE_GUSU","SAN_JOSE","CALARIAN","BALIWASAN","DEDICATED_LINE","SANGALI","CULIANAN","CURUAN","FISHING_PORT","AYALA","TALISAYAN","LABUAN","RECODO","SINUNUC","CABATANGAN","PASONANCA","SAN_ROQUE","CAMANCHILI","ACLEM","GOVERNOR_ALVAREZ","VETERANS_AVENUE","NUNEZ","STA_CATALINA","RIO_HONDO","GUARDIA_NACIONAL","CAMPANER","MeteringPoint","substations","substation","substationItem","toUpperCase","MF3MPITZAMC01","MF3MPITZAMC02","MF3MPITZAMC03","MF3MPITZAMC04","MF3MPITZAMC05","MF3MPITZAMC06","MF3MPITZAMC07","ToggleValues","MonthlyLoadProfile","loadProfiles","dateStrings","coincidentPeak","nonCoincidentPeak","diversityFactor","loadProfilesMax","loadProfilesSum","totalLoadpRofile","Set","add","meteringPoints","loadProfile","removeLoadPRofileData","coincidentKwdel","coincidentMeteringPoint","toString","coincidentDate","coincidentHour","nonCoincidentKwdel","dailyLp","hourlyLp","delete","dlp","hlp","getRawTotal","factor","console","log","info","coincidental","nonCoincidental","totalLoadProfile","Stack","stack","data","top","element","isEmpty","pop","LoadProfileContext","createContext","updateLoadProfiles","rawDatas","monthlyLoadProfiles","working","deleteLoadProfiles","deleteLoadProfileInfo","LoadProfileContextProvider","props","children","useState","setMonthlyLoadProfiles","buffer","setBuffer","setWorking","useEffect","newBuffer","Promise","resolve","reject","newMonthlyLoadProfiles","addData","mlp","initOtherDetails","then","result","mpl","removeData","Provider","value","prevBuffer","newbuffer","deleteLaodProfileInfo","useStyles","makeStyles","root","border","borderRadius","backgroundColor","color","selected","StyledToggleButton","others","classes","ToggleButton","width","height","zIndex","drawer","container","display","flexDirection","justifyContent","alignItems","toggleButtonsContainer","otherButtonsContainer","LoadProfileStorageKey","Toolbar","onFilesToggled","onSettingsToggled","onSettingsUntoggled","onFilesUntoggled","FILES","toggledButton","setToggledButton","NONE","otherToggledButton","setOtherToggledButton","AppBar","elevation","className","position","Box","ToggleButtonGroup","onChange","event","newToggle","method","params","prevToggled","exclusive","Folder","SETTINGS","createStyles","flexShrink","drawerPaper","borderLeft","divider","borderRight","drawerHeader","padding","spacing","mixins","toolbar","content","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","accordion","boxShadow","borderBottom","margin","expanded","accordionSummary","marginBottom","minHeight","accordionTitle","fontSize","asdf","accordionDetails","CustomAccordion","expandedPanel","onPanelChange","panelName","title","render","Accordion","square","newExpanded","AccordionSummary","expandIcon","ExpandMore","Typography","AccordionDetails","cardStyles","mobileStepper","maxWidth","boxSizing","paper","shape","overflowWrap","wordWrap","filename","progress_text","alignSelf","gap","progress_content","action","button","textTransform","error_container","error_text","whiteSpace","FileCard","file","progress","progressInfo","errors","onRemoveFile","openError","setOpenError","Fragment","name","LinearProgress","variant","Button","size","startIcon","ErrorOutline","onClick","Dialog","open","onClose","DialogTitle","Divider","DialogContent","overflow","error","index","component","LoadProfileStorage","loadSettings","kwdelCol","Number","localStorage","getItem","KWDEL","dateCol","DATE","timeCol","TIME","dateFormat","DATE_FORMAT","timeFormat","TIME_FORMAT","saveSettings","settings","setItem","String","InvalidFileError","message","Error","a","fileExtension","split","parameteres","fileTypeSplit","reader","FileReader","onload","Uint8Array","target","workbook","XLSX","read","type","cellDates","readAsArrayBuffer","FileUtil","extractWorkbookFromFile","calculatePercent","i","setTimeout","extractCells","worksheet","sheetName","kwdelAddress","c","r","dateAddress","timeAddress","kwdelRef","utils","encode_cell","dateRef","timeRef","kwdelCell","timeCell","dateCell","extractDataFromRow","rowData","kwdelCellData","t","v","w","extractKwdelCellData","dateCellData","x","isValid","extractDateCellData","timeCellData","extractTimeCellData","Boolean","concat","getHours","getMinutes","extractLoadProfileRawFromWorkbook","SettingsTabs","handleProgressUpdate","lp_rawDatas","SheetNames","exists","Sheets","range","decode_range","e","s","totalRows","percent","toFixed","cells","LoadProfileParser","onFileParsed","setProgress","setsProgressInfo","setErrors","setMeteringPoints","catch","fileFromParser","dropZone","cursor","dropZone_focused","dropZone_content","flexWrap","dropZoneText","fontWeight","FileDrop","helperText","onFileDrop","onDragEnter","onDragLeave","onDragOver","dragging","setDragging","handleDragEnter","handleDragLeave","onDrop","getRootProps","getInputProps","onMouseEnter","onMouseLeave","clsx","gridGap","marginTop","LoadProfileAccordion","files","setFiles","loadProfileContext","useContext","prevMap","duplicate","handleFileParsed","lpRawDatas","handleRemoveFile","FilesDrawer","setExpandedPanel","Drawer","anchor","newExpandedPanel","maxHeight","left","title_div","tabs","flexGrow","tab_panel","focused","FormTextField","label","placeholder","helpertext","limitZero","TextField","InputProps","disableUnderline","loadProfileStyles","textFieldContainer","minWidth","actionContainer","LoadProfileSettingsPanel","setKwdel","time","setTime","setDateFormat","setTimeFormat","lpSettings","id","onSubmit","preventDefault","form","tab","textAlign","tab_selected","tab_wrapper","VerticalTab","Tab","wrapper","lineHeight","HorizontalTab","TabPanel","other","role","hidden","aria-labelledby","p","Settings","LoadProfileTab","selectedTab","setSelectedTab","Tabs","orientation","centered","indicatorColor","newTab","FeederDemandTab","useTreeItemStyles","paddingLeft","hover","borderTopRightRadius","borderBottomRightRadius","paddingRight","typography","fontWeightMedium","fontWeightRegular","group","labelRoot","labelIcon","marginRight","labelText","StyledTreeItem","Month","LabelIcon","labelInfo","bgColor","TreeItem","style","DetailsTree","monthlyLoadProfile","TreeView","defaultExpanded","defaultCollapseIcon","ArrowDownward","defaultExpandIcon","ArrowRight","defaultEndIcon","nodeId","TrendingUp","Functions","labelContent","HourTreeItem","DataTab","treeItemClasses","header","getDailyLoadProfile","DayTree","Today","dayTree","MonthlyTree","CalendarToday","from","DayTreeItem","MonthlyCard","dateCotnent_root","flex","dateCotnent_content","DataContent","ContentTabs","loadProfileContent_root","loadProfileContent_Header","loadProfileContent_Title","loadProfileContent_Content","LoadProfileContent","DATA","GRAPH","maincontent_root","tabs_container","MainContent","LOAD_PROFILE","SUBSTATION_REPORT","dashboard_root","dashboard_content","Dashboard","filesDrawerClasses","filesDrawerStyles","openFilesDrawer","setOpenFilesDrawer","openSettings","setOpenSettings","App","ThemeProvider","CssBaseline","ReactDOM","StrictMode","document","getElementById"],"mappings":"mOAAKA,E,6ECwBUC,EAtBDC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,KAAM,UACNC,aAAc,SAEhBC,UAAW,CACTH,KAAM,UACNC,KAAM,UACNC,aAAc,SAEhBE,KAAM,CACJL,QAAS,UACTI,UAAW,WAEbE,WAAY,CACVC,QAAS,c,+CCmBAC,E,WAlCb,WAAYC,GAAe,yBAH3BA,UAG0B,OAF1BC,cAE0B,EACxBC,KAAKF,KAAOA,EACZE,KAAKD,SAAW,G,qDAGTE,EAAeC,GACtBF,KAAKD,SAASI,KAAK,CAAED,WAAUD,Y,kCAGrBC,GACVF,KAAKD,SAAWC,KAAKD,SAASK,QAC5B,SAACH,GAAD,OAAWA,EAAMC,WAAaA,O,sCAKhC,GAAIF,KAAKD,SAASM,QAAU,EAAG,OAAO,EACtC,IAFsB,EAElBC,EAAQ,EAFU,cAGJN,KAAKD,UAHD,IAGtB,2BAAiC,CAC/BO,GAD+B,QAChBL,OAJK,8BAMtB,OAAOK,EAAQN,KAAKD,SAASM,S,oCAI7B,GAAIL,KAAKD,SAASM,QAAU,EAAG,OAAO,EACtC,IAFoB,EAEhBC,EAAQ,EAFQ,cAGFN,KAAKD,UAHH,IAGpB,2BAAiC,CAC/BO,GAD+B,QAChBL,OAJG,8BAMpB,OAAOK,M,KCqBIC,E,WA/Cb,WAAYC,GAAa,yBAHzBA,UAGwB,OAFxBC,wBAEwB,EACtBT,KAAKQ,KAAOA,EACZR,KAAKS,mBAAqBT,KAAKU,0B,sEAI/B,OAAO,YAAIC,MAAM,IAAIC,QAAQC,KAAI,SAACf,GAChC,OAAO,IAAID,EAAkBC,Q,yCAIdgB,GACjBd,KAAKS,mBAAmBK,EAAQhB,MAAMiB,SACpCD,EAAQb,MACRa,EAAQZ,Y,4CAIUA,GACpBF,KAAKS,mBAAmBO,SAAQ,SAACC,GAC/BA,EAAgBC,YAAYhB,Q,qCAQ9B,IADA,EACIiB,EAAW,EACXrB,EAAO,EACPsB,EAAM,EAHV,cAK8BpB,KAAKS,oBALnC,IAKA,2BAAuD,CAAC,IAA/CY,EAA8C,QACjDpB,EAAQoB,EAAkBC,gBAC9BF,GAAOnB,EACHA,EAAQkB,IACVrB,EAAOuB,EAAkBvB,KACzBqB,EAAWlB,IAVf,8BAaA,MAAO,CACLsB,IAAK,CAAEtB,MAAOkB,EAAUrB,OAAM0B,cAAe,GAAIhB,KAAM,IAAIiB,MAC3DL,IAAK,CAAEnB,MAAOmB,EAAKI,cAAe,S,sBCXzBE,E,WA/Bb,WAAYC,EAAeC,GAAe,yBAL1CD,WAKyC,OAJzCC,UAIyC,OAHzCC,eAGyC,OAFzCC,cAEyC,EACvC9B,KAAK2B,MAAQA,EACb3B,KAAK4B,KAAOA,EACZ5B,KAAK6B,UAAY7B,KAAK+B,eACtB/B,KAAK8B,SAAW9B,KAAKgC,a,2DAIrB,IAAIC,EAA4B,IAAfjC,KAAK2B,MAAc,GAAK3B,KAAK2B,MAAQ,EAClDO,EAA2B,IAAflC,KAAK2B,MAAc3B,KAAK4B,KAAO,EAAI5B,KAAK4B,KACxD,OAAOO,IAAO,GAAD,OAAIF,EAAJ,eAAqBC,GAAa,cAAcE,W,mCAI7D,OAAOD,IAAO,GAAD,OAAInC,KAAK2B,MAAT,eAAqB3B,KAAK4B,MAAQ,cAAcQ,W,+BAGtDC,GACP,OACiB,OAAfrC,KAAK2B,OACY,MAAjBU,GACwB,OAAxBA,EAAcV,QAKd3B,KAAK2B,QAAUU,EAAcV,OAAS3B,KAAK4B,OAASS,EAAcT,U,KCuDzDU,E,WA1Eb,WACErC,EACAsC,EACAZ,EACAC,EACA9B,EACA0C,EACAhB,EACAiB,GAEC,IADDvC,EACA,uDADmB,GAWnB,GAVA,yBArBFD,WAqBE,OApBFH,UAoBE,OAnBFyC,SAmBE,OAlBFZ,WAkBE,OAjBFC,UAiBE,OAhBFY,YAgBE,OAfFhB,mBAeE,OAdFiB,SAcE,OAbFJ,mBAaE,OAZFnC,cAYE,EACAF,KAAKC,MAAQA,EACbD,KAAKuC,IAAMA,EACXvC,KAAKF,KAAOA,EACZE,KAAK2B,MAAQA,EACb3B,KAAK4B,KAAOA,EACZ5B,KAAKwC,OAASA,EACdxC,KAAKwB,cAAgBA,EACrBxB,KAAKyC,IAAMA,EACXzC,KAAKE,SAAWA,EACE,IAAdF,KAAKF,MAA8B,IAAhBE,KAAKwC,OAG1B,GAFAxC,KAAKF,KAAO,GACZE,KAAKwC,OAAS,GACVxC,KAAKuC,IAAM,GAAK,EAAG,CACrB,IAAI/B,EAAO,IAAIiB,KAAJ,UAAYzB,KAAK4B,KAAjB,YAAyB5B,KAAK2B,MAA9B,YAAuC3B,KAAKuC,MACvD/B,EAAKkC,QAAQlC,EAAKmC,UAAY,GAC9B3C,KAAKuC,IAAM/B,EAAKmC,UAChB3C,KAAK2B,MAAQnB,EAAKoC,WAAa,EAC/B5C,KAAK4B,KAAOpB,EAAKqC,mBAEjB7C,KAAKuC,MAGT,IAAIO,EAAe9C,KAAK+C,gBAAgB,CACtCpB,MAAO3B,KAAK2B,MACZY,IAAKvC,KAAKuC,IACVzC,KAAME,KAAKF,KACX0C,OAAQxC,KAAKwC,SAGfxC,KAAKqC,cAAgB,IAAIX,EAAcoB,EAAc9C,KAAK4B,MAEtC,IAAhB5B,KAAKwC,SACPxC,KAAKF,OACDE,KAAKF,KAAO,IACdE,KAAKF,KAAO,K,+DAed,IATF6B,EASC,EATDA,MACAY,EAQC,EARDA,IACAC,EAOC,EAPDA,OACA1C,EAMC,EANDA,KAOIgD,EAAenB,EASnB,OARIY,GAAO,KACM,IAATzC,GAAyB,IAAX0C,GAAwB,KAARD,GAEb,KADrBO,IAAiBA,EAAe,MAE9BA,EAAe,KAIdA,M,KCZIE,E,WA/Db,WAAYxB,GAAwB,yBALpCA,mBAKmC,OAJnCyB,uBAImC,OAHnC1B,SAGmC,OAFnCH,SAEmC,EACjCpB,KAAKwB,cAAgBA,EACrBxB,KAAKiD,kBAAoB,IAAIC,IAC7BlD,KAAKuB,IAAM,CAAEtB,MAAO,EAAGH,KAAM,EAAG0B,cAAe,GAAIhB,KAAM,IAAIiB,MAC7DzB,KAAKoB,IAAM,CAAEnB,MAAO,EAAGuB,cAAe,I,+DAGrBV,EAA0BqC,GAAqB,IAAD,EAC1DnD,KAAKiD,kBAAkBG,IAAID,IAC9BnD,KAAKiD,kBAAkBI,IACrBF,EACA,IAAI5C,EAAiB,IAAIkB,KAAK0B,KAGlC,UAAAnD,KAAKiD,kBAAkBK,IAAIH,UAA3B,SAAwCI,mBAAmBzC,K,4CAGvCZ,GACpBF,KAAKiD,kBAAkBjC,SAAQ,SAACwC,GAC9BA,EAAiBC,sBAAsBvD,Q,0CAIvBiD,GAClB,OAAOnD,KAAKiD,kBAAkBG,IAAID,GAC7BnD,KAAKiD,kBAAkBK,IAAIH,GAC5B,IAAI5C,EAAiB,IAAIkB,KAAK0B,M,qCAOlC,IADA,EACI5B,EAAM,EACNH,EAAM,EACNsC,EAAU,EACVC,EAAU,IAAIlC,KAJlB,cAM6BzB,KAAKiD,kBAAkBW,UANpD,IAMA,2BAA8D,CAAC,IAAtDJ,EAAqD,UACzBA,EAAiBK,eAAvCC,EAD+C,EACpDvC,IAAiBwC,EADmC,EACxC3C,IAChB0C,EAAM7D,MAAQsB,IAChBA,EAAMuC,EAAM7D,MACZyD,EAAUI,EAAMhE,KAChB6D,EAAUH,EAAiBhD,KAC3BY,GAAO2C,EAAM9D,QAZjB,8BAwBA,OARAD,KAAKuB,IAAM,CACTtB,MAAOsB,EACPzB,KAAM4D,EACNlD,KAAMmD,EACNnC,cAAexB,KAAKwB,eAEtBxB,KAAKoB,IAAM,CAAEnB,MAAOmB,EAAKI,cAAexB,KAAKwB,eAEtC,CACLD,IAAKvB,KAAKuB,IACVH,IAAKpB,KAAKoB,S,eNpEXnC,O,mBAAAA,I,uBAAAA,I,yBAAAA,I,mBAAAA,I,mBAAAA,I,mBAAAA,I,+BAAAA,I,iBAAAA,I,uBAAAA,I,uBAAAA,I,0BAAAA,I,oCAAAA,I,sBAAAA,I,wBAAAA,I,oBAAAA,I,gCAAAA,I,0BAAAA,I,oBAAAA,I,oBAAAA,I,sBAAAA,I,wBAAAA,I,wCAAAA,I,wCAAAA,I,0CAAAA,I,0BAAAA,I,0BAAAA,I,kBAAAA,I,wCAAAA,I,sCAAAA,I,kBAAAA,I,gCAAAA,I,0BAAAA,I,wCAAAA,I,wBAAAA,I,yBAAAA,M,KAsCUA,QOtCT+E,E,WAmEJ,WACEC,EACAvE,EACAwE,EACAC,GACC,yBAVHF,SAUE,OATFvE,UASE,OARFwE,kBAQE,OAPFC,WAOE,EACAnE,KAAKiE,IAAMA,EACXjE,KAAKN,KAAOA,EACZM,KAAKkE,aAAeA,EACpBlE,KAAKmE,MAAQA,E,uDAIb,OAAOnE,KAAKiE,Q,KAhFVD,EACYI,cAAgB,IAAIJ,EAClC,gBACA,sBACA,YACA,IALEA,EAOYK,cAAgB,IAAIL,EAClC,gBACA,sBACA,SACA,IAXEA,EAaYM,eAAiB,IAAIN,EACnC,kBACA,sBACA,UACA,IAjBEA,EAmBYO,aAAe,IAAIP,EACjC,eACA,qBACA,GACA,GAvBEA,EAyBYQ,cAAgB,IAAIR,EAClC,gBACA,sBACA,SACA,IA7BEA,EA+BYS,mBAAqB,IAAIT,EACvC,qBACA,2BACA,GACA,IAnCEA,EAqCYU,gBAAkB,IAAIV,EACpC,kBACA,wBACA,UACA,IAzCEA,EA2CYW,eAAiB,IAAIX,EACnC,iBACA,uBACA,SACA,GA/CEA,EAiDYY,gBAAkB,IAAIZ,EACpC,kBACA,wBACA,YACA,IArDEA,EAuDYa,aAAe,IAAIb,EACjC,eACA,qBACA,GACA,IAyBWA,QCjFTc,EAIJ,WAAYC,EAA0BC,GAAoB,yBAH1DD,iBAGyD,OAFzDC,aAEyD,EACvDhF,KAAK+E,YAAcA,EACnB/E,KAAKgF,QAAUA,GAIbC,E,WAsEJ,WACEhB,EACAvE,EACAwF,GACC,yBARHjB,SAQE,OAPFvE,UAOE,OANFwF,qBAME,EACAlF,KAAKiE,IAAMA,EACXjE,KAAKN,KAAOA,EACZM,KAAKkF,gBAAkBA,E,wDAIvB,OAAOlF,KAAKiE,Q,KAjFVgB,EACYE,MAAQ,IAAIF,EAAW,QAAS,YAAa,CAC3D,IAAIH,EAAed,EAAYM,eAAgB,CAC7CrF,EAAOmG,OACPnG,EAAOoG,OACPpG,EAAOqG,aACPrG,EAAOsG,QAET,IAAIT,EAAed,EAAYI,cAAe,CAC5CnF,EAAOuG,OACPvG,EAAOwG,SACPxG,EAAOyG,UACPzG,EAAO0G,WAZPV,EAeYW,aAAe,IAAIX,EACjC,gBACA,oBACA,CACE,IAAIH,EAAed,EAAYQ,cAAe,CAC5CvF,EAAO4G,SACP5G,EAAO6G,SACP7G,EAAO8G,UACP9G,EAAO+G,iBAET,IAAIlB,EAAed,EAAYU,gBAAiB,MAzBhDO,EA4BYgB,QAAU,IAAIhB,EAAW,UAAW,cAAe,CACjE,IAAIH,EAAed,EAAYS,mBAAoB,CACjDxF,EAAOiH,SACPjH,EAAOkH,OACPlH,EAAOmH,iBAhCPnB,EAmCYoB,MAAQ,IAAIpB,EAAW,QAAS,YAAa,CAC3D,IAAIH,EAAed,EAAYM,eAAgB,CAC7CrF,EAAOqH,UACPrH,EAAOsH,WAtCPtB,EA0CYuB,OAAS,IAAIvB,EAAW,SAAU,aAAc,CAC9D,IAAIH,EAAed,EAAYU,gBAAiB,CAACzF,EAAOuH,SACxD,IAAI1B,EAAed,EAAYW,eAAgB,CAAC1F,EAAOwH,UACvD,IAAI3B,EAAed,EAAYO,aAAc,MA7C3CU,EA+CYyB,WAAa,IAAIzB,EAAW,aAAc,iBAAkB,CAC1E,IAAIH,EAAed,EAAYY,gBAAiB,CAAC3F,EAAO0H,YACxD,IAAI7B,EAAed,EAAYS,mBAAoB,CAACxF,EAAO2H,cAjDzD3B,EAmDY4B,WAAa,IAAI5B,EAAW,aAAc,iBAAkB,CAC1E,IAAIH,EAAed,EAAYK,cAAe,CAC5CpF,EAAO6H,MACP7H,EAAO8H,iBACP9H,EAAO+H,gBACP/H,EAAOgI,QAET,IAAInC,EAAed,EAAYa,aAAc,CAC3C5F,EAAOiI,aACPjI,EAAOkI,UACPlI,EAAOmI,iBACPnI,EAAOoI,aAuBEpC,QC/FTqC,E,WA2BJ,WAAoBrD,EAAasD,GAA4B,yBAH7DtD,SAG4D,OAF5DsD,iBAE4D,EAC1DvH,KAAKiE,IAAMA,EACXjE,KAAKuH,YAAcA,E,uDAInB,OAAOvH,KAAKiE,M,mCAIZ,IADW,EACPe,EAAoB,GADb,cAEYhF,KAAKuH,aAFjB,IAEX,2BAAyC,CAAC,IAAD,EAAhCC,EAAgC,sBACZA,EAAWtC,iBADC,IACvC,2BAAuD,CAAC,IAA/CuC,EAA8C,QACrDzC,EAAO,sBAAOA,GAAP,YAAmByC,EAAezC,WAFJ,gCAF9B,8BAOX,OAAOA,K,wCAGexD,GACtB,OAAQA,EAAckG,eACpB,KAAK1H,KAAK2H,cAAc1D,IACtB,OAAOjE,KAAK2H,cACd,KAAK3H,KAAK4H,cAAc3D,IACtB,OAAOjE,KAAK4H,cACd,KAAK5H,KAAK6H,cAAc5D,IACtB,OAAOjE,KAAK6H,cACd,KAAK7H,KAAK8H,cAAc7D,IACtB,OAAOjE,KAAK8H,cACd,KAAK9H,KAAK+H,cAAc9D,IACtB,OAAOjE,KAAK+H,cACd,KAAK/H,KAAKgI,cAAc/D,IACtB,OAAOjE,KAAKgI,cACd,KAAKhI,KAAKiI,cAAchE,IACtB,OAAOjE,KAAKiI,cACd,QACE,OAAO,Q,6BAICzG,GACZ,OAAQA,GACN,KAAKxB,KAAK2H,cAAc1D,IACxB,KAAKjE,KAAK4H,cAAc3D,IACxB,KAAKjE,KAAK6H,cAAc5D,IACxB,KAAKjE,KAAK8H,cAAc7D,IACxB,KAAKjE,KAAK+H,cAAc9D,IACxB,KAAKjE,KAAKgI,cAAc/D,IACxB,KAAKjE,KAAKiI,cAAchE,IACtB,OAAO,EACT,QACE,OAAO,O,KA9ETqD,EACYK,cAAgB,IAAIL,EAAc,gBAAiB,CACjErC,EAAWE,QAFTmC,EAKYM,cAAgB,IAAIN,EAAc,gBAAiB,CACjErC,EAAWW,eANT0B,EASYO,cAAgB,IAAIP,EAAc,gBAAiB,CACjErC,EAAWgB,UAVTqB,EAYYQ,cAAgB,IAAIR,EAAc,gBAAiB,CACjErC,EAAWuB,OACXvB,EAAWoB,QAdTiB,EAgBYS,cAAgB,IAAIT,EAAc,gBAAiB,CACjErC,EAAWyB,aAjBTY,EAmBYU,cAAgB,IAAIV,EAAc,gBAAiB,IAnB/DA,EAoBYW,cAAgB,IAAIX,EAAc,gBAAiB,CACjErC,EAAW4B,aA8DAS,ICtEVY,EDsEUZ,IE8CAa,E,WA7Gb,WAAY9F,GAA+B,yBAV3C+F,kBAU0C,OAT1C/F,mBAS0C,OAR1CgG,iBAQ0C,OAP1CC,oBAO0C,OAN1CC,uBAM0C,OAL1CC,qBAK0C,OAJ1CC,qBAI0C,OAH1CC,qBAG0C,OAF1CC,sBAE0C,EACxC3I,KAAKqC,cAAgBA,EACrBrC,KAAKoI,aAAe,IAAIlF,IACxBlD,KAAKqI,YAAc,IAAIO,IACvB5I,KAAK2I,iBAAmB,IAAI3F,EAAY,SACxChD,KAAKsI,eAAiB,KACtBtI,KAAKuI,kBAAoB,KACzBvI,KAAKwI,gBAAkB,KACvBxI,KAAKyI,gBAAkB,GACvBzI,KAAK0I,gBAAkB,G,oDAGjB5H,GAA2B,IAAD,EAC5BmD,EAAMnD,EAAQU,cACd2B,EAAU,UAAMrC,EAAQa,MAAd,YAAuBb,EAAQyB,IAA/B,YAAsCzB,EAAQc,MAEvD5B,KAAKqI,YAAYjF,IAAID,IACxBnD,KAAKqI,YAAYQ,IAAI1F,GAGlBnD,KAAKoI,aAAahF,IAAIa,IACzBjE,KAAKoI,aAAa/E,IAAIY,EAAK,IAAIjB,EAAYiB,IAE7C,UAAAjE,KAAKoI,aAAa9E,IAAIW,UAAtB,SAA4BV,mBAAmBzC,EAASqC,K,iCAG/CjD,EAAkB4I,GAA2B,IAAD,OACrDA,EAAe9H,SAAQ,SAACiD,GACtB,GAAI,EAAKmE,aAAahF,IAAIa,GAAM,CAC9B,IAAI8E,EAAc,EAAKX,aAAa9E,IAAIW,GAC7B,OAAX8E,QAAW,IAAXA,KAAaC,sBAAsB9I,S,yCAMvC,IAAI+I,EAAkB,EAClBC,EAA0B5B,EAAcK,cAAcwB,WACtDC,EAAiB,IAAI3H,KACrB4H,EAAiB,EACjBC,EAAqB,EAEzBtJ,KAAKyI,gBAAkB,GACvBzI,KAAK0I,gBAAkB,GACvB1I,KAAK2I,iBAAmB,IAAI3F,EAAY,SATvB,oBAWOhD,KAAKoI,aAAaxE,UAXzB,IAWjB,2BAAoD,CAClD,IADmD,IAA5CmF,EAA2C,QAClD,kBAAwBA,EAAY9F,kBAAkBW,UAAtD,eAAiE,CAA5D,IAA4D,EAAxD2F,EAAO,KAAiD,cAC1CA,EAAQ9I,oBADkC,IAC/D,2BAAiD,CAAC,IAAzC+I,EAAwC,QAC3C1I,EAAU,IAAIwB,EAChBkH,EAASlI,gBACTiI,EAAQ/I,KAAKmC,UACb4G,EAAQ/I,KAAKoC,WAAa,EAC1B2G,EAAQ/I,KAAKqC,cACb2G,EAAS1J,KACT,EACA,QACA,GAEEqD,EAAU,UAAMrC,EAAQa,MAAd,YAAuBb,EAAQyB,IAA/B,YAAsCzB,EAAQc,MAC5D5B,KAAK2I,iBAAiBpF,mBAAmBzC,EAASqC,IAbW,+BADf,MAkB7B4F,EAAYlF,eAAzBtC,EAlB0C,EAkB1CA,IAAKH,EAlBqC,EAkBrCA,IAEK,IAAdA,EAAInB,MACND,KAAKoI,aAAaqB,OAAOV,EAAYvH,gBAErCxB,KAAKyI,gBAAgBtI,KAAKoB,GAC1BvB,KAAK0I,gBAAgBvI,KAAKiB,GAC1BkI,GAAsB/H,EAAItB,QApCb,kDAwCDD,KAAK2I,iBAAiB1F,kBAAkBW,UAxCvC,IAwCjB,2BAAkE,CAAC,IAAD,EAAzD8F,EAAyD,sBAChDA,EAAIjJ,oBAD4C,IAChE,2BAAwC,CAAC,IAAhCkJ,EAA+B,QAClCA,EAAIC,cAAgBX,IACtBA,EAAkBU,EAAIC,cACtBR,EAAiBM,EAAIlJ,KACrB6I,EAAiBM,EAAI7J,KACrBoJ,EAA0B,UANkC,gCAxCjD,8BAmDjB,IAAIV,EAAkBc,EAAqBL,EAE3CjJ,KAAKsI,eAAiB,CACpBrI,MAAOgJ,EACPzI,KAAM4I,EACNtJ,KAAMuJ,EACN7H,cAAe0H,GAEjBlJ,KAAKuI,kBAAoB,CAAEtI,MAAOqJ,GAClCtJ,KAAKwI,gBAAkB,CAAEqB,OAAQrB,GAEjCsB,QAAQC,IAAI,CACVC,KAAM,cACNzI,IAAKvB,KAAKyI,gBACVrH,IAAKpB,KAAK0I,gBACVuB,aAAcjK,KAAKsI,eACnB4B,gBAAiBlK,KAAKuI,kBACtBC,gBAAiBxI,KAAKwI,gBACtB2B,iBAAkBnK,KAAK2I,uB,KCxFdyB,E,WAnCb,WAAYC,GAAmB,yBAH/BC,UAG8B,OAF9BC,SAE8B,EAC5BvK,KAAKsK,KAAO,GACZtK,KAAKuK,IAAM,EAEPF,IACFrK,KAAKsK,KAAOD,EAAMC,KAClBtK,KAAKuK,IAAMF,EAAME,K,iDAIhBC,GACHxK,KAAKsK,KAAKtK,KAAKuK,KAAOC,EACtBxK,KAAKuK,IAAMvK,KAAKuK,IAAM,I,+BAItB,OAAOvK,KAAKuK,M,6BAIZ,OAAOvK,KAAKsK,KAAKtK,KAAKuK,IAAM,K,gCAI5B,OAAoB,IAAbvK,KAAKuK,M,4BAIZ,IAAuB,IAAnBvK,KAAKyK,UAEP,OADAzK,KAAKuK,IAAMvK,KAAKuK,IAAM,EACfvK,KAAKsK,KAAKI,U,KCrBjBC,EAAqBC,wBAKxB,CACDC,mBAAoB,SAACC,KACrBC,oBAAqB,IAAI7H,IACzB8H,SAAS,EACTC,mBAAoB,SAACC,OAgIRC,EA5H8E,SAC3FC,GACI,IACIC,EAAwBD,EAAxBC,SADL,eAC6BD,EAD7B,cAEmDE,mBACpD,IAAIpI,MAHH,mBAEI6H,EAFJ,KAEyBQ,EAFzB,OAMyBD,mBAE1B,IAAIlB,GARH,mBAMIoB,EANJ,KAMYC,EANZ,OAS2BH,oBAAS,GATpC,mBASIN,EATJ,KASaU,EATb,KA4GH,OAjGAC,qBAAU,WACR7B,QAAQC,IAAI,qCACZD,QAAQC,IAAIgB,KACX,CAACA,IAoBJY,qBAAU,WACR,IAAIX,EACJ,GAAIQ,EAAOf,UACTiB,GAAW,OADb,CAKA,IA8CAxL,EACA4I,EArBwCgC,EA1BpCc,EAAY,IAAIxB,EAAMoB,GACtBlB,EAAOsB,EAAUlB,MACjBJ,IACFoB,GAAW,GAEPpB,aAAgB3J,OAClBmJ,QAAQC,IAAI,oCAoBwBe,EAnBHR,EAoB9B,IAAIuB,SAAyC,SAACC,EAASC,GAC5DjC,QAAQC,IAAI,uBACZ,IAFuE,EAEnEiC,EAAyB,IAAI9I,IAAI6H,GAFkC,cAGnDD,GAHmD,IAGvE,2BAA8B,CAAC,IAAD,EAArBhK,EAAqB,QACxBmD,EAAG,UAAMnD,EAAQuB,cAAcV,MAA5B,YAAqCb,EAAQc,MAC/CoK,EAAuB5I,IAAIa,IAC9B+H,EAAuB3I,IACrBY,EACA,IAAIkE,EAAmBrH,EAAQuB,gBAGnC,UAAA2J,EAAuB1I,IAAIW,UAA3B,SAAiCgI,QAAQnL,IAX4B,8BAavEkL,EAAuBhL,SAAQ,SAACkL,GAAD,OAASA,EAAIC,sBAC5CL,EAAQE,OAlCiCI,MAAK,SAACC,GAC3Cd,EAAuBc,GACvBX,GAAW,GACXD,EAAUG,QAGZ9B,QAAQC,IAAI,oCAiChB7J,EA/BMoK,EAAKpK,SAgCX4I,EA/BMwB,EAAKxB,eAiCJ,IAAI+C,SAAyC,SAACC,EAASC,GAC5DjC,QAAQC,IAAI,2BACZ,IAFuE,EAEnEiC,EAAyB,IAAI9I,IAAI6H,GAFkC,cAGvDiB,EAAuBpL,QAHgC,IAGvE,2BAA+C,CAAC,IAAvCqD,EAAsC,QACzCqI,EAAMN,EAAuB1I,IAAIW,GAClC,OAAHqI,QAAG,IAAHA,KAAKC,WAAWrM,EAAU4I,IAL2C,8BAOvEkD,EAAuBhL,SAAQ,SAACkL,GAAS,IAAD,EAEtC,GADAA,EAAIC,mBACiC,KAAjC,UAAAD,EAAI3D,yBAAJ,eAAuBtI,OAAa,CACtC,IAAIgE,EAAG,UAAMiI,EAAI7J,cAAcV,MAAxB,YAAiCuK,EAAI7J,cAAcT,MAC1DoK,EAAuBvC,OAAOxF,OAGlC6H,EAAQE,OA9CJI,MAAK,SAACC,GACNd,EAAuBc,GACvBX,GAAW,GACXD,EAAUG,WAIf,CAACJ,IA4CF,kBAACb,EAAmB6B,SAApB,CACEC,MAAO,CACL5B,mBA/FN,SAA4BC,GAC1BhB,QAAQC,IAAI,8CAEZ0B,GAAU,SAACiB,GACT,IAAIC,EAAY,IAAIvC,EAAMsC,GAE1B,OADAC,EAAUxM,KAAK2K,GACR6B,MA0FL5B,sBACAE,mBAvFN,SAA4B2B,GAC1BnB,GAAU,SAACiB,GACT,IAAIC,EAAY,IAAIvC,EAAMsC,GAE1B,OADAC,EAAUxM,KAAKyM,GACRD,MAoFL3B,YAGDK,I,8DC5HDwB,EAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9C6N,KAAM,CACJC,OAAQ,OACRC,aAAc,EACd,iBAAkB,CAChBC,gBAAiBhO,EAAME,QAAQO,WAAWC,QAC1CuN,MAAOjO,EAAME,QAAQC,QAAQC,MAE/B,gCAAiC,CAC/B6N,MAAOjO,EAAME,QAAQC,QAAQC,KAC7B4N,gBAAiBhO,EAAME,QAAQO,WAAWC,SAE5CwN,SAAU,QAICC,EA7B8D,SAAC,GAIvE,IAHLZ,EAGI,EAHJA,MACApB,EAEI,EAFJA,SACGiC,EACC,oCACEC,EAAUV,IAChB,OACE,kBAACW,EAAA,EAAD,eAAcD,QAAS,CAAER,KAAMQ,EAAQR,MAAQN,MAAOA,GAAWa,GAC9DjC,ICOQwB,EArBGC,aAAW,SAAC5N,GAAD,MAAmB,CAC9C6N,KAAM,CACJU,MAAO,GACPC,OAAQ,OACRC,OAAQzO,EAAMyO,OAAOC,OAAS,IAEhCC,UAAW,CACTC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,WAAY,SACZP,OAAQ,OACRD,MAAO,QAETS,uBAAwB,GACxBC,sBAAuB,CACrBL,QAAS,OACTC,cAAe,e,SLHd7F,K,cAAAA,E,oBAAAA,E,SAAAA,M,KAML,IMrBKkG,ECCUC,EPoByB,SAAC,GAMlC,IALLC,EAKI,EALJA,eACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,iBAEI,kGACsCnD,mBACxCpD,EAAawG,QAFX,mBACGC,EADH,KACkBC,EADlB,OAIgDtD,mBAClDpD,EAAa2G,MALX,mBAIGC,EAJH,KAIuBC,EAJvB,KA4CJ,IAAMxB,EAAUV,IAChB,OACE,kBAACmC,EAAA,EAAD,CACEC,UAAW,EACXC,UAAW3B,EAAQR,KACnBoC,SAAS,SACThC,MAAM,WAEN,kBAACiC,EAAA,EAAD,CAAKF,UAAW3B,EAAQM,WACtB,kBAACuB,EAAA,EAAD,CAAKF,UAAW3B,EAAQW,wBACtB,kBAACmB,EAAA,EAAD,CACEC,SA/CV,SACEC,EACAC,GAEA1F,QAAQC,IAAI,CACV0F,OAAQ,uBACRC,OAAQ,CAAEF,eAGZ,IAAMG,EAAchB,EACpBC,EAAiBY,GACbA,IAActH,EAAawG,MAC7BJ,IACSqB,IAAgBzH,EAAawG,OACtCD,KAkCMhC,MAAOkC,EACPiB,WAAS,GAET,kBAAC,EAAD,CAAoBnD,MAAOvE,EAAawG,OACtC,kBAACmB,EAAA,EAAD,SAIN,kBAACT,EAAA,EAAD,CAAKF,UAAW3B,EAAQY,uBACtB,kBAACkB,EAAA,EAAD,CACEC,SAxCV,SACEC,EACAC,GAEA1F,QAAQC,IAAI,CACV0F,OAAQ,4BACRC,OAAQ,CAAEF,eAGZ,IAAMG,EAAcb,EACpBC,EAAsBS,GAClBA,IAActH,EAAa4H,SAC7BvB,IACSoB,IAAgBzH,EAAa4H,UACtCtB,KA2BM/B,MAAOqC,EACPc,WAAS,GAET,kBAAC,EAAD,CAAoBnD,MAAOvE,EAAa4H,UACtC,kBAAC,IAAD,Y,0BQ1DCjD,GArCGC,aAAW,SAAC5N,GAAD,OAC3B6Q,YAAa,CACXnC,OAAQ,CACNH,MALc,IAMduC,WAAY,GAEdC,YAAa,CACXxC,MATc,IAUd0B,SAAU,SACVe,WAAW,aAAD,OAAehR,EAAME,QAAQ+Q,SACvCC,YAAY,aAAD,OAAelR,EAAME,QAAQ+Q,UAE1CE,aAAa,yBACXvC,QAAS,OACTG,WAAY,SACZqC,QAASpR,EAAMqR,QAAQ,EAAG,IAEvBrR,EAAMsR,OAAOC,SALN,IAMVzC,eAAgB,aAElB0C,QAAS,CACPC,WAAYzR,EAAM0R,YAAYC,OAAO,SAAU,CAC7CC,OAAQ5R,EAAM0R,YAAYE,OAAOC,MACjCC,SAAU9R,EAAM0R,YAAYI,SAASC,gBAEvCC,YA3Bc,KA6BhBC,aAAc,CACZR,WAAYzR,EAAM0R,YAAYC,OAAO,SAAU,CAC7CC,OAAQ5R,EAAM0R,YAAYE,OAAOM,QACjCJ,SAAU9R,EAAM0R,YAAYI,SAASK,iBAEvCH,WAAY,Q,8ECqBZrE,GAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9CoS,UAAW,CACTtE,OAAQ,gCACRuE,UAAW,OACX,qBAAsB,CACpBC,aAAc,GAEhB,WAAY,CACV1D,QAAS,QAEX,aAAc,CACZ2D,OAAQ,QAEVC,SAAU,IAGZC,iBAAkB,CAChBH,aAAc,gCACdI,cAAe,EACfC,UAAW,GACX,aAAc,CACZA,UAAW,GACX3E,gBAAiB,SAEnBwE,SAAU,IAEZhB,QAAS,CACP,aAAc,CACZe,OAAQ,WAGZK,eAAgB,CACdC,SAAU,OACVC,KAAM,IAERN,SAAU,GACVO,iBAAkB,CAChB/E,gBAAiBhO,EAAME,QAAQO,WAAWC,QAC1C0Q,QAAS,MACTnB,SAAU,gBAIC+C,GAjFwD,SAAC,GAQjE,IAPLC,EAOI,EAPJA,cACAC,EAMI,EANJA,cACAC,EAKI,EALJA,UACAC,EAII,EAJJA,MAEAjH,GAEI,EAHJkH,OAGI,EAFJlH,UAGMkC,GADF,yFACYV,MAShB,OACE,kBAAC2F,GAAA,EAAD,CACEtD,UAAW3B,EAAQ+D,UACnBmB,QAAM,EACNf,SAAUS,IAAkBE,EAC5B/C,SAZJ,SACEC,EACAmD,GAEAN,EAAcM,EAAcL,EAAY,MAUtC,kBAACM,GAAA,EAAD,CACEzD,UAAW3B,EAAQoE,iBACnBiB,WAAY,kBAACC,GAAA,EAAD,OAEZ,kBAACC,GAAA,EAAD,CAAY5D,UAAW3B,EAAQuE,gBAAiBQ,IAElD,kBAACS,GAAA,EAAD,CAAkB7D,UAAW3B,EAAQ0E,kBAClC5G,K,sECkEH2H,GAAalG,aAAW,SAAC5N,GAAD,MAAmB,CAC/C6N,KAAM,CACJY,OAAQzO,EAAMyO,OAAOsF,cACrBC,SAAU,OACVnB,SAAU,SACVoB,UAAW,aACXjG,gBAAiBhO,EAAME,QAAQO,WAAWyT,MAC1CnG,aAAc/N,EAAMmU,MAAMpG,aAC1BD,OAAO,aAAD,OAAe9N,EAAME,QAAQ+Q,SACnCG,QAAS,GACTgD,aAAc,aACdC,SAAU,cAEZC,SAAU,CACRzB,SAAU,MACV5E,MAAOjO,EAAME,QAAQM,KAAKL,SAE5BoU,cAAe,CACb1B,SAAU,QACV5E,MAAOjO,EAAME,QAAQM,KAAKD,UAC1BiU,UAAW,YAEbhD,QAAS,CACP5C,QAAS,OACTC,cAAe,SACf4F,IAAK,MACL3F,eAAgB,UAElB4F,iBAAkB,CAChB9F,QAAS,OACTC,cAAe,SACf4F,IAAK,OAEPE,OAAQ,GACRC,OAAQ,CACNC,cAAe,QAEjBC,gBAAiB,CACfd,SAAU,QAEZe,WAAY,CACVlC,SAAU,SACVzB,QAAS,WACT4D,WAAY,gBAIDC,GA7I0C,SAAC,GAOnD,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,SACAC,EAII,EAJJA,aAII,IAHJC,cAGI,MAHK,GAGL,EAFJC,EAEI,EAFJA,aAGMjH,GADF,0EACYyF,MADZ,EAE8B1H,oBAAS,GAFvC,mBAEGmJ,EAFH,KAEcC,EAFd,KAaJ,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKzF,UAAW3B,EAAQR,MACtB,yBAAKmC,UAAW3B,EAAQmD,SACtB,kBAACoC,GAAA,EAAD,CAAY5D,UAAW3B,EAAQiG,UAAWY,EAAKQ,MAC/C,yBAAK1F,UAAW3B,EAAQqG,kBACtB,kBAACiB,GAAA,EAAD,CACEpI,MAAO4H,EACPS,QACe,IAAbT,GAA+B,MAAbA,EACd,cACA,kBAGR,kBAACvB,GAAA,EAAD,CAAY5D,UAAW3B,EAAQkG,eAC5Ba,KAIP,yBAAKpF,UAAW3B,EAAQsG,QACH,IAAlBU,EAAOlU,QACN,kBAAC0U,GAAA,EAAD,CACE7F,UAAW3B,EAAQuG,OACnBkB,KAAK,QACL7H,MAAM,YACN8H,UAAW,kBAACC,GAAA,EAAD,CAAc/H,MAAM,UAC/BgI,QAnCZ,WACErL,QAAQC,IAAIwK,GACZG,GAAa,KA4BL,cAUF,kBAACK,GAAA,EAAD,CACE7F,UAAW3B,EAAQuG,OACnBqB,QAASX,EACTQ,KAAK,QACL7H,MAAM,WAJR,YAUJ,kBAACiI,GAAA,EAAD,CAAQC,KAAMZ,EAAWa,QA7C7B,WACEZ,GAAa,KA6CT,kBAACa,GAAA,EAAD,KACE,kBAACzC,GAAA,EAAD,CAAYgC,QAAQ,KAAK3H,MAAM,SAA/B,UAGA,kBAAC2F,GAAA,EAAD,CAAYgC,QAAQ,YAAY3H,MAAM,iBACnCiH,EAAKQ,MAER,kBAACY,GAAA,EAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAACrG,EAAA,EAAD,CAAKsG,SAAS,OAAOpF,QAAQ,YAC1BiE,EAAO1T,KAAI,SAAC8U,EAAOC,GAClB,OACE,yBAAK3R,IAAK2R,EAAO1G,UAAW3B,EAAQyG,iBAClC,kBAAClB,GAAA,EAAD,CACE+C,UAAU,IACV3G,UAAW3B,EAAQ0G,WACnBhQ,IAAG,UAAK2R,EAAL,WAEFD,GAEH,kBAACH,GAAA,EAAD,gB,SJzGbpH,K,oBAAAA,E,kBAAAA,E,kBAAAA,E,4BAAAA,E,6BAAAA,M,KA0DL,IAKe0H,GALY,CACzBC,aAnDF,WAUE,MAAO,CACLC,SAVaC,OACbC,aAAaC,QAAQ/H,EAAsBgI,QAAU,KAUrDC,QARYJ,OAAOC,aAAaC,QAAQ/H,EAAsBkI,OAAS,KASvEC,QARYN,OAAOC,aAAaC,QAAQ/H,EAAsBoI,OAAS,KASvEC,WAPAP,aAAaC,QAAQ/H,EAAsBsI,cAAgB,aAQ3DC,WANAT,aAAaC,QAAQ/H,EAAsBwI,cAAgB,UA2C7DC,aAjCF,SAAsBC,GAChBA,EAASd,UACXE,aAAaa,QACX3I,EAAsBgI,MACtBY,OAAOF,EAASd,WAIhBc,EAASP,SACXL,aAAaa,QAAQ3I,EAAsBoI,KAAMQ,OAAOF,EAASP,UAG/DO,EAAST,SACXH,aAAaa,QAAQ3I,EAAsBkI,KAAMU,OAAOF,EAAST,UAG/DS,EAASL,YACXP,aAAaa,QACX3I,EAAsBsI,YACtBM,OAAOF,EAASL,aAIhBK,EAASH,YACXT,aAAaa,QACX3I,EAAsBwI,YACtBI,OAAOF,EAASH,e,+CKhDPM,G,oDALb,WAAYC,GAAkB,uCACtBA,G,uBAFqBC,Q,gDCI/B,WAAuC/C,GAAvC,UAAAgD,EAAA,+EACS,IAAIvL,SAAkB,SAACC,EAASC,GACrCjC,QAAQC,IAAI,2CACZ,IAAIsN,EAAwBjD,EAAKQ,KAAK0C,MAAM,KAAK,GACjDxN,QAAQC,IAAI,CACV0F,OAAQ,4BACR8H,YAAa,CAAEnD,QACfoD,cAAepD,EAAKQ,KAAK0C,MAAM,KAC/BD,kBAGoB,SAAlBA,GACFtL,EACE,IAAIkL,GAAJ,kDAC6CI,KAKjD,IAAII,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAUpI,GACxB,IAAK,IAAD,EACEjF,EAAO,IAAIsN,WAAJ,UAAerI,EAAMsI,cAArB,aAAe,EAAcxL,QACpCyL,EAAWC,KAAKC,KAAK1N,EAAM,CAAE2N,KAAM,QAASC,WAAW,IAC3DpM,EAAQgM,GACR,MAAOnC,GACP5J,EAAO,IAAIoL,MAAMxB,MAGrB8B,EAAOU,kBAAkB/D,OA7B7B,4C,sBAiCA,IAIegE,GAJE,CACfC,wB,8CCoCF,SAASC,GAAiBC,EAAWjY,GACnC,OAAO,IAAIuL,SAAgB,SAACC,EAASC,GACnCyM,YAAW,WACT1M,EAASyM,EAAIjY,EAAS,OACrB,MAKP,SAASmY,GACPC,EACAjW,EACAkW,EACA7B,GAGA,IAAI8B,EAAe,CAAEC,EAAG/B,EAASd,SAAU8C,EAAGrW,GAC1CsW,EAAc,CAAEF,EAAG/B,EAAST,QAASyC,EAAGrW,GACxCuW,EAAc,CAAEH,EAAG/B,EAASP,QAASuC,EAAGrW,GAGxCwW,EAAWlB,KAAKmB,MAAMC,YAAYP,GAClCQ,EAAUrB,KAAKmB,MAAMC,YAAYJ,GACjCM,EAAUtB,KAAKmB,MAAMC,YAAYH,GAErC,MAAO,CACLM,UAAWZ,EAAUO,GACrBM,SAAUb,EAAUW,GACpBG,SAAUd,EAAUU,GACpB3W,MACAkW,UAAWA,GAIf,SAASc,GACPC,EACA5C,EACA5W,GAEA,IAAIyV,EAAQ,KAIRgE,EAsCN,SACEL,GAEA,IAAI3D,EAAQ,KACRlJ,EAAQ,KACU,MAAhB6M,EAAUM,GAAa3D,OAAOqD,EAAUO,GAAKP,EAAUQ,GAG3DrN,EAAQwJ,OAAOqD,EAAUO,GAAKP,EAAUR,GAFxCnD,EAAK,mDAA+C2D,EAAUO,GAIhE,MAAO,CAAElE,QAAOlJ,SAhDIsN,CAAqBL,EAAQJ,WAC7CU,EAkDN,SACER,EACA/C,GAEA,IAAId,EAAuB,KACvBlJ,EAAQ,KACRwN,EAAS,KAOM,MAAfT,EAASI,EACQ,MAAfJ,EAASI,IACXK,EAAI9X,IAAOqX,EAASK,GAAKL,EAASM,GAAKN,EAASV,EAAGrC,GAAY,IACxDyD,UAGLzN,EAAQwN,EAAE7X,SAGZuT,EAAK,gDAA4C6D,EAASK,GAG5DpN,EAAQ+M,EAASK,EAGnB,MAAO,CAAElE,QAAOlJ,SA9EG0N,CAAoBT,EAAQF,SAAU1C,EAASL,YAC9D2D,EAgFN,SACEb,EACA5C,GAEA,IAAIhB,EAAuB,KACvBlJ,EAAQ,KACRwN,EAAS,KACM,MAAfV,EAASK,EACQ,MAAfL,EAASK,IACXK,EAAI9X,IAAOoX,EAASM,GAAKN,EAASO,GAAKP,EAAST,EAAGnC,IAC5CuD,UAGLzN,EAAQwN,EAAE7X,SAGZuT,EAAK,gDAA4C4D,EAASM,GAG5DpN,EAAQ8M,EAASM,EAGnB,MAAO,CAAElE,QAAOlJ,SAtGG4N,CAAoBX,EAAQH,SAAUzC,EAASH,YAKlE,GAHY2D,QACVX,EAAchE,OAASqE,EAAarE,OAASyE,EAAazE,OAQ1D,MALAA,EAAK,wBAAoB+D,EAAQjX,IAAM,EAAlC,OACDkX,EAAchE,QAAOA,EAAQA,EAAM4E,OAAN,YAAkBZ,EAAchE,MAAhC,QAC7BqE,EAAarE,QAAOA,EAAQA,EAAM4E,OAAN,YAAkBP,EAAarE,MAA/B,QAC5ByE,EAAazE,QAAOA,EAAQA,EAAM4E,OAAN,YAAkBH,EAAazE,MAA/B,QAE1B,IAAIwB,MAAMxB,GACV,IAAD,UACD1V,EAAQ0Z,EAAclN,MACtBlK,EAAG,UAAGyX,EAAavN,aAAhB,aAAG,EAAoB9J,UAC1BhB,EAAK,UAAGqY,EAAavN,aAAhB,aAAG,EAAoB7J,WAC5B9C,EAAI,UAAGsa,EAAa3N,aAAhB,aAAG,EAAoB+N,WAC3BhY,EAAM,UAAG4X,EAAa3N,aAAhB,aAAG,EAAoBgO,aAC7B7Y,EAAI,UAAGoY,EAAavN,aAAhB,aAAG,EAAoB5J,cAejC,OAdY,IAAIP,EACZrC,EACAsC,EACAZ,EAAQ,EACRC,EACA9B,EACA0C,EACAkX,EAAQf,UACRe,EAAQjX,IACRvC,GA6ESwa,ICxNVC,GDwNUD,GAhNf,SACExa,EACA4X,EACA8C,GAEA,OAAO,IAAI/O,QAAJ,yCAIJ,WAAOC,EAASC,GAAhB,0CAAAqL,EAAA,yDACgB,OAAbU,EADH,uBAEC/L,EAAO,IAAIoL,MAAM,iBAFlB,0BAKDrN,QAAQC,IAAI,uBAER8Q,EAAiC,GACjCtG,EAAmB,GACnBzL,EAA2B,GAT9B,cAWqBgP,EAASgD,YAX9B,6DAWQnC,EAXR,QAYMrR,EAAcyT,OAAOpC,GAZ3B,wBAaGpE,EAAOpU,KAAP,6BACwBwY,EADxB,gCAbH,uCAkBC7P,EAAe3I,KAAKwY,GAEpBiC,EAAqB,WAAD,OAAYjC,GAAa,GAC7C7O,QAAQC,IAAI,sBAAwB4O,GAE9BD,EAAYZ,EAASkD,OAAOrC,GAC5BsC,EAAQlD,KAAKmB,MAAMgC,aAAaxC,EAAU,SAxBjD,UAyByB7M,QAAQC,QAAQmP,EAAME,EAAErC,EAAImC,EAAMG,EAAEtC,GAzB7D,QAyBOuC,EAzBP,OA0BU5Y,EAAM,EA1BhB,aA0BmBA,GAAOwY,EAAME,EAAErC,GA1BlC,kCA2ByBR,GAAiB7V,EAAK4Y,GA3B/C,QA2BSC,EA3BT,OA4BGV,EAAqB,mBAAD,OACCnY,EADD,YACQ4Y,EADR,YACqBC,EAAQC,QAAQ,GADrC,KAElBD,GAEF,IACMxE,EAAWhB,GAAmBC,eAC9ByF,EAAQ/C,GAAaC,EAAWjW,EAAKkW,EAAW7B,GAChDhW,EAAU2Y,GAAmB+B,EAAO1E,EAAU5W,GAElD2a,EAAY1a,KAAKW,GACjB,MAAOqa,GACP5G,EAAOpU,KAAKgb,EAAEjE,SAvCnB,QA0BqCzU,IA1BrC,gKA2CDqH,QAAQC,IAAI,YACZ6Q,EAAqB,sBAAuB,KAC5C9O,EAAQ,CAAEW,MAAOoO,EAAatG,SAAQzL,mBA7CrC,gEAJI,0DE4DM2S,GA7D4D,SAAC,GAMrE,IALLrH,EAKI,EALJA,KACA7B,EAII,EAJJA,OACAmJ,EAGI,EAHJA,aACAlH,EAEI,EAFJA,aAEI,kEAC4BlJ,mBAAiB,IAD7C,mBACG+I,EADH,KACasH,EADb,OAEqCrQ,mBAAiB,IAFtD,mBAEGgJ,EAFH,KAEiBsH,EAFjB,OAGwBtQ,mBAAmB,IAH3C,mBAGGiJ,EAHH,KAGWsH,EAHX,OAIwCvQ,mBAAmB,IAJ3D,mBAIGxC,EAJH,KAImBgT,EAJnB,KAiCJ,SAASlB,EAAqB5Q,EAAcsR,GAC1CK,EAAYL,GACZM,EAAiB5R,GAOnB,OApCA2B,qBAAU,WACRyM,GAASC,wBAAwBjE,GAC9BhI,MAAK,SAAC0L,GACL,OAAO4C,GACLtG,EAAKQ,KACLkD,EACA8C,MAGHxO,MAAK,SAACC,GAcX,IAA0BwO,EAbpBgB,EAAUxP,EAAOkI,QAaGsG,EAZHxO,EAAOI,MAa5BiP,EAAab,GAZTiB,GAAkB,SAACta,GAAD,4BACbA,GADa,YAEb6K,EAAOvD,uBAGbiT,OAAM,SAACZ,GACNrR,QAAQ6L,MAAMwF,GACd5G,EAAOpU,KAAKgb,EAAEjE,cAEjB,IAgBD,kBAAC,IAAMvC,SAAP,KACGpC,EAAO,CACN8B,WACAC,eACA0H,eAAgB5H,EAChBG,SACAC,aAXN,WACEA,EAAaJ,EAAMtL,Q,iBCajB+D,GAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9C+c,SAAU,CACRvO,OAAQ,OACRD,MAAO,OACPyO,OAAQ,UACRrK,UAAW,IAEbsK,iBAAkB,CAChBnP,OAAO,cAAD,OAAgB9N,EAAME,QAAQM,KAAKD,YAE3C2c,iBAAkB,CAChBtO,QAAS,OACTC,cAAe,SACfmF,SAAU,OACVS,IAAK,OACL0I,SAAU,OACV5K,OAAQ,GAEV6K,aAAc,CACZvK,SAAU,SACVwK,WAAY,OACZjM,QAAS,WAIEkM,GA1F0C,SAAC,GAQnD,IAAD,IAPJC,kBAOI,MAPS,GAOT,EANJC,EAMI,EANJA,WACAC,EAKI,EALJA,YACAC,EAII,EAJJA,YAEAvR,GAEI,EAHJwR,WAGI,EAFJxR,UAEI,kGAC4BC,oBAAS,IADrC,mBACGwR,EADH,KACaC,EADb,KAEExP,EAAUV,KAEhB,SAASmQ,IACPD,GAAY,GACZJ,IAGF,SAASM,IACPF,GAAY,GACZH,IAGF,OACE,kBAACxN,EAAA,EAAD,CAAKtB,QAAQ,OAAOC,cAAc,SAASN,MAAM,QAC/C,kBAAC,KAAD,CACEyP,OAAQR,EACRC,YAAaK,EACbJ,YAAaK,IAEZ,gBAAGE,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,6BACEC,aAAcL,EACdM,aAAcL,EACd/N,UAAWqO,aAAKhQ,EAAQ0O,SAAT,eACZ1O,EAAQ4O,iBAAmBW,KAG9B,wBACMK,EAAa,CAAEjO,UAAU,GAAD,OAAK3B,EAAQ6O,oBAEzC,0BAAWgB,KACX,kBAACtK,GAAA,EAAD,CACEgC,QAAQ,YACR3H,MAAM,gBACN+B,UAAW3B,EAAQ+O,cAElBG,QAMX,kBAACrN,EAAA,EAAD,CACEtB,QAAQ,OACRC,cAAc,SACdmF,SAAS,OACTsK,QAAS,EACTC,UAAW,GAEVpS,KCmCMqS,GA3FkE,SAAC,GAI3E,IAHLvL,EAGI,EAHJA,cACAC,EAEI,EAFJA,cAEI,oDACsB9G,mBAA4B,IAAIpI,MADtD,mBACGya,EADH,KACUC,EADV,KAEEC,EAAqBC,qBAAWnT,GAFlC,8CAQJ,WAA8BgT,GAA9B,UAAAvG,EAAA,sDACEuG,EAAM3c,SAAQ,SAACoT,GAEbwJ,GAAS,SAACG,GACR,GAAKA,EAAQ3a,IAAIgR,EAAKQ,MAKpB,OAAOmJ,EAJP,IAAMC,EAAY,IAAI9a,IAAI6a,GAE1B,OADAC,EAAU3a,IAAI+Q,EAAKQ,KAAMR,GAClB4J,QAPf,4CARI,sBA2BJ,SAASC,EAAiBC,GACxBL,EAAmBhT,mBAAmBqT,GAGxC,SAASC,EAAiB/J,EAAYtL,GACpC8U,GAAS,SAACG,GACR,IAAMC,EAAY,IAAI9a,IAAI6a,GAE1B,OADAC,EAAUvU,OAAO2K,EAAKQ,MACfoJ,KAGTH,EAAmB5S,mBAAmB,CACpC/K,SAAUkU,EAAKQ,KACf9L,mBAIJ,OAxCA6C,qBAAU,WACR7B,QAAQC,IAAI,uBACX,CAAC4T,EAAOC,IAuCT,kBAAC,GAAD,CACExL,cAAeA,EACfE,MArDQ,qBAsDRD,UAvDY,yBAwDZF,cAAeA,GAEf,kBAAC,GAAD,CACEwK,YA7BN,aA8BMC,YA5BN,aA6BMF,WAtDF,4CAuDED,WAAW,mBAEV,YAAIkB,EAAM/Z,UAAU/C,KAAI,SAACuT,GACxB,OACE,kBAAC,GAAD,CACEsH,aAAcuC,EACdha,IAAKmQ,EAAKQ,KACVR,KAAMA,EACNI,aAAc2J,EACd5L,OAAQ,gBACN8B,EADM,EACNA,SACAC,EAFM,EAENA,aACA0H,EAHM,EAGNA,eACAxH,EAJM,EAINA,aACAD,EALM,EAKNA,OALM,OAON,kBAAC,GAAD,CACEF,SAAUA,EACVC,aAAcA,EACdF,KAAM4H,EACNzH,OAAQA,EACRC,aAAcA,aC7FjB4J,GCOgD,SAAC,GAGzD,IAFL/I,EAEI,EAFJA,KAGM9H,GADF,wBACYV,MADZ,EAGsCvB,mBFH1B,0BEAZ,mBAGG6G,EAHH,KAGkBkM,EAHlB,KAWJ,OACE,kBAACC,EAAA,EAAD,CACExJ,QAAQ,aACRO,KAAMA,EACNkJ,OAAO,OACPrP,UAAW3B,EAAQK,OACnBL,QAAS,CAAE6F,MAAO7F,EAAQ0C,cAE1B,kBAAC,GAAD,CACEmC,cAbN,SAA2BoM,GACzBH,EAAiBG,IAabrM,cAAeA,M,UCGRtF,GAnCGC,aAAW,SAAC5N,GAAD,MAAmB,CAC9C6N,KAAM,CACJU,MAAO,OACPC,OAAQ,OACR+Q,UAAW,OACX9e,WAAYT,EAAME,QAAQO,WAAWyT,MACrC9C,QAASpR,EAAMqR,QAAQ,GACvBwB,SAAU,OACVjE,QAAS,OACTC,cAAe,SACfJ,OAAQzO,EAAMyO,OAAOsF,cACrB9D,SAAU,WACV5E,IAAK,EACLmU,KAAM,GAERC,UAAW,CACTnN,aAAa,aAAD,OAAetS,EAAME,QAAQ+Q,UAE3CmC,MAAO,CACLmL,UAAWve,EAAMqR,QAAQ,GACzBwB,SAAU,SAEZ6M,KAAM,CACJ9Q,QAAS,gBAEX4C,QAAS,CACP+M,UAAWve,EAAMqR,QAAQ,GACzBzC,QAAS,OACT+Q,SAAU,GAEZC,UAAW,CACTD,SAAU,O,UC9BRhS,GAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9C6N,KAAM,CACJgF,SAAU,MACV/E,OAAO,aAAD,OAAe9N,EAAME,QAAQ+Q,SACnClD,aAAc/N,EAAMmU,MAAMpG,aAC1BC,gBAAiBhO,EAAME,QAAQO,WAAWyT,MAC1C,gBAAiB,CACflG,gBAAiBhO,EAAME,QAAQO,WAAWC,QAC1CoN,OAAO,aAAD,OAAe9N,EAAME,QAAQC,QAAQC,OAE7C,UAAW,CACT4N,gBAAiBhO,EAAME,QAAQO,WAAWC,SAE5Cmf,QAAS,QA4DEC,GA1CoD,SAAC,GAU7D,IATLC,EASI,EATJA,MASI,IARJxS,aAQI,MARI,GAQJ,MAPJmI,YAOI,MAPG,GAOH,MANJsK,mBAMI,MANU,GAMV,MALJC,kBAKI,MALS,GAKT,MAJJxJ,aAII,aAHJsC,YAGI,MAHG,OAGH,MAFJ3I,gBAEI,MAFO,SAACC,KAER,EACEhC,GADF,EADJ6R,UAEgBvS,MAWhB,OACE,kBAACwS,GAAA,EAAD,CACEvK,QAAQ,SACRmK,MAAOA,EACPxS,MAAOA,EACPmI,KAAMA,EACNsK,YAAaA,EACbvJ,MAAOA,EACP8G,WAAY0C,EACZlH,KAAMA,EACNqH,WAAY,CACVC,kBAAkB,EAClBhS,QAAS,CAAER,KAAMQ,EAAQR,OAE3B0E,OAAO,QACPnC,SAxBJ,SACEC,GAEa,WAAT0I,GAAqBhC,OAAO1G,EAAMsI,OAAOpL,OAAS,GAGpD6C,EAASC,OC/BAiQ,GApBW1S,aAAW,SAAC5N,GAAD,MAAmB,CACtD6N,KAAM,CACJW,OAAQ,OACRD,MAAO,OACPK,QAAS,OACTC,cAAe,UAEjB0R,mBAAoB,CAClB3R,QAAS,OACTC,cAAe,SACf4F,IAAK,OACLlG,MAAO,MACPiS,SAAU,QACV3N,SAAU,UAEZ4N,gBAAiB,CACflC,UAAW,QCmGAmC,GA7GqE,SAAC,GAE/E,oBAAC,IACCrS,EAAUiS,KADZ,EAEsBlU,mBAAS,GAF/B,mBAEGrL,EAFH,KAEU4f,EAFV,OAGoBvU,mBAAS,GAH7B,mBAGG9K,EAHH,KAGSkC,EAHT,OAIoB4I,mBAAS,GAJ7B,mBAIGwU,EAJH,KAISC,EAJT,OAKgCzU,mBAAS,IALzC,mBAKGmL,EALH,KAKeuJ,EALf,OAMgC1U,mBAAS,IANzC,mBAMGqL,EANH,KAMesJ,EANf,KAyDJ,OAjDAtU,qBAAU,WACR,IAAIuU,EAAapK,GAAmBC,eACpC8J,EAASK,EAAWlK,UACpBgK,EAAcE,EAAWzJ,YACzB/T,EAAQwd,EAAW7J,SACnB0J,EAAQG,EAAW3J,SACnB0J,EAAcC,EAAWvJ,cACxB,IA2CD,yBAAKzH,UAAW3B,EAAQR,MACtB,0BACEoT,GAAG,gBACHjR,UAAW3B,EAAQkS,mBACnBW,SAhBN,SAAsB7Q,GACpBA,EAAM8Q,iBACNvK,GAAmBe,aAAa,CAC9Bb,SAAU/V,EACVsW,QAASuJ,EACTzJ,QAAS7V,EACTiW,aACAE,iBAWE,kBAAC,GAAD,CACEsI,MAAM,gBACNC,YAAY,gBACZzS,MAAOxM,EACPgY,KAAK,SACL3I,SApDR,SACEC,GAEAsQ,EAAS5J,OAAO1G,EAAMsI,OAAOpL,WAmDzB,kBAAC,GAAD,CACEwS,MAAM,eACNC,YAAY,eACZzS,MAAOjM,EACPyX,KAAK,SACL3I,SArDR,SACEC,GAEA7M,EAAQuT,OAAO1G,EAAMsI,OAAOpL,WAoDxB,kBAAC,GAAD,CACEwS,MAAM,eACNC,YAAY,eACZzS,MAAOqT,EACP7H,KAAK,SACL3I,SAtDR,SACEC,GAEAwQ,EAAQ9J,OAAO1G,EAAMsI,OAAOpL,WAqDxB,kBAAC,GAAD,CACEwS,MAAM,cACNC,YAAY,cACZzS,MAAOgK,EACPnH,SAtDR,SACEC,GAEAyQ,EAAczQ,EAAMsI,OAAOpL,UAqDvB,kBAAC,GAAD,CACEwS,MAAM,cACNC,YAAY,cACZzS,MAAOkK,EACPrH,SAtDR,SACEC,GAEA0Q,EAAc1Q,EAAMsI,OAAOpL,WAsDzB,yBAAKyC,UAAW3B,EAAQoS,iBACtB,kBAAC5K,GAAA,EAAD,CAAQuL,KAAK,gBAAgBrI,KAAK,SAAS9K,MAAM,WAAjD,W,UCrGFN,GAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9CqhB,IAAK,CACHC,UAAW,QACXzM,cAAe,OACfwI,WAAY,SACZxK,SAAU,QACV3B,YAAY,aAAD,OAAelR,EAAME,QAAQ+Q,UAE1CsQ,aAAc,CACZvT,gBAAiBhO,EAAME,QAAQO,WAAWC,QAC1CuN,MAAOjO,EAAME,QAAQC,QAAQC,KAC7Bid,WAAY,QAEdmE,YAAa,CACX1S,eAAgB,aAChBC,WAAY,kBAwBD0S,GApBgD,SAAC,GAIzD,IAHL1B,EAGI,EAHJA,MACAxS,EAEI,EAFJA,MACGa,EACC,iCACEC,EAAUV,KAChB,OACE,kBAAC+T,GAAA,EAAD,eACErT,QAAS,CACPR,KAAMQ,EAAQgT,IACdM,QAAStT,EAAQmT,YACjBtT,SAAUG,EAAQkT,cAEpBhU,MAAOA,EACPwS,MAAOA,GACH3R,KClCJT,GAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9CqhB,IAAK,CACHC,UAAW,QACXzM,cAAe,OACfwI,WAAY,SACZxK,SAAU,QACVP,aAAa,aAAD,OAAetS,EAAME,QAAQ+Q,SACzCG,QAAS,EACToP,SAAU,QACVoB,WAAY,GAEdL,aAAc,CACZvT,gBAAiBhO,EAAME,QAAQO,WAAWC,QAC1CuN,MAAOjO,EAAME,QAAQC,QAAQC,KAC7Bid,WAAY,QAEdmE,YAAa,OAuBAK,GApBoD,SAAC,GAI7D,IAHL9B,EAGI,EAHJA,MACAxS,EAEI,EAFJA,MACGa,EACC,iCACEC,EAAUV,KAChB,OACE,kBAAC+T,GAAA,EAAD,eACErT,QAAS,CACPR,KAAMQ,EAAQgT,IACdM,QAAStT,EAAQmT,YACjBtT,SAAUG,EAAQkT,cAEpBhU,MAAOA,EACPwS,MAAOA,GACH3R,KXvBV,SAAS0T,GAAS5V,GAAuB,IAC/BC,EAAqCD,EAArCC,SAAUoB,EAA2BrB,EAA3BqB,MAAOmJ,EAAoBxK,EAApBwK,MAAUqL,EADG,YACO7V,EADP,8BAEhCmC,EAAUV,KAChB,OACE,uCACEqU,KAAK,WACLC,OAAQ1U,IAAUmJ,EAClBuK,GAAE,sCAAiCvK,GACnCwL,kBAAA,iCAA2CxL,GAC3C1G,UAAW3B,EAAQuR,WACfmC,GAEHxU,IAAUmJ,GAAS,kBAACxG,EAAA,EAAD,CAAKiS,EAAG,GAAIhW,K,SAvBjCsP,K,wBAAAA,E,0BAAAA,Q,KA4BL,IYlCe2G,GZkC0C,SAAC,GAAkB,oBAAC,IAAD,EACpChW,mBACpCqP,GAAa4G,gBAF2D,mBACnEC,EADmE,KACtDC,EADsD,KAKpElU,EAAUV,KAMhB,OACE,yBAAKqC,UAAW3B,EAAQR,MACtB,yBAAKmC,UAAW3B,EAAQoR,WACtB,kBAAC7L,GAAA,EAAD,CAAY5D,UAAW3B,EAAQ+E,OAA/B,aAEF,yBAAKpD,UAAW3B,EAAQmD,SACtB,kBAACgR,GAAA,EAAD,CACExS,UAAW3B,EAAQqR,KACnB+C,YAAY,WACZlV,MAAO+U,EACPI,UAAU,EACVC,eAAe,UACfvS,SAhBR,SAAyBC,EAAwBuS,GAC/CL,EAAeK,KAiBT,kBAAC,GAAD,CACE7C,MAAM,wBACNxS,MAAOkO,GAAa4G,iBAEtB,kBAAC,GAAD,CACE9U,MAAOkO,GAAaoH,gBACpB9C,MAAM,gCAGV,kBAAC+B,GAAD,CAAUvU,MAAO+U,EAAa5L,MAAO+E,GAAa4G,gBAChD,kBAAC,GAAD,OAEF,6BAAMC,IAAgB7G,GAAa4G,gBAAkB,yC,4DajB9CS,GAtDWlV,aAAW,SAAC5N,GAAD,OACnC6Q,YAAa,CACXhD,KAAM,CACJkV,YAAa/iB,EAAMqR,QAAQ,GAE3BpD,MAAOjO,EAAME,QAAQM,KAAKL,QAC1B,qBAAsB,CACpB6N,gBAAiBhO,EAAME,QAAQyU,OAAOqO,OAExC,4CAA6C,CAC3C/U,MAAOjO,EAAME,QAAQC,QAAQC,MAE/B,qFAAsF,CACpF4N,gBAAiB,gBAGrBwD,QAAS,CACPvD,MAAOjO,EAAME,QAAQM,KAAKL,QAC1B8iB,qBAAsBjjB,EAAMqR,QAAQ,GACpC6R,wBAAyBljB,EAAMqR,QAAQ,GACvC8R,aAAcnjB,EAAMqR,QAAQ,GAC5BgM,WAAYrd,EAAMojB,WAAWC,iBAC7B,gBAAiB,CACfhG,WAAYrd,EAAMojB,WAAWE,oBAGjCC,MAAO,CACLvR,WAAY,EACZ,aAAc,CACZ+Q,YAAa/iB,EAAMqR,QAAQ,KAG/BmB,SAAU,GACVtE,SAAU,GACV6R,MAAO,CACL1C,WAAY,UACZpP,MAAO,WAETuV,UAAW,CACT5U,QAAS,OACTG,WAAY,SACZ0F,IAAI,GAAD,OAAKzU,EAAMqR,QAAQ,GAAnB,MACHD,QAASpR,EAAMqR,QAAQ,GAAK,IAE9BoS,UAAW,CACTC,YAAa1jB,EAAMqR,QAAQ,IAE7BsS,UAAW,CACTtG,WAAY,SACZsC,SAAU,QCUDiE,IC7DVC,GD6DUD,GAzCf,SAAwB1X,GACtB,IAAMmC,EAAUyU,KAEda,EAMEzX,EANFyX,UACWG,EAKT5X,EALFuX,UACAM,EAIE7X,EAJF6X,UACA9V,EAGE/B,EAHF+B,MACA+V,EAEE9X,EAFF8X,QACGjC,EAR6C,YAS9C7V,EAT8C,yDAWlD,OACE,kBAAC+X,GAAA,EAAD,eACElE,MACE,yBAAK/P,UAAW3B,EAAQmV,WACtB,kBAACM,EAAD,CAAW7V,MAAM,UAAU+B,UAAW3B,EAAQoV,YAC9C,kBAAC7P,GAAA,EAAD,CAAYgC,QAAQ,QAAQ5F,UAAW3B,EAAQsV,WAC5CA,GAEH,kBAAC/P,GAAA,EAAD,CAAYgC,QAAQ,UAAU3H,MAAM,WACjC8V,IAIPG,MAAO,CACL,oBAAqBjW,EACrB,uBAAwB+V,GAE1B3V,QAAS,CACPR,KAAMQ,EAAQR,KACd2D,QAASnD,EAAQmD,QACjBgB,SAAUnE,EAAQmE,SAClBtE,SAAUG,EAAQH,SAClBqV,MAAOlV,EAAQkV,MACfxD,MAAO1R,EAAQ0R,QAEbgC,KEmDJpU,GAAYC,aAAW,SAAC5N,GAAD,OAC3B6Q,YAAa,CACXhD,KAAM,CACJe,QAAS,eACTiE,SAAU,OACVzB,QAAQ,GAAD,OAAKpR,EAAMqR,QAAQ,GAAnB,cAA2BrR,EAAMqR,QAAQ,GAAzC,YAKE8S,GApGgD,SAACjY,GAAW,IACjEkY,EAAkClY,EAAlCkY,mBACF/V,GAFkE,YAC9BnC,EAD8B,wBAExDyB,MAEhB,OACE,kBAAC0W,GAAA,EAAD,CACErU,UAAW3B,EAAQR,KACnByW,gBAAiB,CAAC,KAClBC,oBAAqB,kBAACC,GAAA,EAAD,MACrBC,kBAAmB,kBAACC,GAAA,EAAD,MACnBC,eAAgB,yBAAKT,MAAO,CAAE3V,MAAO,OAErC,kBAAC,GAAD,CACEqW,OAAO,IACPjB,UAAU,kBACVF,UAAWoB,KACXd,UACEK,EAAmBhb,eAAnB,UACOgb,EAAmBhb,eAAe9G,cADzC,aAEM8hB,EAAmBhb,eAAe9H,KAAKoC,WAAa,EAF1D,YAGQ0gB,EAAmBhb,eAAe9H,KAAKmC,UAH/C,YAG4D2gB,EAAmBhb,eAAe9H,KAAKqC,cAHnG,YAIMygB,EAAmBhb,eAAexI,KAJxC,sBAKkBwjB,EAAmBhb,eAAerI,MAAMsb,QAAQ,IAC9D,KAGR,kBAAC,GAAD,CACEuI,OAAO,IACPjB,UAAU,uBACVF,UAAWqB,KACXf,UACEK,EAAmB/a,kBAAnB,WACQ+a,EAAmB/a,kBAAkBtI,MAAMsb,QAAQ,IACvD,KAGR,kBAAC,GAAD,CACEuI,OAAO,IACPjB,UAAU,oBACVF,UAAWqB,KACXf,UACEK,EAAmB9a,gBAAnB,WACQ8a,EAAmB9a,gBAAgBqB,OAAO0R,QAAQ,IACtD,KAGR,kBAAC,GAAD,CACEuI,OAAO,IACPjB,UAAU,0BACVF,UAAWoB,KACXd,UAAW,IAEVK,EAAmB7a,gBAAgB5H,KAAI,SAACiD,GACvC,OACE,kBAAC,GAAD,CACEG,IAAG,cAASH,EAAMtC,eAClBsiB,OAAM,cAAShgB,EAAMtC,eACrBmhB,UAAWoB,KACXlB,UAAS,UAAK/e,EAAMtC,eACpByhB,UAAS,WACPnf,EAAMtD,KAAKoC,WAAa,EADjB,YAELkB,EAAMtD,KAAKmC,UAFN,YAEmBmB,EAAMtD,KAAKqC,cAF9B,YAGPiB,EAAMhE,KAHC,sBAIKgE,EAAM7D,MAAMsb,QAAQ,UAK1C,kBAAC,GAAD,CACEuI,OAAO,IACPjB,UAAU,0BACVF,UAAWqB,KACXf,UAAW,IAEVK,EAAmB5a,gBAAgB7H,KAAI,SAACkD,GACvC,OACE,kBAAC,GAAD,CACEE,IAAG,cAASF,EAAMvC,eAClBsiB,OAAM,cAAS/f,EAAMvC,eACrBmhB,UAAWqB,KACXnB,UAAS,UAAK9e,EAAMvC,eACpByhB,UAAS,WAAMlf,EAAM9D,MAAMsb,QAAQ,Y,oBDlG5CwH,O,qBAAAA,I,uBAAAA,I,iBAAAA,I,iBAAAA,I,aAAAA,I,eAAAA,I,eAAAA,I,mBAAAA,I,yBAAAA,I,qBAAAA,I,wBAAAA,I,yBAAAA,Q,KAeUA,U,UEOTlW,GAAYC,aAAW,SAAC5N,GAAD,OAC3B6Q,YAAa,CACXkU,aAAc,CACZxW,MAAO,QACP8O,WAAY,SACZsC,SAAU,QAuGDqF,ICrHVC,GDqHUD,GAlGf,SAAsB9Y,GACpB,IAAMgZ,EAAkBpC,KAClBzU,EAAUV,KAEdM,EAQE/B,EARF+B,MACA+V,EAOE9X,EAPF8X,QACA9a,EAMEgD,EANFhD,aAN4C,EAY1CgD,EALFjI,kBAP4C,MAO/B,GAP+B,IAY1CiI,EAJFtL,YAR4C,MAQrC,EARqC,IAY1CsL,EAHFiZ,cAT4C,SAU5Cla,EAEEiB,EAFFjB,iBACG8W,EAXyC,YAY1C7V,EAZ0C,oFAkB9C,OAJAO,qBAAU,WACR7B,QAAQC,IAAI,+BAAiCjK,KAC5C,IAGD,kBAACqjB,GAAA,EAAD,eACElE,MACE,yBAAK/P,UAAWkV,EAAgB1B,WAC9B,kBAACtT,EAAA,EAAD,CAAKsQ,SAAS,QACX2E,EACC,kBAACvR,GAAA,EAAD,CAAYgC,QAAQ,QAAQ5F,UAAWkV,EAAgBvB,WAAvD,QAIA,kBAAC/P,GAAA,EAAD,CAAYgC,QAAQ,QAAQ5F,UAAWkV,EAAgBvB,WACpD/iB,IAINukB,EACGjc,EAAavH,KAAI,SAACkI,GAChB,OACE,kBAAC+J,GAAA,EAAD,CACE7O,IAAG,oBAAe8E,EAAYvH,eAC9BsT,QAAQ,QACR5F,UAAW3B,EAAQ0W,cAElBlb,EAAYvH,kBAInB4G,EAAavH,KAAI,SAACkI,GAChB,OACE,kBAAC+J,GAAA,EAAD,CACE7O,IAAG,oBAAe8E,EAAYvH,eAC9BsT,QAAQ,QACR5F,UAAW3B,EAAQ0W,cAElBlb,EACEub,oBAAoBnhB,GACpB1C,mBAAmBX,EAAO,GAAGwB,gBAC7Bia,QAAQ,OAIpB8I,EACC,kBAACvR,GAAA,EAAD,CACE5D,UAAW3B,EAAQ0W,aACnBnP,QAAQ,UACR3H,MAAM,WAHR,UAQA,kBAAC2F,GAAA,EAAD,CACE5D,UAAW3B,EAAQ0W,aACnBnP,QAAQ,UACR3H,MAAM,WAELhD,EACEma,oBAAoBnhB,GACpB1C,mBAAmBX,EAAO,GAAG8J,cAC7B2R,QAAQ,KAKnB6H,MAAO,CACL,oBAAqBjW,EACrB,uBAAwB+V,GAE1B3V,QAAS,CACPR,KAAMqX,EAAgBrX,KACtB2D,QAAS0T,EAAgB1T,QACzBgB,SAAU0S,EAAgB1S,SAC1BtE,SAAUgX,EAAgBhX,SAC1BqV,MAAO2B,EAAgB3B,MACvBxD,MAAOmF,EAAgBnF,QAErBgC,KExEKsD,GAtCC,SAACnZ,GAAyB,IAChChD,EAAuDgD,EAAvDhD,aAAcjF,EAAyCiI,EAAzCjI,WAAY2gB,EAA6B1Y,EAA7B0Y,OAAQ3Z,EAAqBiB,EAArBjB,iBADH,EAGfmB,mBAAS,IAAI7J,MAHE,mBAGhCjB,EAHgC,KAG1BkC,EAH0B,KASvC,OAJAiJ,qBAAU,WACRjJ,EAAQ,IAAIjB,KAAK0B,MAChB,CAACA,IAGF,kBAAC,GAAD,CACE2gB,OAAQA,EACRjB,UAAS,UAAKE,GAAMviB,EAAKoC,YAAhB,YAA+BpC,EAAKmC,WAC7CggB,UAAW6B,MAEX,kBAAC,GAAD,CACEV,OAAM,gBAAW3gB,EAAX,KACNA,WAAYA,EACZkhB,QAAQ,EACRjc,aAAcA,EACd+B,iBAAkBA,IAEnB,YAAIxJ,MAAM,IAAIC,QAAQC,KAAI,SAACf,GAC1B,OACE,kBAAC,GAAD,CACEgkB,OAAM,iBAAYhkB,GAClBmE,IAAG,iBAAYnE,GACfA,KAAMA,EAAO,EACbqD,WAAYA,EACZiF,aAAcA,EACd+B,iBAAkBA,SCQxB0C,GAAYC,aAAW,SAAC5N,GAAD,OAC3B6Q,YAAa,CACXhD,KAAM,CACJiD,WAAY,EACZlC,QAAS,eACTiE,SAAU,OACVzB,QAAQ,GAAD,OAAKpR,EAAMqR,QAAQ,GAAnB,cAA2BrR,EAAMqR,QAAQ,GAAzC,OAET+B,MAAO,CACLP,SAAU,SAEZ0S,QAAS,CACP5F,SAAU,EACV3L,SAAU,UAKDwR,GAzDK,SAACtZ,GAA6B,IACxCkY,EAAuBlY,EAAvBkY,mBACF/V,EAAUV,KAEhB,OACE,kBAAC0W,GAAA,EAAD,CACErU,UAAW3B,EAAQR,KACnByW,gBAAiB,CAAC,KAClBC,oBAAqB,kBAACC,GAAA,EAAD,MACrBC,kBAAmB,kBAACC,GAAA,EAAD,MACnBC,eAAgB,yBAAKT,MAAO,CAAE3V,MAAO,OAErC,kBAAC,GAAD,CACEqW,OAAO,IACPjB,UAAS,UAAKE,GAAMO,EAAmBjhB,cAAcV,MAAQ,GAApD,YACP2hB,EAAmBjhB,cAAcT,MAEnC+gB,UAAWgC,MAEV,YAAIrB,EAAmBjb,YAAYzE,UAAU/C,KAAI,SAACsC,GACjD,IAAIiF,EAAY,YACXzH,MAAMikB,KAAKtB,EAAmBlb,aAAaxE,WAE5CK,EAAG,gBAAYd,GACnB,OACE,kBAAC0hB,GAAD,CACE1a,iBAAkBmZ,EAAmB3a,iBACrC1E,IAAKA,EACL6f,OAAQ7f,EACRmE,aAAcA,EACdjF,WAAYA,UCvBpB0J,GAAYC,aAAW,SAAC5N,GAAD,OAC3B6Q,YAAa,CACXhD,KAAM,CACJe,QAAS,OACTZ,gBAAiBhO,EAAME,QAAQO,WAAWyT,MAC1CnG,aAAc/N,EAAMmU,MAAMpG,aAC1BD,OAAO,aAAD,OAAe9N,EAAME,QAAQ+Q,SACnCgD,UAAW,mBAKF2R,GAvBgD,SAAC1Z,GAAW,IACjEkY,EAAuBlY,EAAvBkY,mBACF/V,EAAUV,KAChB,OACE,yBAAKqC,UAAW3B,EAAQR,MACtB,kBAAC,GAAD,CAAauW,mBAAoBA,IACjC,kBAAC,GAAD,CAAaA,mBAAoBA,MCgBjCzW,GAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9C6lB,iBAAkB,CAChBC,KAAM,EACNtP,SAAU,OACVpF,QAASpR,EAAMqR,QAAQ,IAEzB0U,oBAAqB,CACnBnX,QAAS,OACTC,cAAe,SACfC,eAAgB,UAChBsC,QAASpR,EAAMqR,QAAQ,GACvBoD,IAAI,GAAD,OAAKzU,EAAMqR,QAAQ,GAAnB,MACH4C,UAAW,kBAIA+R,GAxCgD,SAAC,GAE1D,oBAAC,IACCrH,EAAqBC,qBAAWnT,GAChC4C,EAAUV,KAEhB,OACE,yBAAKqC,UAAW3B,EAAQwX,kBACtB,yBAAK7V,UAAW3B,EAAQ0X,qBACrBtkB,MAAMikB,KAAK/G,EAAmB9S,oBAAoBnH,UAAU/C,KAC3D,SAACyiB,GACC,OACE,kBAAC,GAAD,CACErf,IAAG,cAASqf,EAAmBjhB,cAAcV,MAA1C,aAAoD2hB,EAAmBjhB,cAAcT,MACxF0hB,mBAAoBA,W,SJT/Ba,K,YAAAA,E,cAAAA,E,SAAAA,Q,KAML,IKbKgB,GL6CCtY,GAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9CkmB,wBAAyB,CACvBJ,KAAM,EACNlX,QAAS,OACTC,cAAe,SACf2R,SAAU,EACV7N,UAAW,GAEbwT,0BAA2B,CACzBvX,QAAS,OACTG,WAAY,YAEdqX,yBAA0B,CACxB1C,YAAa1jB,EAAMqR,QAAQ,GAC3B8R,aAAcnjB,EAAMqR,QAAQ,GAC5BiQ,UAAW,UAEb+E,2BAA4B,CAC1B1G,SAAU,EACV/Q,QAAS,OACT+D,UAAW,MACX6N,SAAU,WAIC8F,GAzD8D,SAAC,GAExE,oBAAC,IACCjY,EAAUV,KADZ,EAEkCvB,mBAAiB6Y,GAAQsB,MAF3D,mBAEGjE,EAFH,KAEgBC,EAFhB,KAGuB3D,qBAAWnT,GAKtC,OACE,yBAAKuE,UAAW3B,EAAQ6X,yBACtB,yBAAKlW,UAAW3B,EAAQ8X,2BACtB,kBAACvS,GAAA,EAAD,CAAY5D,UAAW3B,EAAQ+X,yBAA0BxQ,QAAQ,MAAjE,gBAGA,kBAAC4M,GAAA,EAAD,CACEpS,SAVR,SAAyBC,EAAwBuS,GAC/CL,EAAeK,IAUTD,eAAe,UACfpV,MAAO+U,GAEP,kBAAC,GAAD,CAAevC,MAAM,OAAOxS,MAAO0X,GAAQsB,OAC3C,kBAAC,GAAD,CAAexG,MAAM,QAAQxS,MAAO0X,GAAQuB,UAGhD,yBAAKxW,UAAW3B,EAAQgY,4BACrB/D,IAAgB2C,GAAQsB,MAAQ,kBAAC,GAAD,U,SKvCpCN,K,2BAAAA,E,sCAAAA,Q,KAKL,IAmCMtY,GAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9CymB,iBAAkB,CAChBjY,OAAQ,OACRD,MAAO,OACPK,QAAS,QAEX8X,eAAgB,CACdnI,UAAWve,EAAMqR,QAAQ,IACzB2C,SAAU,QACV2L,SAAU,GAEZD,KAAM,CACJ9Q,QAAS,oBAIE+X,GAnDgD,SAAC,GAE1D,oBAAC,IACCtY,EAAUV,KADZ,EAEkCvB,mBACpC6Z,GAAYW,cAHV,mBAEGtE,EAFH,KAEgBC,EAFhB,KAUJ,OACE,yBAAKvS,UAAW3B,EAAQoY,kBACtB,yBAAKzW,UAAW3B,EAAQqY,gBACtB,kBAAClE,GAAA,EAAD,CACExS,UAAW3B,EAAQqR,KACnB+C,YAAY,WACZlV,MAAO+U,EACPI,UAAU,EACVC,eAAe,UACfvS,SAbR,SAAyBC,EAAwBuS,GAC/CL,EAAeK,KAcT,kBAAC,GAAD,CAAa7C,MAAM,eAAexS,MAAO0Y,GAAYW,eACrD,kBAAC,GAAD,CACE7G,MAAM,oBACNxS,MAAO0Y,GAAYY,sBAIxBvE,IAAgB2D,GAAYW,cAAgB,kBAAC,GAAD,QCa7CjZ,GAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9C8mB,eAAgB,CACdlY,QAAS,OACTJ,OAAQ,OACRD,MAAO,QAETwY,kBAAmB,CACjBjB,KAAM,OC3DKkB,GDQ6B,SAAC9a,GAC3C,IAAMmC,EAAUV,KACVsZ,EAAqBC,KAF0B,EAIP9a,oBAAkB,GAJX,mBAI9C+a,EAJ8C,KAI7BC,EAJ6B,OAKbhb,oBAAkB,GALL,mBAK9Cib,EAL8C,KAKhCC,EALgC,KAuBrD,OACE,yBAAKtX,UAAW3B,EAAQyY,gBACtB,kBAAC,EAAD,CACEzX,kBAnBN,WACEiY,GAAgB,IAmBZhY,oBAhBN,WACEgY,GAAgB,IAgBZlY,eAbN,WACEgY,GAAmB,IAaf7X,iBAVN,WACE6X,GAAmB,MAWjB,kBAAC,GAAD,CAAajR,KAAMgR,IACnB,yBACEnX,UAAWqO,aAAKhQ,EAAQ0Y,kBAAmBE,EAAmBzV,QAA/C,eACZyV,EAAmBhV,aAAekV,KAGpCE,GAAgB,kBAAC,GAAD,MACjB,kBAAC,GAAD,SEjBF1Z,GAAYC,aAAW,SAAC5N,GAAD,MAAmB,CAC9C6N,KAAM,CACJW,OAAQ,QACRD,MAAO,QACPP,gBAAiBhO,EAAME,QAAQO,WAAWC,aCjC/B6mB,GDa0B,SAACrb,GACxC,IAAMmC,EAAUV,KAEhB,OACE,kBAAC6Z,EAAA,EAAD,CAAexnB,MAAOA,GACpB,kBAACynB,EAAA,EAAD,KACE,kBAAC,EAAD,KACE,yBAAKzX,UAAWqO,aAAKhQ,EAAQR,OAC3B,kBAAC,GAAD,WElBZ6Z,IAASrU,OACP,kBAAC,IAAMsU,WAAP,KACE,kBAAC,IAAMlS,SAAP,KACE,kBAAC,GAAD,QAGJmS,SAASC,eAAe,U","file":"static/js/main.dc1c6846.chunk.js","sourcesContent":["enum Feeder {\r\n  TETUAN,\r\n  MERCEDES,\r\n  NORTHSIDE,\r\n  ZAMPEN,\r\n  GUIWAN,\r\n  TUMAGA,\r\n  ARENA_BLANCO,\r\n  PRESA,\r\n  SAN_JOSE,\r\n  CALARIAN,\r\n  BALIWASAN,\r\n  DEDICATED_LINE,\r\n  INTERCO,\r\n  CULIANAN,\r\n  CURUAN,\r\n  FISHING_PORT,\r\n  TALISAYAN,\r\n  LABUAN,\r\n  RECODO,\r\n  SINUNUC,\r\n  BIG_FISH,\r\n  TIN_CAN_ORIENTAL,\r\n  MEGA_FISHIN_CORP,\r\n  MEGA_FISHIN_CORP2,\r\n  PASONANCA,\r\n  SAN_ROQUE,\r\n  ACLEM,\r\n  GOVERNOR_ALVAREZ,\r\n  VETERANS_AVENUE,\r\n  NUNEZ,\r\n  STA_CATALINA,\r\n  RIO_HONDO,\r\n  GUARDIA_NACIONAL,\r\n  CAMPANER,\r\n  KCC_MALL,\r\n}\r\n\r\nexport default Feeder;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#45aaf2\",\r\n      dark: \"#2d98da\",\r\n      contrastText: \"white\",\r\n    },\r\n    secondary: {\r\n      main: \"#fc5c65\",\r\n      dark: \"#eb3b5a\",\r\n      contrastText: \"white\",\r\n    },\r\n    text: {\r\n      primary: \"#778ca3\",\r\n      secondary: \"#B4BEC8\",\r\n    },\r\n    background: {\r\n      default: \"#F5F7F9\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","class HourlyLoadProfile {\r\n  hour: number;\r\n  kwdelSet: { fileName: string; kwdel: number }[];\r\n\r\n  constructor(hour: number) {\r\n    this.hour = hour;\r\n    this.kwdelSet = [];\r\n  }\r\n\r\n  addKwdel(kwdel: number, fileName: string): void {\r\n    this.kwdelSet.push({ fileName, kwdel });\r\n  }\r\n\r\n  removeKwdel(fileName: string) {\r\n    this.kwdelSet = this.kwdelSet.filter(\r\n      (kwdel) => kwdel.fileName !== fileName\r\n    );\r\n  }\r\n\r\n  getTotalKwdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwdel;\r\n    }\r\n    return total / this.kwdelSet.length;\r\n  }\r\n\r\n  getRawTotal(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwdel;\r\n    }\r\n    return total;\r\n  }\r\n}\r\n\r\nexport default HourlyLoadProfile;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport HourlyLoadProfile from \"./HourlyLoadProfile\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\n\r\nclass DailyLoadProfile {\r\n  date: Date;\r\n  hourlyLoadProfiles: HourlyLoadProfile[];\r\n\r\n  constructor(date: Date) {\r\n    this.date = date;\r\n    this.hourlyLoadProfiles = this.buildHourlyLoadProfiles();\r\n  }\r\n\r\n  private buildHourlyLoadProfiles() {\r\n    return [...Array(24).keys()].map((hour) => {\r\n      return new HourlyLoadProfile(hour);\r\n    });\r\n  }\r\n\r\n  addLoadProfileData(rawData: LoadProfile_Raw) {\r\n    this.hourlyLoadProfiles[rawData.hour].addKwdel(\r\n      rawData.kwdel,\r\n      rawData.fileName\r\n    );\r\n  }\r\n\r\n  removeLoadProfileData(fileName: string) {\r\n    this.hourlyLoadProfiles.forEach((hourloadProfile) => {\r\n      hourloadProfile.removeKwdel(fileName);\r\n    });\r\n  }\r\n\r\n  getMaxAndSum(): {\r\n    max: LoadProfileMax;\r\n    sum: LoadProfileSum;\r\n  } {\r\n    let maxKwdel = 0;\r\n    let hour = 1;\r\n    let sum = 0;\r\n\r\n    for (let hourlyLoadProfile of this.hourlyLoadProfiles) {\r\n      let kwdel = hourlyLoadProfile.getTotalKwdel();\r\n      sum += kwdel;\r\n      if (kwdel > maxKwdel) {\r\n        hour = hourlyLoadProfile.hour;\r\n        maxKwdel = kwdel;\r\n      }\r\n    }\r\n    return {\r\n      max: { kwdel: maxKwdel, hour, meteringPoint: \"\", date: new Date() },\r\n      sum: { kwdel: sum, meteringPoint: \"\" },\r\n    };\r\n  }\r\n}\r\n\r\nexport default DailyLoadProfile;\r\n","import moment from \"moment\";\r\n\r\nclass BillingPeriod {\r\n  month: number;\r\n  year: number;\r\n  startDate: Date;\r\n  enddDate: Date;\r\n\r\n  constructor(month: number, year: number) {\r\n    this.month = month;\r\n    this.year = year;\r\n    this.startDate = this.getStartDate();\r\n    this.enddDate = this.getEndDate();\r\n  }\r\n\r\n  private getStartDate() {\r\n    let startMonth = this.month === 1 ? 12 : this.month - 1;\r\n    let startYear = this.month === 1 ? this.year - 1 : this.year;\r\n    return moment(`${startMonth}/26/${startYear}`, \"MM/DD/YYYY\").toDate();\r\n  }\r\n\r\n  private getEndDate() {\r\n    return moment(`${this.month}/25/${this.year}`, \"MM/DD/YYYY\").toDate();\r\n  }\r\n\r\n  equalsTo(billingPeriod: BillingPeriod): boolean {\r\n    if (\r\n      this.month === null ||\r\n      billingPeriod == null ||\r\n      billingPeriod.month === null\r\n    ) {\r\n      return false;\r\n    }\r\n    return (\r\n      this.month === billingPeriod.month && this.year === billingPeriod.year\r\n    );\r\n  }\r\n}\r\n\r\nexport default BillingPeriod;\r\n","import BillingPeriod from \"../../common/BillingPeriod\";\r\nimport { Month } from \"../../enums\";\r\n\r\nclass LoadProfile_Raw {\r\n  kwdel: number;\r\n  hour: number;\r\n  day: number;\r\n  month: Month;\r\n  year: number;\r\n  minute: number;\r\n  meteringPoint: string;\r\n  row: number;\r\n  billingPeriod: BillingPeriod;\r\n  fileName: string;\r\n\r\n  constructor(\r\n    kwdel: number,\r\n    day: number,\r\n    month: Month,\r\n    year: number,\r\n    hour: number,\r\n    minute: number,\r\n    meteringPoint: string,\r\n    row: number,\r\n    fileName: string = \"\"\r\n  ) {\r\n    this.kwdel = kwdel;\r\n    this.day = day;\r\n    this.hour = hour;\r\n    this.month = month;\r\n    this.year = year;\r\n    this.minute = minute;\r\n    this.meteringPoint = meteringPoint;\r\n    this.row = row;\r\n    this.fileName = fileName;\r\n    if (this.hour === 0 && this.minute === 0) {\r\n      this.hour = 23;\r\n      this.minute = 59;\r\n      if (this.day - 1 <= 0) {\r\n        let date = new Date(`${this.year}/${this.month}/${this.day}`);\r\n        date.setDate(date.getDate() - 1);\r\n        this.day = date.getDate();\r\n        this.month = date.getMonth() + 1;\r\n        this.year = date.getFullYear();\r\n      } else {\r\n        this.day--;\r\n      }\r\n    }\r\n    let billingMonth = this.getBillingMonth({\r\n      month: this.month,\r\n      day: this.day,\r\n      hour: this.hour,\r\n      minute: this.minute,\r\n    });\r\n\r\n    this.billingPeriod = new BillingPeriod(billingMonth, this.year);\r\n\r\n    if (this.minute === 0) {\r\n      this.hour--;\r\n      if (this.hour < 0) {\r\n        this.hour = 23;\r\n      }\r\n    }\r\n  }\r\n\r\n  getBillingMonth({\r\n    month,\r\n    day,\r\n    minute,\r\n    hour,\r\n  }: {\r\n    month: number;\r\n    day: number;\r\n    minute: number;\r\n    hour: number;\r\n  }) {\r\n    let billingMonth = month;\r\n    if (day >= 26) {\r\n      if (!(hour === 0 && minute === 0 && day === 26)) {\r\n        billingMonth = ++billingMonth % 12;\r\n        if (billingMonth === 0) {\r\n          billingMonth = 12;\r\n        }\r\n      }\r\n    }\r\n    return billingMonth;\r\n  }\r\n}\r\n\r\nexport default LoadProfile_Raw;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport DailyLoadProfile from \"./DailyLoadProfile\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\n\r\nclass LoadProfile {\r\n  meteringPoint: string;\r\n  dailyLoadProfiles: Map<string, DailyLoadProfile>;\r\n  max: LoadProfileMax;\r\n  sum: LoadProfileSum;\r\n\r\n  constructor(meteringPoint: string) {\r\n    this.meteringPoint = meteringPoint;\r\n    this.dailyLoadProfiles = new Map();\r\n    this.max = { kwdel: 0, hour: 1, meteringPoint: \"\", date: new Date() };\r\n    this.sum = { kwdel: 0, meteringPoint: \"\" };\r\n  }\r\n\r\n  addLoadProfileData(rawData: LoadProfile_Raw, dateString: string) {\r\n    if (!this.dailyLoadProfiles.has(dateString)) {\r\n      this.dailyLoadProfiles.set(\r\n        dateString,\r\n        new DailyLoadProfile(new Date(dateString))\r\n      );\r\n    }\r\n    this.dailyLoadProfiles.get(dateString)?.addLoadProfileData(rawData);\r\n  }\r\n\r\n  removeLoadPRofileData(fileName: string) {\r\n    this.dailyLoadProfiles.forEach((dailyLoadProfile) => {\r\n      dailyLoadProfile.removeLoadProfileData(fileName);\r\n    });\r\n  }\r\n\r\n  getDailyLoadProfile(dateString: string): DailyLoadProfile {\r\n    return this.dailyLoadProfiles.has(dateString)\r\n      ? (this.dailyLoadProfiles.get(dateString) as DailyLoadProfile)\r\n      : new DailyLoadProfile(new Date(dateString));\r\n  }\r\n\r\n  getMaxAndSum(): {\r\n    max: LoadProfileMax;\r\n    sum: LoadProfileSum;\r\n  } {\r\n    let max = 0;\r\n    let sum = 0;\r\n    let maxHour = 1;\r\n    let maxDate = new Date();\r\n\r\n    for (let dailyLoadProfile of this.dailyLoadProfiles.values()) {\r\n      const { max: lpMax, sum: lpSum } = dailyLoadProfile.getMaxAndSum();\r\n      if (lpMax.kwdel > max) {\r\n        max = lpMax.kwdel;\r\n        maxHour = lpMax.hour;\r\n        maxDate = dailyLoadProfile.date;\r\n        sum += lpSum.kwdel;\r\n      }\r\n    }\r\n\r\n    this.max = {\r\n      kwdel: max,\r\n      hour: maxHour,\r\n      date: maxDate,\r\n      meteringPoint: this.meteringPoint,\r\n    };\r\n    this.sum = { kwdel: sum, meteringPoint: this.meteringPoint };\r\n\r\n    return {\r\n      max: this.max,\r\n      sum: this.sum,\r\n    };\r\n  }\r\n}\r\n\r\nexport default LoadProfile;\r\n","class Transformer {\r\n  static readonly HYOSUNG_20MVA = new Transformer(\r\n    \"HYOSUNG_20MVA\",\r\n    \"HYOSUNG PTX - 20MVA\",\r\n    \"TP99-8513\",\r\n    20\r\n  );\r\n  static readonly SHIHLIN_20MVA = new Transformer(\r\n    \"SHIHLIN_20MVA\",\r\n    \"SHIHLIN PTX - 20MVA\",\r\n    \"810014\",\r\n    20\r\n  );\r\n  static readonly SHIHLIN_10MVVA = new Transformer(\r\n    \"SHIHLIN_10MVVA \",\r\n    \"SHIHLIN PTX - 10MVA\",\r\n    \"T990113\",\r\n    10\r\n  );\r\n  static readonly SHIHLIN_5MVA = new Transformer(\r\n    \"SHIHLIN_5MVA\",\r\n    \"SHIHLIN PTX - 5MVA\",\r\n    \"\",\r\n    5\r\n  );\r\n  static readonly NANJING_20MVA = new Transformer(\r\n    \"NANJING_20MVA\",\r\n    \"NANJING PTX - 20MVA\",\r\n    \"610205\",\r\n    20\r\n  );\r\n  static readonly PRIME_MEIDEN_10MVA = new Transformer(\r\n    \"PRIME_MEIDEN_10MVA\",\r\n    \"PRIME MEIDEN PTX - 10MVA\",\r\n    \"\",\r\n    10\r\n  );\r\n  static readonly NEW_KOREA_10MVA = new Transformer(\r\n    \"NEW_KOREA_10MVA\",\r\n    \"NEW KOREA PTX - 10MVA\",\r\n    \"W910009\",\r\n    10\r\n  );\r\n  static readonly NEW_KOREA_5MVA = new Transformer(\r\n    \"NEW_KOREA_5MVA\",\r\n    \"NEW KOREA PTX - 5MVA\",\r\n    \"920194\",\r\n    5\r\n  );\r\n  static readonly CHANGZHOU_10MVA = new Transformer(\r\n    \"CHANGZHOU_10MVA\",\r\n    \"CHANGZHOU PTX - 10MVA\",\r\n    \"91-61-146\",\r\n    10\r\n  );\r\n  static readonly SHENDA_25MVA = new Transformer(\r\n    \"SHENDA_25MVA\",\r\n    \"SHENDA PTX - 25MVA\",\r\n    \"\",\r\n    25\r\n  );\r\n\r\n  key: string;\r\n  text: string;\r\n  serialNumber: string;\r\n  power: number;\r\n\r\n  private constructor(\r\n    key: string,\r\n    text: string,\r\n    serialNumber: string,\r\n    power: number\r\n  ) {\r\n    this.key = key;\r\n    this.text = text;\r\n    this.serialNumber = serialNumber;\r\n    this.power = power;\r\n  }\r\n\r\n  toString() {\r\n    return this.key;\r\n  }\r\n}\r\n\r\nexport default Transformer;\r\n","import Feeder from \"./Feeder\";\r\nimport Transformer from \"./Transformer\";\r\n\r\nclass SubstationItem {\r\n  transformer: Transformer;\r\n  feeders: Feeder[];\r\n\r\n  constructor(transformer: Transformer, feeders: Feeder[]) {\r\n    this.transformer = transformer;\r\n    this.feeders = feeders;\r\n  }\r\n}\r\n\r\nclass Substation {\r\n  static readonly PUTIK = new Substation(\"PUTIK\", \"PUTIK S/S\", [\r\n    new SubstationItem(Transformer.SHIHLIN_10MVVA, [\r\n      Feeder.GUIWAN,\r\n      Feeder.TUMAGA,\r\n      Feeder.ARENA_BLANCO,\r\n      Feeder.PRESA,\r\n    ]),\r\n    new SubstationItem(Transformer.HYOSUNG_20MVA, [\r\n      Feeder.TETUAN,\r\n      Feeder.MERCEDES,\r\n      Feeder.NORTHSIDE,\r\n      Feeder.ZAMPEN,\r\n    ]),\r\n  ]);\r\n  static readonly SANJOSE_GUSU = new Substation(\r\n    \"SAN JOSE GUSU\",\r\n    \"SAN JOSE GUSU S/S\",\r\n    [\r\n      new SubstationItem(Transformer.NANJING_20MVA, [\r\n        Feeder.SAN_JOSE,\r\n        Feeder.CALARIAN,\r\n        Feeder.BALIWASAN,\r\n        Feeder.DEDICATED_LINE,\r\n      ]),\r\n      new SubstationItem(Transformer.NEW_KOREA_10MVA, []),\r\n    ]\r\n  );\r\n  static readonly SANGALI = new Substation(\"SANGALI\", \"SANGALI S/S\", [\r\n    new SubstationItem(Transformer.PRIME_MEIDEN_10MVA, [\r\n      Feeder.CULIANAN,\r\n      Feeder.CURUAN,\r\n      Feeder.FISHING_PORT,\r\n    ]),\r\n  ]);\r\n  static readonly AYALA = new Substation(\"AYALA\", \"AYALA S/S\", [\r\n    new SubstationItem(Transformer.SHIHLIN_10MVVA, [\r\n      Feeder.TALISAYAN,\r\n      Feeder.LABUAN,\r\n    ]),\r\n  ]);\r\n\r\n  static readonly RECODO = new Substation(\"RECODO\", \"RECODO S/S\", [\r\n    new SubstationItem(Transformer.NEW_KOREA_10MVA, [Feeder.RECODO]),\r\n    new SubstationItem(Transformer.NEW_KOREA_5MVA, [Feeder.SINUNUC]),\r\n    new SubstationItem(Transformer.SHIHLIN_5MVA, []),\r\n  ]);\r\n  static readonly CABATANGAN = new Substation(\"CABATANGAN\", \"CABATANGAN S/S\", [\r\n    new SubstationItem(Transformer.CHANGZHOU_10MVA, [Feeder.PASONANCA]),\r\n    new SubstationItem(Transformer.PRIME_MEIDEN_10MVA, [Feeder.SAN_ROQUE]),\r\n  ]);\r\n  static readonly CAMANCHILI = new Substation(\"CAMANCHILI\", \"CAMANCHILI S/S\", [\r\n    new SubstationItem(Transformer.SHIHLIN_20MVA, [\r\n      Feeder.ACLEM,\r\n      Feeder.GOVERNOR_ALVAREZ,\r\n      Feeder.VETERANS_AVENUE,\r\n      Feeder.NUNEZ,\r\n    ]),\r\n    new SubstationItem(Transformer.SHENDA_25MVA, [\r\n      Feeder.STA_CATALINA,\r\n      Feeder.RIO_HONDO,\r\n      Feeder.GUARDIA_NACIONAL,\r\n      Feeder.CAMPANER,\r\n    ]),\r\n  ]);\r\n\r\n  key: string;\r\n  text: string;\r\n  substationItems: SubstationItem[];\r\n\r\n  private constructor(\r\n    key: string,\r\n    text: string,\r\n    substationItems: SubstationItem[]\r\n  ) {\r\n    this.key = key;\r\n    this.text = text;\r\n    this.substationItems = substationItems;\r\n  }\r\n\r\n  toStrting() {\r\n    return this.key;\r\n  }\r\n}\r\n\r\nexport default Substation;\r\n","import Feeder from \"./Feeder\";\r\nimport Substation from \"./Substation\";\r\n\r\nclass MeteringPoint {\r\n  static readonly MF3MPITZAMC01 = new MeteringPoint(\"MF3MPITZAMC01\", [\r\n    Substation.PUTIK,\r\n  ]);\r\n\r\n  static readonly MF3MPITZAMC02 = new MeteringPoint(\"MF3MPITZAMC02\", [\r\n    Substation.SANJOSE_GUSU,\r\n  ]);\r\n\r\n  static readonly MF3MPITZAMC03 = new MeteringPoint(\"MF3MPITZAMC03\", [\r\n    Substation.SANGALI,\r\n  ]);\r\n  static readonly MF3MPITZAMC04 = new MeteringPoint(\"MF3MPITZAMC04\", [\r\n    Substation.RECODO,\r\n    Substation.AYALA,\r\n  ]);\r\n  static readonly MF3MPITZAMC05 = new MeteringPoint(\"MF3MPITZAMC05\", [\r\n    Substation.CABATANGAN,\r\n  ]);\r\n  static readonly MF3MPITZAMC06 = new MeteringPoint(\"MF3MPITZAMC06\", []);\r\n  static readonly MF3MPITZAMC07 = new MeteringPoint(\"MF3MPITZAMC07\", [\r\n    Substation.CAMANCHILI,\r\n  ]);\r\n\r\n  key: string;\r\n  substations: Substation[];\r\n\r\n  private constructor(key: string, substations: Substation[]) {\r\n    this.key = key;\r\n    this.substations = substations;\r\n  }\r\n\r\n  toString() {\r\n    return this.key;\r\n  }\r\n\r\n  getFeeders() {\r\n    let feeders: Feeder[] = [];\r\n    for (let substation of this.substations) {\r\n      for (let substationItem of substation.substationItems) {\r\n        feeders = [...feeders, ...substationItem.feeders];\r\n      }\r\n    }\r\n    return feeders;\r\n  }\r\n\r\n  static getMeteringPoint(meteringPoint: string): MeteringPoint | null {\r\n    switch (meteringPoint.toUpperCase()) {\r\n      case this.MF3MPITZAMC01.key:\r\n        return this.MF3MPITZAMC01;\r\n      case this.MF3MPITZAMC02.key:\r\n        return this.MF3MPITZAMC02;\r\n      case this.MF3MPITZAMC03.key:\r\n        return this.MF3MPITZAMC03;\r\n      case this.MF3MPITZAMC04.key:\r\n        return this.MF3MPITZAMC04;\r\n      case this.MF3MPITZAMC05.key:\r\n        return this.MF3MPITZAMC05;\r\n      case this.MF3MPITZAMC06.key:\r\n        return this.MF3MPITZAMC06;\r\n      case this.MF3MPITZAMC07.key:\r\n        return this.MF3MPITZAMC07;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  static exists(meteringPoint: string): boolean {\r\n    switch (meteringPoint) {\r\n      case this.MF3MPITZAMC01.key:\r\n      case this.MF3MPITZAMC02.key:\r\n      case this.MF3MPITZAMC03.key:\r\n      case this.MF3MPITZAMC04.key:\r\n      case this.MF3MPITZAMC05.key:\r\n      case this.MF3MPITZAMC06.key:\r\n      case this.MF3MPITZAMC07.key:\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeteringPoint;\r\n","import { AppBar, Box } from \"@material-ui/core\";\r\nimport { Folder, Settings } from \"@material-ui/icons\";\r\nimport { ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport StyledToggleButton from \"./StyledToggleButton\";\r\n\r\nimport useStyles from \"./use-styles\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\ntype ToolbarProps = {\r\n  onSettingsToggled: () => void;\r\n  onSettingsUntoggled: () => void;\r\n  onFilesToggled: () => void;\r\n  onFilesUntoggled: () => void;\r\n};\r\n\r\nenum ToggleValues {\r\n  FILES = \"files\",\r\n  SETTINGS = \"settings\",\r\n  NONE = \"\",\r\n}\r\n\r\nconst Toolbar: React.FC<ToolbarProps> = ({\r\n  onFilesToggled,\r\n  onSettingsToggled,\r\n  onSettingsUntoggled,\r\n  onFilesUntoggled,\r\n  ...others\r\n}) => {\r\n  const [toggledButton, setToggledButton] = useState<string>(\r\n    ToggleValues.FILES\r\n  );\r\n  const [otherToggledButton, setOtherToggledButton] = useState<string>(\r\n    ToggleValues.NONE\r\n  );\r\n\r\n  function handleToggleChange(\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newToggle: string\r\n  ) {\r\n    console.log({\r\n      method: \"handleToggleChange()\",\r\n      params: { newToggle },\r\n    });\r\n\r\n    const prevToggled = toggledButton;\r\n    setToggledButton(newToggle);\r\n    if (newToggle === ToggleValues.FILES) {\r\n      onFilesToggled();\r\n    } else if (prevToggled === ToggleValues.FILES) {\r\n      onFilesUntoggled();\r\n    }\r\n  }\r\n\r\n  function handleOtherToggleChange(\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newToggle: string\r\n  ) {\r\n    console.log({\r\n      method: \"handleOtherToggleChange()\",\r\n      params: { newToggle },\r\n    });\r\n\r\n    const prevToggled = otherToggledButton;\r\n    setOtherToggledButton(newToggle);\r\n    if (newToggle === ToggleValues.SETTINGS) {\r\n      onSettingsToggled();\r\n    } else if (prevToggled === ToggleValues.SETTINGS) {\r\n      onSettingsUntoggled();\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar\r\n      elevation={4}\r\n      className={classes.root}\r\n      position=\"static\"\r\n      color=\"inherit\"\r\n    >\r\n      <Box className={classes.container}>\r\n        <Box className={classes.toggleButtonsContainer}>\r\n          <ToggleButtonGroup\r\n            onChange={handleToggleChange}\r\n            value={toggledButton}\r\n            exclusive\r\n          >\r\n            <StyledToggleButton value={ToggleValues.FILES}>\r\n              <Folder />\r\n            </StyledToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box className={classes.otherButtonsContainer}>\r\n          <ToggleButtonGroup\r\n            onChange={handleOtherToggleChange}\r\n            value={otherToggledButton}\r\n            exclusive\r\n          >\r\n            <StyledToggleButton value={ToggleValues.SETTINGS}>\r\n              <Settings />\r\n            </StyledToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport LoadProfile from \"./LoadProfile\";\r\nimport BillingPeriod from \"../../common/BillingPeriod\";\r\nimport MeteringPoint from \"../enums/MeteringPoints\";\r\nimport {\r\n  CoincidentalPeak,\r\n  DiversityFactor,\r\n  LoadProfileMax,\r\n  LoadProfileSum,\r\n  NoneCoincidentalPeak,\r\n} from \"../types\";\r\n\r\nclass MonthlyLoadProfile {\r\n  loadProfiles: Map<string, LoadProfile>;\r\n  billingPeriod: BillingPeriod;\r\n  dateStrings: Set<string>;\r\n  coincidentPeak: CoincidentalPeak | null;\r\n  nonCoincidentPeak: NoneCoincidentalPeak | null;\r\n  diversityFactor: DiversityFactor | null;\r\n  loadProfilesMax: LoadProfileMax[];\r\n  loadProfilesSum: LoadProfileSum[];\r\n  totalLoadpRofile: LoadProfile;\r\n\r\n  constructor(billingPeriod: BillingPeriod) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.loadProfiles = new Map();\r\n    this.dateStrings = new Set();\r\n    this.totalLoadpRofile = new LoadProfile(\"Total\");\r\n    this.coincidentPeak = null;\r\n    this.nonCoincidentPeak = null;\r\n    this.diversityFactor = null;\r\n    this.loadProfilesMax = [];\r\n    this.loadProfilesSum = [];\r\n  }\r\n\r\n  addData(rawData: LoadProfile_Raw) {\r\n    let key = rawData.meteringPoint;\r\n    let dateString = `${rawData.month}/${rawData.day}/${rawData.year}`;\r\n\r\n    if (!this.dateStrings.has(dateString)) {\r\n      this.dateStrings.add(dateString);\r\n    }\r\n\r\n    if (!this.loadProfiles.has(key)) {\r\n      this.loadProfiles.set(key, new LoadProfile(key));\r\n    }\r\n    this.loadProfiles.get(key)?.addLoadProfileData(rawData, dateString);\r\n  }\r\n\r\n  removeData(fileName: string, meteringPoints: string[]) {\r\n    meteringPoints.forEach((key) => {\r\n      if (this.loadProfiles.has(key)) {\r\n        let loadProfile = this.loadProfiles.get(key);\r\n        loadProfile?.removeLoadPRofileData(fileName);\r\n      }\r\n    });\r\n  }\r\n\r\n  initOtherDetails() {\r\n    let coincidentKwdel = 0;\r\n    let coincidentMeteringPoint = MeteringPoint.MF3MPITZAMC01.toString();\r\n    let coincidentDate = new Date();\r\n    let coincidentHour = 0;\r\n    let nonCoincidentKwdel = 0;\r\n\r\n    this.loadProfilesMax = [];\r\n    this.loadProfilesSum = [];\r\n    this.totalLoadpRofile = new LoadProfile(\"Total\");\r\n\r\n    for (let loadProfile of this.loadProfiles.values()) {\r\n      for (let dailyLp of [...loadProfile.dailyLoadProfiles.values()]) {\r\n        for (let hourlyLp of dailyLp.hourlyLoadProfiles) {\r\n          let rawData = new LoadProfile_Raw(\r\n            hourlyLp.getTotalKwdel(),\r\n            dailyLp.date.getDate(),\r\n            dailyLp.date.getMonth() + 1,\r\n            dailyLp.date.getFullYear(),\r\n            hourlyLp.hour,\r\n            3,\r\n            \"Total\",\r\n            0\r\n          );\r\n          let dateString = `${rawData.month}/${rawData.day}/${rawData.year}`;\r\n          this.totalLoadpRofile.addLoadProfileData(rawData, dateString);\r\n        }\r\n      }\r\n\r\n      const { max, sum } = loadProfile.getMaxAndSum();\r\n\r\n      if (sum.kwdel === 0) {\r\n        this.loadProfiles.delete(loadProfile.meteringPoint);\r\n      } else {\r\n        this.loadProfilesMax.push(max);\r\n        this.loadProfilesSum.push(sum);\r\n        nonCoincidentKwdel += max.kwdel;\r\n      }\r\n    }\r\n\r\n    for (let dlp of this.totalLoadpRofile.dailyLoadProfiles.values()) {\r\n      for (let hlp of dlp.hourlyLoadProfiles) {\r\n        if (hlp.getRawTotal() > coincidentKwdel) {\r\n          coincidentKwdel = hlp.getRawTotal();\r\n          coincidentDate = dlp.date;\r\n          coincidentHour = hlp.hour;\r\n          coincidentMeteringPoint = \"total\";\r\n        }\r\n      }\r\n    }\r\n\r\n    let diversityFactor = nonCoincidentKwdel / coincidentKwdel;\r\n\r\n    this.coincidentPeak = {\r\n      kwdel: coincidentKwdel,\r\n      date: coincidentDate,\r\n      hour: coincidentHour,\r\n      meteringPoint: coincidentMeteringPoint,\r\n    };\r\n    this.nonCoincidentPeak = { kwdel: nonCoincidentKwdel };\r\n    this.diversityFactor = { factor: diversityFactor };\r\n\r\n    console.log({\r\n      info: \"max and sum\",\r\n      max: this.loadProfilesMax,\r\n      sum: this.loadProfilesSum,\r\n      coincidental: this.coincidentPeak,\r\n      nonCoincidental: this.nonCoincidentPeak,\r\n      diversityFactor: this.diversityFactor,\r\n      totalLoadProfile: this.totalLoadpRofile,\r\n    });\r\n  }\r\n}\r\n\r\nexport default MonthlyLoadProfile;\r\n","class Stack<T> {\r\n  data: T[];\r\n  top: number;\r\n\r\n  constructor(stack?: Stack<T>) {\r\n    this.data = [];\r\n    this.top = 0;\r\n\r\n    if (stack) {\r\n      this.data = stack.data;\r\n      this.top = stack.top;\r\n    }\r\n  }\r\n\r\n  push(element: T) {\r\n    this.data[this.top] = element;\r\n    this.top = this.top + 1;\r\n  }\r\n\r\n  length() {\r\n    return this.top;\r\n  }\r\n\r\n  peek() {\r\n    return this.data[this.top - 1];\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.top === 0;\r\n  }\r\n\r\n  pop() {\r\n    if (this.isEmpty() === false) {\r\n      this.top = this.top - 1;\r\n      return this.data.pop() as T; // removes the last element\r\n    }\r\n  }\r\n}\r\n\r\nexport default Stack;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {\r\n  LoadProfile,\r\n  LoadProfile_Raw,\r\n  MonthlyLoadProfile,\r\n} from \"../loadprofile/objects\";\r\nimport Stack from \"../common/Stack\";\r\n\r\nexport type DeleteLoadpRofileInfo = {\r\n  fileName: string;\r\n  meteringPoints: string[];\r\n};\r\n\r\nconst LoadProfileContext = createContext<{\r\n  updateLoadProfiles: (rawDatas: LoadProfile_Raw[]) => void;\r\n  monthlyLoadProfiles: Map<string, MonthlyLoadProfile>;\r\n  working: boolean;\r\n  deleteLoadProfiles: (deleteLoadProfileInfo: DeleteLoadpRofileInfo) => void;\r\n}>({\r\n  updateLoadProfiles: (rawDatas) => {},\r\n  monthlyLoadProfiles: new Map(),\r\n  working: false,\r\n  deleteLoadProfiles: (deleteLoadProfileInfo) => {},\r\n});\r\n\r\ntype LoadProfileContextProviderProps = {};\r\nconst LoadProfileContextProvider: React.FunctionComponent<LoadProfileContextProviderProps> = (\r\n  props\r\n) => {\r\n  const { children, ...others } = props;\r\n  const [monthlyLoadProfiles, setMonthlyLoadProfiles] = useState(\r\n    new Map<string, MonthlyLoadProfile>()\r\n  );\r\n\r\n  const [buffer, setBuffer] = useState<\r\n    Stack<LoadProfile_Raw[] | DeleteLoadpRofileInfo>\r\n  >(new Stack());\r\n  const [working, setWorking] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"MonthlyLoadProfiles State Updated\");\r\n    console.log(monthlyLoadProfiles);\r\n  }, [monthlyLoadProfiles]);\r\n\r\n  function updateLoadProfiles(rawDatas: LoadProfile_Raw[]) {\r\n    console.log(\"Updating load profile datas in context....\");\r\n\r\n    setBuffer((prevBuffer) => {\r\n      let newbuffer = new Stack(prevBuffer);\r\n      newbuffer.push(rawDatas);\r\n      return newbuffer;\r\n    });\r\n  }\r\n\r\n  function deleteLoadProfiles(deleteLaodProfileInfo: DeleteLoadpRofileInfo) {\r\n    setBuffer((prevBuffer) => {\r\n      let newbuffer = new Stack(prevBuffer);\r\n      newbuffer.push(deleteLaodProfileInfo);\r\n      return newbuffer;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (working) return;\r\n    if (buffer.isEmpty()) {\r\n      setWorking(false);\r\n      return;\r\n    }\r\n\r\n    let newBuffer = new Stack(buffer);\r\n    let data = newBuffer.pop();\r\n    if (data) {\r\n      setWorking(true);\r\n\r\n      if (data instanceof Array) {\r\n        console.log(\"Data instance of ARRRRAAAAY....\");\r\n        addRawDatasToMonthlyLoadProfiles(data).then((result) => {\r\n          setMonthlyLoadProfiles(result);\r\n          setWorking(false);\r\n          setBuffer(newBuffer);\r\n        });\r\n      } else {\r\n        console.log(\"Data instance of ARRRRAAAAY....\");\r\n        deleteDataFromMonthlyLoadProfiles(\r\n          data.fileName,\r\n          data.meteringPoints\r\n        ).then((result) => {\r\n          setMonthlyLoadProfiles(result);\r\n          setWorking(false);\r\n          setBuffer(newBuffer);\r\n        });\r\n      }\r\n    }\r\n  }, [buffer]);\r\n\r\n  function addRawDatasToMonthlyLoadProfiles(rawDatas: LoadProfile_Raw[]) {\r\n    return new Promise<Map<string, MonthlyLoadProfile>>((resolve, reject) => {\r\n      console.log(\"Processing rawDatas\");\r\n      let newMonthlyLoadProfiles = new Map(monthlyLoadProfiles);\r\n      for (let rawData of rawDatas) {\r\n        let key = `${rawData.billingPeriod.month}-${rawData.year}`;\r\n        if (!newMonthlyLoadProfiles.has(key)) {\r\n          newMonthlyLoadProfiles.set(\r\n            key,\r\n            new MonthlyLoadProfile(rawData.billingPeriod)\r\n          );\r\n        }\r\n        newMonthlyLoadProfiles.get(key)?.addData(rawData);\r\n      }\r\n      newMonthlyLoadProfiles.forEach((mlp) => mlp.initOtherDetails());\r\n      resolve(newMonthlyLoadProfiles);\r\n    });\r\n  }\r\n\r\n  function deleteDataFromMonthlyLoadProfiles(\r\n    fileName: string,\r\n    meteringPoints: string[]\r\n  ) {\r\n    return new Promise<Map<string, MonthlyLoadProfile>>((resolve, reject) => {\r\n      console.log(\"DELETING LAODP ROFILESS\");\r\n      let newMonthlyLoadProfiles = new Map(monthlyLoadProfiles);\r\n      for (let key of newMonthlyLoadProfiles.keys()) {\r\n        let mpl = newMonthlyLoadProfiles.get(key);\r\n        mpl?.removeData(fileName, meteringPoints);\r\n      }\r\n      newMonthlyLoadProfiles.forEach((mlp) => {\r\n        mlp.initOtherDetails();\r\n        if (mlp.nonCoincidentPeak?.kwdel === 0) {\r\n          let key = `${mlp.billingPeriod.month}-${mlp.billingPeriod.year}`;\r\n          newMonthlyLoadProfiles.delete(key);\r\n        }\r\n      });\r\n      resolve(newMonthlyLoadProfiles);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <LoadProfileContext.Provider\r\n      value={{\r\n        updateLoadProfiles,\r\n        monthlyLoadProfiles,\r\n        deleteLoadProfiles,\r\n        working,\r\n      }}\r\n    >\r\n      {children}\r\n    </LoadProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LoadProfileContextProvider;\r\nexport { LoadProfileContext };\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport { ToggleButton } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\n\r\ntype StyledToggleButtonProps = {\r\n  value?: string;\r\n};\r\n\r\nconst StyledToggleButton: React.FunctionComponent<StyledToggleButtonProps> = ({\r\n  value,\r\n  children,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ToggleButton classes={{ root: classes.root }} value={value} {...others}>\r\n      {children}\r\n    </ToggleButton>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"none\",\r\n    borderRadius: 0,\r\n    \"&.Mui-selected\": {\r\n      backgroundColor: theme.palette.background.default,\r\n      color: theme.palette.primary.main,\r\n    },\r\n    \"&:hover, &.Mui-selected:hover\": {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    selected: {},\r\n  },\r\n}));\r\n\r\nexport default StyledToggleButton;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: 50,\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.drawer + 10,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  toggleButtonsContainer: {},\r\n  otherButtonsContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { LoadProfileSettings } from \"./types/LoadProfileSettings\";\r\nenum LoadProfileStorageKey {\r\n  KWDEL = \"lp_kwdelCol\",\r\n  DATE = \"lp_dateCol\",\r\n  TIME = \"lp_timeCol\",\r\n  DATE_FORMAT = \"lp_dateFormat\",\r\n  TIME_FORMAT = \"lp_timeFormat\",\r\n}\r\n\r\nfunction loadSettings(): LoadProfileSettings {\r\n  let kwdelCol = Number(\r\n    localStorage.getItem(LoadProfileStorageKey.KWDEL) || \"1\"\r\n  );\r\n  let dateCol = Number(localStorage.getItem(LoadProfileStorageKey.DATE) || \"2\");\r\n  let timeCol = Number(localStorage.getItem(LoadProfileStorageKey.TIME) || \"3\");\r\n  let dateFormat =\r\n    localStorage.getItem(LoadProfileStorageKey.DATE_FORMAT) || \"MM/dd/yyyy\";\r\n  let timeFormat =\r\n    localStorage.getItem(LoadProfileStorageKey.TIME_FORMAT) || \"HH:mm\";\r\n  return {\r\n    kwdelCol,\r\n    dateCol,\r\n    timeCol,\r\n    dateFormat,\r\n    timeFormat,\r\n  };\r\n}\r\n\r\nfunction saveSettings(settings: LoadProfileSettings): void {\r\n  if (settings.kwdelCol) {\r\n    localStorage.setItem(\r\n      LoadProfileStorageKey.KWDEL,\r\n      String(settings.kwdelCol)\r\n    );\r\n  }\r\n\r\n  if (settings.timeCol) {\r\n    localStorage.setItem(LoadProfileStorageKey.TIME, String(settings.timeCol));\r\n  }\r\n\r\n  if (settings.dateCol) {\r\n    localStorage.setItem(LoadProfileStorageKey.DATE, String(settings.dateCol));\r\n  }\r\n\r\n  if (settings.dateFormat) {\r\n    localStorage.setItem(\r\n      LoadProfileStorageKey.DATE_FORMAT,\r\n      String(settings.dateFormat)\r\n    );\r\n  }\r\n\r\n  if (settings.timeFormat) {\r\n    localStorage.setItem(\r\n      LoadProfileStorageKey.TIME_FORMAT,\r\n      String(settings.timeFormat)\r\n    );\r\n  }\r\n}\r\n\r\nconst LoadProfileStorage = {\r\n  loadSettings,\r\n  saveSettings,\r\n};\r\n\r\nexport default LoadProfileStorage;\r\n","import Toolbar from \"./Toolbar\";\r\n\r\nexport default Toolbar;\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      position: \"static\",\r\n      borderLeft: `1px solid ${theme.palette.divider}`,\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useStyles;\r\nexport { drawerWidth };\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\n\r\ntype CustomAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n  panelName: string;\r\n  title: string;\r\n  render?: any;\r\n};\r\n\r\nconst CustomAccordion: React.FunctionComponent<CustomAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  panelName,\r\n  title,\r\n  render,\r\n  children,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function handlePanelChange(\r\n    event: React.ChangeEvent<{}>,\r\n    newExpanded: boolean\r\n  ) {\r\n    onPanelChange(newExpanded ? panelName : \"\");\r\n  }\r\n\r\n  return (\r\n    <Accordion\r\n      className={classes.accordion}\r\n      square\r\n      expanded={expandedPanel === panelName}\r\n      onChange={handlePanelChange}\r\n    >\r\n      <AccordionSummary\r\n        className={classes.accordionSummary}\r\n        expandIcon={<ExpandMore />}\r\n      >\r\n        <Typography className={classes.accordionTitle}>{title}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.accordionDetails}>\r\n        {children}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  accordion: {\r\n    border: \"1px solid rgba(0, 0, 0, .125)\",\r\n    boxShadow: \"none\",\r\n    \"&:not(:last-child)\": {\r\n      borderBottom: 0,\r\n    },\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n    \"&$expanded\": {\r\n      margin: \"auto\",\r\n    },\r\n    expanded: {},\r\n  },\r\n\r\n  accordionSummary: {\r\n    borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\r\n    marginBottom: -1,\r\n    minHeight: 30,\r\n    \"&$expanded\": {\r\n      minHeight: 30,\r\n      backgroundColor: \"black\",\r\n    },\r\n    expanded: {},\r\n  },\r\n  content: {\r\n    \"&$expanded\": {\r\n      margin: \"12px 0\",\r\n    },\r\n  },\r\n  accordionTitle: {\r\n    fontSize: \"1rem\",\r\n    asdf: {},\r\n  },\r\n  expanded: {},\r\n  accordionDetails: {\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: \"5px\",\r\n    position: \"relative\",\r\n  },\r\n}));\r\n\r\nexport default CustomAccordion;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ErrorOutline } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\n\r\ntype FilecardProps = {\r\n  file: File;\r\n  progressInfo: string;\r\n  progress: number;\r\n  errors?: string[];\r\n  onRemoveFile: () => void;\r\n};\r\n\r\nconst FileCard: React.FunctionComponent<FilecardProps> = ({\r\n  file,\r\n  progress,\r\n  progressInfo,\r\n  errors = [],\r\n  onRemoveFile,\r\n  ...others\r\n}) => {\r\n  const classes = cardStyles();\r\n  const [openError, setOpenError] = useState(false);\r\n\r\n  function handleSeeErrorsClick() {\r\n    console.log(errors);\r\n    setOpenError(true);\r\n  }\r\n\r\n  function handleCloseErrorDialog() {\r\n    setOpenError(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <div className={classes.content}>\r\n          <Typography className={classes.filename}>{file.name}</Typography>\r\n          <div className={classes.progress_content}>\r\n            <LinearProgress\r\n              value={progress}\r\n              variant={\r\n                progress === 0 || progress === 100\r\n                  ? \"determinate\"\r\n                  : \"indeterminate\"\r\n              }\r\n            />\r\n            <Typography className={classes.progress_text}>\r\n              {progressInfo}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.action}>\r\n          {errors.length !== 0 && (\r\n            <Button\r\n              className={classes.button}\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              startIcon={<ErrorOutline color=\"error\" />}\r\n              onClick={handleSeeErrorsClick}\r\n            >\r\n              see errors\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className={classes.button}\r\n            onClick={onRemoveFile}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n          >\r\n            Remove\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Dialog open={openError} onClose={handleCloseErrorDialog}>\r\n        <DialogTitle>\r\n          <Typography variant=\"h6\" color=\"error\">\r\n            Errors\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            {file.name}\r\n          </Typography>\r\n          <Divider />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box overflow=\"auto\" padding=\"5px 25px\">\r\n            {errors.map((error, index) => {\r\n              return (\r\n                <div key={index} className={classes.error_container}>\r\n                  <Typography\r\n                    component=\"p\"\r\n                    className={classes.error_text}\r\n                    key={`${index}~error`}\r\n                  >\r\n                    {error}\r\n                  </Typography>\r\n                  <Divider />\r\n                </div>\r\n              );\r\n            })}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst cardStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.mobileStepper,\r\n    maxWidth: \"100%\",\r\n    fontSize: \"0.8rem\",\r\n    boxSizing: \"border-box\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: theme.shape.borderRadius,\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    padding: 10,\r\n    overflowWrap: \"break-word\",\r\n    wordWrap: \"break-word\",\r\n  },\r\n  filename: {\r\n    fontSize: \"1em\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  progress_text: {\r\n    fontSize: \"0.7em\",\r\n    color: theme.palette.text.secondary,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"5px\",\r\n    justifyContent: \"center\",\r\n  },\r\n  progress_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"3px\",\r\n  },\r\n  action: {},\r\n  button: {\r\n    textTransform: \"none\",\r\n  },\r\n  error_container: {\r\n    maxWidth: \"100%\",\r\n  },\r\n  error_text: {\r\n    fontSize: \"0.9rem\",\r\n    padding: \"10px 5px\",\r\n    whiteSpace: \"pre-wrap\",\r\n  },\r\n}));\r\n\r\nexport default FileCard;\r\n","class InvalidFileError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n\r\nexport default InvalidFileError;\r\n","import { WorkBook } from \"xlsx/types\";\r\nimport XLSX from \"xlsx\";\r\nimport InvalidFileError from \"../../errors/InvalidFileError\";\r\n\r\nasync function extractWorkbookFromFile(file: File): Promise<WorkBook> {\r\n  return new Promise<WorkBook>((resolve, reject) => {\r\n    console.log(\"FileUTils: Timeout wait for 10 secs....\");\r\n    let fileExtension: string = file.name.split(\".\")[1];\r\n    console.log({\r\n      method: \"extractWorkbookFromFile()\",\r\n      parameteres: { file },\r\n      fileTypeSplit: file.name.split(\".\"),\r\n      fileExtension,\r\n    });\r\n\r\n    if (fileExtension !== \"xlsx\") {\r\n      reject(\r\n        new InvalidFileError(\r\n          `Invalid file: expected: .xlsx received: ${fileExtension}`\r\n        )\r\n      );\r\n    }\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (event: ProgressEvent<FileReader>) {\r\n      try {\r\n        let data = new Uint8Array(event.target?.result as ArrayBuffer);\r\n        let workbook = XLSX.read(data, { type: \"array\", cellDates: true });\r\n        resolve(workbook);\r\n      } catch (error) {\r\n        reject(new Error(error));\r\n      }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  });\r\n}\r\n\r\nconst FileUtil = {\r\n  extractWorkbookFromFile,\r\n};\r\n\r\nexport default FileUtil;\r\n","import XLSX from \"xlsx\";\r\nimport { LoadProfileStorage } from \".\";\r\nimport { LoadProfileSettings } from \"./types/LoadProfileSettings\";\r\nimport { LoadProfile_Raw } from \"./objects\";\r\nimport moment from \"moment\";\r\nimport { CellObject, WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport MeteringPoint from \"./enums/MeteringPoints\";\r\n\r\ntype LoadProfileRowData = {\r\n  kwdelCell: CellObject;\r\n  dateCell: CellObject;\r\n  timeCell: CellObject;\r\n  row: number;\r\n  sheetName: string;\r\n};\r\n\r\nfunction extractLoadProfileRawFromWorkbook(\r\n  fileName: string,\r\n  workbook: WorkBook,\r\n  handleProgressUpdate: (progressInfo: string, progress: number) => void\r\n) {\r\n  return new Promise<{\r\n    value: LoadProfile_Raw[];\r\n    errors: string[];\r\n    meteringPoints: string[];\r\n  }>(async (resolve, reject) => {\r\n    if (workbook === null) {\r\n      reject(new Error(\"Invalid file\"));\r\n      return;\r\n    }\r\n    console.log(\"Parsing workbook...\");\r\n\r\n    let lp_rawDatas: LoadProfile_Raw[] = [];\r\n    let errors: string[] = [];\r\n    let meteringPoints: string[] = [];\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      if (!MeteringPoint.exists(sheetName)) {\r\n        errors.push(\r\n          `Invalid sheetname: ${sheetName}, expected: MF3MPITZAMC01~7`\r\n        );\r\n        continue;\r\n      }\r\n      meteringPoints.push(sheetName);\r\n\r\n      handleProgressUpdate(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await calculatePercent(row, totalRows);\r\n        handleProgressUpdate(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = LoadProfileStorage.loadSettings();\r\n          let cells = extractCells(worksheet, row, sheetName, settings);\r\n          let rawData = extractDataFromRow(cells, settings, fileName);\r\n\r\n          lp_rawDatas.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    console.log(\"finished\");\r\n    handleProgressUpdate(\"Finished processing\", 100);\r\n    resolve({ value: lp_rawDatas, errors, meteringPoints });\r\n  });\r\n}\r\n\r\nfunction calculatePercent(i: number, total: number): Promise<number> {\r\n  return new Promise<number>((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve((i / total) * 100);\r\n    }, 0);\r\n  });\r\n}\r\n\r\n//Extracts the load profile raw data from the row,\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  sheetName: string,\r\n  settings: LoadProfileSettings\r\n): LoadProfileRowData {\r\n  //Builds the raw cell location {column, row}\r\n  let kwdelAddress = { c: settings.kwdelCol, r: row };\r\n  let dateAddress = { c: settings.dateCol, r: row };\r\n  let timeAddress = { c: settings.timeCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let kwdelRef = XLSX.utils.encode_cell(kwdelAddress);\r\n  let dateRef = XLSX.utils.encode_cell(dateAddress);\r\n  let timeRef = XLSX.utils.encode_cell(timeAddress);\r\n\r\n  return {\r\n    kwdelCell: worksheet[kwdelRef],\r\n    timeCell: worksheet[timeRef],\r\n    dateCell: worksheet[dateRef],\r\n    row,\r\n    sheetName: sheetName,\r\n  };\r\n}\r\n\r\nfunction extractDataFromRow(\r\n  rowData: LoadProfileRowData,\r\n  settings: LoadProfileSettings,\r\n  fileName: string\r\n): LoadProfile_Raw {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: LoadProfile_Raw | null = null;\r\n\r\n  let kwdelCellData = extractKwdelCellData(rowData.kwdelCell);\r\n  let dateCellData = extractDateCellData(rowData.dateCell, settings.dateFormat);\r\n  let timeCellData = extractTimeCellData(rowData.timeCell, settings.timeFormat);\r\n\r\n  anyErrors = Boolean(\r\n    kwdelCellData.error || dateCellData.error || timeCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowData.row + 1}:\\n`;\r\n    if (kwdelCellData.error) error = error.concat(`\\t${kwdelCellData.error}\\n`);\r\n    if (dateCellData.error) error = error.concat(`\\t${dateCellData.error}\\n`);\r\n    if (timeCellData.error) error = error.concat(`\\t${timeCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let kwdel = kwdelCellData.value as number;\r\n    let day = dateCellData.value?.getDate() as number;\r\n    let month = dateCellData.value?.getMonth() as number;\r\n    let hour = timeCellData.value?.getHours() as number;\r\n    let minute = timeCellData.value?.getMinutes() as number;\r\n    let year = dateCellData.value?.getFullYear() as number;\r\n    rawData = new LoadProfile_Raw(\r\n      kwdel,\r\n      day,\r\n      month + 1,\r\n      year,\r\n      hour,\r\n      minute,\r\n      rowData.sheetName,\r\n      rowData.row,\r\n      fileName\r\n    );\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nfunction extractKwdelCellData(\r\n  kwdelCell: CellObject\r\n): { error: string | null; value: number | null } {\r\n  let error = null;\r\n  let value = null;\r\n  if (!(kwdelCell.t === \"n\" || Number(kwdelCell.v || kwdelCell.w))) {\r\n    error = `KwdelCell expectations: number received: ${kwdelCell.v}`;\r\n  } else {\r\n    value = Number(kwdelCell.v || kwdelCell.r);\r\n  }\r\n  return { error, value };\r\n}\r\n\r\nfunction extractDateCellData(\r\n  dateCell: CellObject,\r\n  dateFormat: string\r\n): { error: string | null; value: Date | null } {\r\n  let error: string | null = null;\r\n  let value = null;\r\n  let x: any = null;\r\n  // console.log({\r\n  //   dateCell_t: dateCell.t,\r\n  //   dateCell_w: dateCell.w,\r\n  //   dateCell_r: dateCell.r,\r\n  // });\r\n\r\n  if (dateCell.t !== \"d\") {\r\n    if (dateCell.t === \"s\") {\r\n      x = moment(dateCell.v || dateCell.w || dateCell.r, dateFormat, true);\r\n      if (!x.isValid()) {\r\n        error = `DateCell expectations: date received: ${dateCell.v}`;\r\n      } else {\r\n        value = x.toDate();\r\n      }\r\n    } else {\r\n      error = `DateCell expectations: date received: ${dateCell.v}`;\r\n    }\r\n  } else {\r\n    value = dateCell.v as Date;\r\n  }\r\n\r\n  return { error, value };\r\n}\r\n\r\nfunction extractTimeCellData(\r\n  timeCell: CellObject,\r\n  timeFormat: string\r\n): { error: string | null; value: Date | null } {\r\n  let error: string | null = null;\r\n  let value = null;\r\n  let x: any = null;\r\n  if (timeCell.t !== \"d\") {\r\n    if (timeCell.t === \"s\") {\r\n      x = moment(timeCell.v || timeCell.w || timeCell.r, timeFormat);\r\n      if (!x.isValid()) {\r\n        error = `TimeCell expectations: date received: ${timeCell.v}`;\r\n      } else {\r\n        value = x.toDate();\r\n      }\r\n    } else {\r\n      error = `TimeCell expectations: date received: ${timeCell.v}`;\r\n    }\r\n  } else {\r\n    value = timeCell.v as Date;\r\n  }\r\n\r\n  return { error, value };\r\n}\r\n\r\nexport default extractLoadProfileRawFromWorkbook;\r\n","import { Tabs, Typography, Box } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport useStyles from \"./use-styles\";\r\nimport { LoadProfileSettingsPanel } from \"./tabpanels\";\r\nimport { VerticalTab } from \"../common/components/tabs\";\r\n\r\ntype SettingsProps = {};\r\n\r\nenum SettingsTabs {\r\n  LoadProfileTab = \"lp_tab\",\r\n  FeederDemandTab = \"fd_tab\",\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-prevent-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n      className={classes.tab_panel}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Settings: React.FunctionComponent<SettingsProps> = ({ ...others }) => {\r\n  const [selectedTab, setSelectedTab] = useState<string>(\r\n    SettingsTabs.LoadProfileTab\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title_div}>\r\n        <Typography className={classes.title}>Settings</Typography>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={selectedTab}\r\n          centered={false}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n        >\r\n          <VerticalTab\r\n            label=\"Load Profile Settings\"\r\n            value={SettingsTabs.LoadProfileTab}\r\n          />\r\n          <VerticalTab\r\n            value={SettingsTabs.FeederDemandTab}\r\n            label=\"Feeder and Demand Settings\"\r\n          />\r\n        </Tabs>\r\n        <TabPanel value={selectedTab} index={SettingsTabs.LoadProfileTab}>\r\n          <LoadProfileSettingsPanel />\r\n        </TabPanel>\r\n        <div>{selectedTab === SettingsTabs.LoadProfileTab && <></>}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FileUtil } from \"../common/utils\";\r\nimport { LoadProfile_Raw } from \"./objects\";\r\nimport extractLoadProfileRawFromWorkbook from \"./ExcelParser\";\r\n\r\ntype LoadProfileParserProps = {\r\n  file: File;\r\n  render?: any;\r\n  onFileParsed: (data: LoadProfile_Raw[]) => void;\r\n  onRemoveFile: (file: File, meteringPointss: string[]) => void;\r\n};\r\n\r\nexport type LoadProfileParserRenderProps = {\r\n  progress: number;\r\n  progressInfo: string;\r\n  fileFromParser: File;\r\n  errors: string[];\r\n  onRemoveFile: () => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<LoadProfileParserProps> = ({\r\n  file,\r\n  render,\r\n  onFileParsed,\r\n  onRemoveFile,\r\n  ...others\r\n}) => {\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [meteringPoints, setMeteringPoints] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        return extractLoadProfileRawFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n        setMeteringPoints((meteringPoint) => [\r\n          ...meteringPoint,\r\n          ...result.meteringPoints,\r\n        ]);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }, []);\r\n\r\n  function handleFileParsed(lp_rawDatas: LoadProfile_Raw[]) {\r\n    onFileParsed(lp_rawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file, meteringPoints);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        fileFromParser: file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoadProfileParser;\r\n","import { Box, Typography, makeStyles, Theme } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\ntype FileDropProps = {\r\n  onFileDrop: (files: File[]) => void;\r\n  onDragEnter: () => void;\r\n  onDragLeave: () => void;\r\n  onDragOver?: () => void;\r\n  helperText: string;\r\n};\r\n\r\nconst FileDrop: React.FunctionComponent<FileDropProps> = ({\r\n  helperText = \"\",\r\n  onFileDrop,\r\n  onDragEnter,\r\n  onDragLeave,\r\n  onDragOver = () => {},\r\n  children,\r\n  ...others\r\n}) => {\r\n  const [dragging, setDragging] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  function handleDragEnter() {\r\n    setDragging(true);\r\n    onDragEnter();\r\n  }\r\n\r\n  function handleDragLeave() {\r\n    setDragging(false);\r\n    onDragLeave();\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      <Dropzone\r\n        onDrop={onFileDrop}\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section\r\n            onMouseEnter={handleDragEnter}\r\n            onMouseLeave={handleDragLeave}\r\n            className={clsx(classes.dropZone, {\r\n              [classes.dropZone_focused]: dragging,\r\n            })}\r\n          >\r\n            <div\r\n              {...getRootProps({ className: `${classes.dropZone_content}` })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                color=\"textSecondary\"\r\n                className={classes.dropZoneText}\r\n              >\r\n                {helperText}\r\n              </Typography>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        maxWidth=\"100%\"\r\n        gridGap={5}\r\n        marginTop={1}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dropZone: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n    minHeight: 50,\r\n  },\r\n  dropZone_focused: {\r\n    border: `2px dashed ${theme.palette.text.secondary}`,\r\n  },\r\n  dropZone_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: \"100%\",\r\n    gap: \"10px\",\r\n    flexWrap: \"wrap\",\r\n    margin: 5,\r\n  },\r\n  dropZoneText: {\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n  },\r\n}));\r\n\r\nexport default FileDrop;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CustomAccordion from \"../CustomAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport { LoadProfileParser } from \"../../loadprofile\";\r\nimport { LoadProfile_Raw } from \"../../loadprofile/objects\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport FileDrop from \"../FileDrop\";\r\nimport { LoadProfileParserRenderProps } from \"../../loadprofile/LoadProfileParser\";\r\n\r\ntype LoadProfileAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"laodprofile_filespanel\";\r\nconst title = \"Load Profile Files\";\r\n\r\nconst LoadProfileAccordion: React.FunctionComponent<LoadProfileAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  ...others\r\n}) => {\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  useEffect(() => {\r\n    console.log(\"New File Added...\");\r\n  }, [files, setFiles]);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      //Set the files...IF dupplicate, returns\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(lpRawDatas: LoadProfile_Raw[]) {\r\n    loadProfileContext.updateLoadProfiles(lpRawDatas);\r\n  }\r\n\r\n  function handleRemoveFile(file: File, meteringPoints: string[]) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n\r\n    loadProfileContext.deleteLoadProfiles({\r\n      fileName: file.name,\r\n      meteringPoints,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <LoadProfileParser\r\n              onFileParsed={handleFileParsed}\r\n              key={file.name}\r\n              file={file}\r\n              onRemoveFile={handleRemoveFile}\r\n              render={({\r\n                progress,\r\n                progressInfo,\r\n                fileFromParser,\r\n                onRemoveFile,\r\n                errors,\r\n              }: LoadProfileParserRenderProps) => (\r\n                <FileCard\r\n                  progress={progress}\r\n                  progressInfo={progressInfo}\r\n                  file={fileFromParser}\r\n                  errors={errors}\r\n                  onRemoveFile={onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default LoadProfileAccordion;\r\nexport { panelName };\r\n","import FilesDrawer from \"./FilesDrawer\";\r\nimport useStyles, { drawerWidth } from \"./use-styles\";\r\n\r\nexport default FilesDrawer;\r\nexport { drawerWidth, useStyles };\r\n","import { Drawer } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport useStyles from \"./use-styles\";\r\n\r\nimport { LoadProfileAccordion, loadProfilePanelName } from \"./loadprofile\";\r\n\r\ntype FilesDrawerProps = {\r\n  open: boolean;\r\n};\r\n\r\nconst FilesDrawer: React.FunctionComponent<FilesDrawerProps> = ({\r\n  open,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [expandedPanel, setExpandedPanel] = useState<string>(\r\n    loadProfilePanelName\r\n  );\r\n\r\n  function handlePanelChange(newExpandedPanel: string) {\r\n    setExpandedPanel(newExpandedPanel);\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"persistent\"\r\n      open={open}\r\n      anchor=\"left\"\r\n      className={classes.drawer}\r\n      classes={{ paper: classes.drawerPaper }}\r\n    >\r\n      <LoadProfileAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default FilesDrawer;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    maxHeight: \"100%\",\r\n    background: theme.palette.background.paper,\r\n    padding: theme.spacing(3),\r\n    fontSize: \"1rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    zIndex: theme.zIndex.mobileStepper,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  title_div: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(5),\r\n    fontSize: \"1.3em\",\r\n  },\r\n  tabs: {\r\n    display: \"inline-block\",\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n  },\r\n  tab_panel: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { makeStyles, TextField, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    fontSize: \"1em\",\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: theme.palette.background.paper,\r\n    \"&.Mui-focused\": {\r\n      backgroundColor: theme.palette.background.default,\r\n      border: `1px solid ${theme.palette.primary.main}`,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    focused: {},\r\n  },\r\n}));\r\n\r\ntype FormTextFieldProps = {\r\n  value?: string | number;\r\n  name?: string;\r\n  label?: string;\r\n  placeholder?: string;\r\n  helpertext?: string;\r\n  error?: boolean;\r\n  type?: string;\r\n  limitZero?: boolean;\r\n  onChange?: (\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => void;\r\n};\r\n\r\nconst FormTextField: React.FunctionComponent<FormTextFieldProps> = ({\r\n  label,\r\n  value = \"\",\r\n  name = \"\",\r\n  placeholder = \"\",\r\n  helpertext = \"\",\r\n  error = false,\r\n  type = \"text\",\r\n  onChange = (event) => {},\r\n  limitZero = true,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function handleChange(\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) {\r\n    if (type === \"number\" && Number(event.target.value) < 0) {\r\n      return;\r\n    } else {\r\n      onChange(event);\r\n    }\r\n  }\r\n  return (\r\n    <TextField\r\n      variant=\"filled\"\r\n      label={label}\r\n      value={value}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      error={error}\r\n      helperText={helpertext}\r\n      type={type}\r\n      InputProps={{\r\n        disableUnderline: true,\r\n        classes: { root: classes.root },\r\n      }}\r\n      margin=\"dense\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormTextField;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst loadProfileStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  textFieldContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"10px\",\r\n    width: \"50%\",\r\n    minWidth: \"300px\",\r\n    fontSize: \"0.9rem\",\r\n  },\r\n  actionContainer: {\r\n    marginTop: 10,\r\n  },\r\n}));\r\n\r\nexport default loadProfileStyles;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport { FormTextField } from \"../../common/components/textfields\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { LoadProfileStorage } from \"../../loadprofile\";\r\nimport loadProfileStyles from \"./lp-styles\";\r\n\r\ntype LoadProfileSettingsProps = {};\r\n\r\nconst LoadProfileSettingsPanel: React.FunctionComponent<LoadProfileSettingsProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = loadProfileStyles();\r\n  const [kwdel, setKwdel] = useState(0);\r\n  const [date, setDate] = useState(0);\r\n  const [time, setTime] = useState(0);\r\n  const [dateFormat, setDateFormat] = useState(\"\");\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let lpSettings = LoadProfileStorage.loadSettings();\r\n    setKwdel(lpSettings.kwdelCol);\r\n    setDateFormat(lpSettings.dateFormat);\r\n    setDate(lpSettings.dateCol);\r\n    setTime(lpSettings.timeCol);\r\n    setTimeFormat(lpSettings.timeFormat);\r\n  }, []);\r\n\r\n  function handleKwdelChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwdel(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDate(Number(event.target.value));\r\n  }\r\n\r\n  function handleTimeChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setTime(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateFormat(event.target.value);\r\n  }\r\n\r\n  function handleTimeFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setTimeFormat(event.target.value);\r\n  }\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    LoadProfileStorage.saveSettings({\r\n      kwdelCol: kwdel,\r\n      timeCol: time,\r\n      dateCol: date,\r\n      dateFormat,\r\n      timeFormat,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form\r\n        id=\"settings-form\"\r\n        className={classes.textFieldContainer}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <FormTextField\r\n          label=\"Kwdel Column#\"\r\n          placeholder=\"Kwdel Column#\"\r\n          value={kwdel}\r\n          type=\"number\"\r\n          onChange={handleKwdelChange}\r\n        />\r\n        <FormTextField\r\n          label=\"Date Column#\"\r\n          placeholder=\"Date Column#\"\r\n          value={date}\r\n          type=\"number\"\r\n          onChange={handleDateChange}\r\n        />\r\n        <FormTextField\r\n          label=\"Time Column#\"\r\n          placeholder=\"Time Column#\"\r\n          value={time}\r\n          type=\"number\"\r\n          onChange={handleTimeChange}\r\n        />\r\n        <FormTextField\r\n          label=\"Date Format\"\r\n          placeholder=\"Date Format\"\r\n          value={dateFormat}\r\n          onChange={handleDateFormatChange}\r\n        />\r\n        <FormTextField\r\n          label=\"Time Format\"\r\n          placeholder=\"Time Format\"\r\n          value={timeFormat}\r\n          onChange={handleTimeFormatChange}\r\n        />\r\n      </form>\r\n      <div className={classes.actionContainer}>\r\n        <Button form=\"settings-form\" type=\"submit\" color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadProfileSettingsPanel;\r\n","import { makeStyles, Tab, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype VerticalTabProps = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    textAlign: \"start\",\r\n    textTransform: \"none\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"0.9em\",\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  tab_selected: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tab_wrapper: {\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n}));\r\n\r\nconst VerticalTab: React.FunctionComponent<VerticalTabProps> = ({\r\n  label,\r\n  value,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      classes={{\r\n        root: classes.tab,\r\n        wrapper: classes.tab_wrapper,\r\n        selected: classes.tab_selected,\r\n      }}\r\n      value={value}\r\n      label={label}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalTab;\r\n","import { makeStyles, Tab, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype HorizontalTabProps = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    textAlign: \"start\",\r\n    textTransform: \"none\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"0.9em\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    padding: 0,\r\n    minWidth: \"100px\",\r\n    lineHeight: 0,\r\n  },\r\n  tab_selected: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tab_wrapper: {},\r\n}));\r\n\r\nconst HorizontalTab: React.FunctionComponent<HorizontalTabProps> = ({\r\n  label,\r\n  value,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      classes={{\r\n        root: classes.tab,\r\n        wrapper: classes.tab_wrapper,\r\n        selected: classes.tab_selected,\r\n      }}\r\n      value={value}\r\n      label={label}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalTab;\r\n","import Settings from \"./Settings\";\r\n\r\nexport default Settings;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(3),\r\n\r\n      color: theme.palette.text.primary,\r\n      \"&:hover > $content\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      \"&:focus > $content, &$selected > $content\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.primary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"$expanded > &\": {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      \"& $content\": {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n    labelRoot: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: `${theme.spacing(2)}px`,\r\n      padding: theme.spacing(0.5, 1),\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: \"normal\",\r\n      flexGrow: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useTreeItemStyles;\r\n","import { SvgIconProps, Typography } from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\n\r\ndeclare module \"csstype\" {\r\n  interface Properties {\r\n    \"--tree-view-color\"?: string;\r\n    \"--tree-view-bg-color\"?: string;\r\n  }\r\n}\r\n\r\ntype StyledTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n  labelInfo?: string;\r\n  labelText: string;\r\n};\r\n\r\nfunction StyledTreeItem(props: StyledTreeItemProps) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          <Typography variant=\"body2\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default StyledTreeItem;\r\n","enum Month {\r\n  JANUARY,\r\n  FEBRUARY,\r\n  MARCH,\r\n  APRIL,\r\n  MAY,\r\n  JUNE,\r\n  JULY,\r\n  AUGUST,\r\n  SEPTEMBER,\r\n  OCTOBER,\r\n  NOVEMBER,\r\n  DECEMBER,\r\n}\r\n\r\nexport default Month;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport {\r\n  ArrowDownward,\r\n  ArrowRight,\r\n  Functions,\r\n  TrendingUp,\r\n} from \"@material-ui/icons\";\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\n\r\ntype DetailsTreeProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst DetailsTree: React.FunctionComponent<DetailsTreeProps> = (props) => {\r\n  const { monthlyLoadProfile, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={[\"1\"]}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }}></div>}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"2\"\r\n        labelText=\"Coincident Peak\"\r\n        labelIcon={TrendingUp}\r\n        labelInfo={\r\n          monthlyLoadProfile.coincidentPeak\r\n            ? `${monthlyLoadProfile.coincidentPeak.meteringPoint}: ${\r\n                monthlyLoadProfile.coincidentPeak.date.getMonth() + 1\r\n              }/${monthlyLoadProfile.coincidentPeak.date.getDate()}/${monthlyLoadProfile.coincidentPeak.date.getFullYear()} ${\r\n                monthlyLoadProfile.coincidentPeak.hour\r\n              }:00 kwdel: ${monthlyLoadProfile.coincidentPeak.kwdel.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"3\"\r\n        labelText=\"None Coincident Peak\"\r\n        labelIcon={Functions}\r\n        labelInfo={\r\n          monthlyLoadProfile.nonCoincidentPeak\r\n            ? ` ${monthlyLoadProfile.nonCoincidentPeak.kwdel.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"4\"\r\n        labelText=\"Diversity Factor:\"\r\n        labelIcon={Functions}\r\n        labelInfo={\r\n          monthlyLoadProfile.diversityFactor\r\n            ? ` ${monthlyLoadProfile.diversityFactor.factor.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"5\"\r\n        labelText=\"Max per metering point:\"\r\n        labelIcon={TrendingUp}\r\n        labelInfo={\"\"}\r\n      >\r\n        {monthlyLoadProfile.loadProfilesMax.map((lpMax) => {\r\n          return (\r\n            <StyledTreeItem\r\n              key={`LM:S${lpMax.meteringPoint}`}\r\n              nodeId={`LM:S${lpMax.meteringPoint}`}\r\n              labelIcon={TrendingUp}\r\n              labelText={`${lpMax.meteringPoint}`}\r\n              labelInfo={` ${\r\n                lpMax.date.getMonth() + 1\r\n              }/${lpMax.date.getDate()}/${lpMax.date.getFullYear()} ${\r\n                lpMax.hour\r\n              }:00 kwdel: ${lpMax.kwdel.toFixed(2)}`}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n      <StyledTreeItem\r\n        nodeId=\"7\"\r\n        labelText=\"Sum per metering point:\"\r\n        labelIcon={Functions}\r\n        labelInfo={\"\"}\r\n      >\r\n        {monthlyLoadProfile.loadProfilesSum.map((lpSum) => {\r\n          return (\r\n            <StyledTreeItem\r\n              key={`LS:S${lpSum.meteringPoint}`}\r\n              nodeId={`LS:S${lpSum.meteringPoint}`}\r\n              labelIcon={Functions}\r\n              labelText={`${lpSum.meteringPoint}`}\r\n              labelInfo={` ${lpSum.kwdel.toFixed(2)}`}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"inline-block\",\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(3)}px ${theme.spacing(1)}px`,\r\n    },\r\n  })\r\n);\r\n\r\nexport default DetailsTree;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport { LoadProfile } from \"../../../loadprofile/objects\";\r\nimport React, { useEffect } from \"react\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\n\r\ntype HourTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  loadProfiles: LoadProfile[];\r\n  totalLoadProfile: LoadProfile;\r\n  dateString?: string;\r\n  hour?: number;\r\n  header?: boolean;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    labelContent: {\r\n      width: \"120px\",\r\n      fontWeight: \"normal\",\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nfunction HourTreeItem(props: HourTreeItemProps) {\r\n  const treeItemClasses = useTreeItemStyles();\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    bgColor,\r\n    loadProfiles,\r\n    dateString = \"\",\r\n    hour = 1,\r\n    header = false,\r\n    totalLoadProfile,\r\n    ...other\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(\"HourTreeItemRendered: Hour: \" + hour);\r\n  }, []);\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={treeItemClasses.labelRoot}>\r\n          <Box minWidth=\"35px\">\r\n            {header ? (\r\n              <Typography variant=\"body2\" className={treeItemClasses.labelText}>\r\n                Hour\r\n              </Typography>\r\n            ) : (\r\n              <Typography variant=\"body2\" className={treeItemClasses.labelText}>\r\n                {hour}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n          {header\r\n            ? loadProfiles.map((loadProfile) => {\r\n                return (\r\n                  <Typography\r\n                    key={`HTI: T: M:${loadProfile.meteringPoint}`}\r\n                    variant=\"body2\"\r\n                    className={classes.labelContent}\r\n                  >\r\n                    {loadProfile.meteringPoint}\r\n                  </Typography>\r\n                );\r\n              })\r\n            : loadProfiles.map((loadProfile) => {\r\n                return (\r\n                  <Typography\r\n                    key={`HTI: T: K:${loadProfile.meteringPoint}`}\r\n                    variant=\"body2\"\r\n                    className={classes.labelContent}\r\n                  >\r\n                    {loadProfile\r\n                      .getDailyLoadProfile(dateString)\r\n                      .hourlyLoadProfiles[hour - 1].getTotalKwdel()\r\n                      .toFixed(2)}\r\n                  </Typography>\r\n                );\r\n              })}\r\n          {header ? (\r\n            <Typography\r\n              className={classes.labelContent}\r\n              variant=\"caption\"\r\n              color=\"inherit\"\r\n            >\r\n              {`Total `}\r\n            </Typography>\r\n          ) : (\r\n            <Typography\r\n              className={classes.labelContent}\r\n              variant=\"caption\"\r\n              color=\"inherit\"\r\n            >\r\n              {totalLoadProfile\r\n                .getDailyLoadProfile(dateString)\r\n                .hourlyLoadProfiles[hour - 1].getRawTotal()\r\n                .toFixed(2)}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: treeItemClasses.root,\r\n        content: treeItemClasses.content,\r\n        expanded: treeItemClasses.expanded,\r\n        selected: treeItemClasses.selected,\r\n        group: treeItemClasses.group,\r\n        label: treeItemClasses.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HourTreeItem;\r\n","import {\r\n  LinearProgress,\r\n  makeStyles,\r\n  Tabs,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useContext, useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport DataContent from \"./data/DataContent\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\ntype LoadProfileContentProps = {};\r\n\r\nenum DataTab {\r\n  DATA = \"data\",\r\n  GRAPH = \"graph\",\r\n  NONE = \"\",\r\n}\r\n\r\nconst LoadProfileContent: React.FunctionComponent<LoadProfileContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(DataTab.DATA);\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n  return (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div className={classes.loadProfileContent_Header}>\r\n        <Typography className={classes.loadProfileContent_Title} variant=\"h5\">\r\n          Load Profile\r\n        </Typography>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          <HorizontalTab label=\"Data\" value={DataTab.DATA} />\r\n          <HorizontalTab label=\"Graph\" value={DataTab.GRAPH} />\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.loadProfileContent_Content}>\r\n        {selectedTab === DataTab.DATA && <DataContent></DataContent>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadProfileContent_root: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minWidth: 0,\r\n    minHeight: 0,\r\n  },\r\n  loadProfileContent_Header: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  loadProfileContent_Title: {\r\n    marginRight: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: \"center\",\r\n  },\r\n  loadProfileContent_Content: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    minHeight: \"0px\",\r\n    minWidth: \"0px\",\r\n  },\r\n}));\r\n\r\nexport default LoadProfileContent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\nimport { Today } from \"@material-ui/icons\";\r\nimport { Month } from \"../../../enums\";\r\nimport HourTreeItem from \"./HourTreeItem\";\r\n\r\ntype DayTreeProps = {\r\n  loadProfiles: LoadProfile[];\r\n  totalLoadProfile: LoadProfile;\r\n  dateString: string;\r\n  nodeId: string;\r\n};\r\n\r\nconst DayTree = (props: DayTreeProps) => {\r\n  const { loadProfiles, dateString, nodeId, totalLoadProfile } = props;\r\n\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    setDate(new Date(dateString));\r\n  }, [dateString]);\r\n\r\n  return (\r\n    <StyledTreeItem\r\n      nodeId={nodeId}\r\n      labelText={`${Month[date.getMonth()]} ${date.getDate()}`}\r\n      labelIcon={Today}\r\n    >\r\n      <HourTreeItem\r\n        nodeId={`DTI:D:${dateString}H`}\r\n        dateString={dateString}\r\n        header={true}\r\n        loadProfiles={loadProfiles}\r\n        totalLoadProfile={totalLoadProfile}\r\n      />\r\n      {[...Array(24).keys()].map((hour) => {\r\n        return (\r\n          <HourTreeItem\r\n            nodeId={`HTI: H:${hour}`}\r\n            key={`HTI: H:${hour}`}\r\n            hour={hour + 1}\r\n            dateString={dateString}\r\n            loadProfiles={loadProfiles}\r\n            totalLoadProfile={totalLoadProfile}\r\n          />\r\n        );\r\n      })}\r\n    </StyledTreeItem>\r\n  );\r\n};\r\n\r\nexport default DayTree;\r\n","import React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\nimport { ArrowDownward, ArrowRight, CalendarToday } from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { Month } from \"../../../enums\";\r\nimport DayTreeItem from \"./DayTreeItem\";\r\n\r\ntype MonthlyTreeProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst MonthlyTree = (props: MonthlyTreeProps) => {\r\n  const { monthlyLoadProfile } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={[\"1\"]}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"1\"\r\n        labelText={`${Month[monthlyLoadProfile.billingPeriod.month - 1]} ${\r\n          monthlyLoadProfile.billingPeriod.year\r\n        }`}\r\n        labelIcon={CalendarToday}\r\n      >\r\n        {[...monthlyLoadProfile.dateStrings.values()].map((dateString) => {\r\n          let loadProfiles = [\r\n            ...Array.from(monthlyLoadProfile.loadProfiles.values()),\r\n          ];\r\n          let key = `DTI:D:${dateString}`;\r\n          return (\r\n            <DayTreeItem\r\n              totalLoadProfile={monthlyLoadProfile.totalLoadpRofile}\r\n              key={key}\r\n              nodeId={key}\r\n              loadProfiles={loadProfiles}\r\n              dateString={dateString}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      display: \"inline-block\",\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(3)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyTree;\r\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\nimport DetailsTree from \"./DetailsTree\";\r\nimport MonthlyTree from \"./MonthlyTree\";\r\n\r\ntype MonthlyCardProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst MonthlyCard: React.FunctionComponent<MonthlyCardProps> = (props) => {\r\n  const { monthlyLoadProfile } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <MonthlyTree monthlyLoadProfile={monthlyLoadProfile} />\r\n      <DetailsTree monthlyLoadProfile={monthlyLoadProfile} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      boxSizing: \"border-box\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyCard;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport { LoadProfileContext } from \"../../../loadprofile/LoadProfileContextProvider\";\r\nimport React, { useContext } from \"react\";\r\n\r\nimport MonthlyCard from \"./MonthlyCard\";\r\n\r\ntype DataContentProps = {};\r\n\r\nconst DataContent: React.FunctionComponent<DataContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.dateCotnent_root}>\r\n      <div className={classes.dateCotnent_content}>\r\n        {Array.from(loadProfileContext.monthlyLoadProfiles.values()).map(\r\n          (monthlyLoadProfile) => {\r\n            return (\r\n              <MonthlyCard\r\n                key={`MCM:${monthlyLoadProfile.billingPeriod.month}Y:${monthlyLoadProfile.billingPeriod.year}`}\r\n                monthlyLoadProfile={monthlyLoadProfile}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dateCotnent_root: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    padding: theme.spacing(4),\r\n  },\r\n  dateCotnent_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"stretch\",\r\n    padding: theme.spacing(5),\r\n    gap: `${theme.spacing(3)}px`,\r\n    boxSizing: \"border-box\",\r\n  },\r\n}));\r\n\r\nexport default DataContent;\r\n","import { makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { VerticalTab } from \"../common/components/tabs\";\r\nimport LoadProfileContent from \"./loadprofile/LoadProfileContent\";\r\ntype MainContentProps = {};\r\n\r\nenum ContentTabs {\r\n  LOAD_PROFILE = \"loadprofile\",\r\n  SUBSTATION_REPORT = \"substationreport\",\r\n}\r\n\r\nconst MainContent: React.FunctionComponent<MainContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\r\n    ContentTabs.LOAD_PROFILE\r\n  );\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.maincontent_root}>\r\n      <div className={classes.tabs_container}>\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={selectedTab}\r\n          centered={false}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n        >\r\n          <VerticalTab label=\"Load Profile\" value={ContentTabs.LOAD_PROFILE} />\r\n          <VerticalTab\r\n            label=\"Substation Report\"\r\n            value={ContentTabs.SUBSTATION_REPORT}\r\n          />\r\n        </Tabs>\r\n      </div>\r\n      {selectedTab === ContentTabs.LOAD_PROFILE && <LoadProfileContent />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  maincontent_root: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  tabs_container: {\r\n    marginTop: theme.spacing(10),\r\n    maxWidth: \"300px\",\r\n    flexGrow: 0,\r\n  },\r\n  tabs: {\r\n    display: \"inline-block\",\r\n  },\r\n}));\r\n\r\nexport default MainContent;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Toolbar from \"../toolbar\";\r\nimport FilesDrawer, { useStyles as filesDrawerStyles } from \"../filesdrawer\";\r\nimport clsx from \"clsx\";\r\nimport Settings from \"../settings\";\r\nimport { MainContent } from \"../maincontent\";\r\nimport { makeStyles, Theme } from \"@material-ui/core\";\r\ntype DashboardProps = {};\r\n\r\nconst Dashboard: React.FC<DashboardProps> = (props) => {\r\n  const classes = useStyles();\r\n  const filesDrawerClasses = filesDrawerStyles();\r\n\r\n  const [openFilesDrawer, setOpenFilesDrawer] = useState<boolean>(true);\r\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\r\n\r\n  function handleSettingsToggle() {\r\n    setOpenSettings(true);\r\n  }\r\n\r\n  function handleSettingsUntoggle() {\r\n    setOpenSettings(false);\r\n  }\r\n\r\n  function handleFilesToggle() {\r\n    setOpenFilesDrawer(true);\r\n  }\r\n\r\n  function handleFilesUntoggle() {\r\n    setOpenFilesDrawer(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dashboard_root}>\r\n      <Toolbar\r\n        onSettingsToggled={handleSettingsToggle}\r\n        onSettingsUntoggled={handleSettingsUntoggle}\r\n        onFilesToggled={handleFilesToggle}\r\n        onFilesUntoggled={handleFilesUntoggle}\r\n      />\r\n      <FilesDrawer open={openFilesDrawer} />\r\n      <div\r\n        className={clsx(classes.dashboard_content, filesDrawerClasses.content, {\r\n          [filesDrawerClasses.contentShift]: openFilesDrawer,\r\n        })}\r\n      >\r\n        {openSettings && <Settings />}\r\n        <MainContent />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dashboard_root: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  dashboard_content: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default Dashboard;\r\n","import Dashboard from \"./Dashboard\";\r\n\r\nexport default Dashboard;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  ThemeProvider,\r\n  Box,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport LoadProfileContextProvider from \"./loadprofile/LoadProfileContextProvider\";\r\nimport Dashboard from \"./dashboard\";\r\nimport clsx from \"clsx\";\r\n\r\ntype AppProps = {};\r\n\r\nconst App: FunctionComponent<AppProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <LoadProfileContextProvider>\r\n          <div className={clsx(classes.root)}>\r\n            <Dashboard />\r\n          </div>\r\n        </LoadProfileContextProvider>\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n}));\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Fragment>\n      <App />\n    </React.Fragment>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}