{"version":3,"sources":["components/enums/Month.ts","components/theme.ts","components/loadprofile/objects/HourlyLoadProfile.ts","components/loadprofile/objects/DailyLoadProfile.ts","components/toolbar/Toolbar.tsx","objects/common/BillingPeriod.ts","components/loadprofile/objects/LoadProfile_Raw.ts","components/loadprofile/objects/LoadProfile.ts","components/loadprofile/objects/others/CoincidentPeak.ts","components/loadprofile/objects/MonthlyLoadProfile.ts","objects/common/Stack.ts","components/loadprofile/LoadProfileContextProvider.tsx","components/toolbar/StyledToggleButton.tsx","components/toolbar/use-styles.ts","components/loadprofile/LoadProfileStorage.ts","components/toolbar/index.ts","components/filesdrawer/use-styles.ts","components/filesdrawer/StyledAccordion.tsx","components/filesdrawer/FileCard.tsx","components/errors/InvalidFileError.ts","objects/common/utils/FileUtil.ts","objects/common/enums/Feeder.ts","objects/common/enums/Transformer.ts","objects/common/enums/Substation.ts","objects/common/enums/MeteringPoints.ts","objects/common/utils/ExcelUtil.ts","components/loadprofile/ExcelParser.ts","components/loadprofile/LoadProfileParser.tsx","components/filesdrawer/FileDrop.tsx","components/filesdrawer/accordions/LoadProfileAccordion.tsx","objects/common/GeneralUtil.ts","objects/monthly_interruption/MonthlyInterruptionUtil.ts","objects/monthly_interruption/MonthlyInterruptionExcelUtil.ts","components/feeder_and_demand/FeederAndDemandContextProvider.tsx","components/monthly_interruption/MonthlyInterruptionParser.tsx","components/feeder_and_demand/FeederAndDemandItem.ts","components/feeder_and_demand/FeederAndDemand.ts","components/feeder_and_demand/MonthlyFeederAndDemand.ts","objects/power_substation/PowerSubstationUtil.ts","components/filesdrawer/accordions/MonthlyInterruptionAccordion.tsx","objects/power_substation/PowerSubstationExcelUtil.ts","components/settings/Settings.tsx","components/common/components/textfields/FormSelectField.tsx","components/power_substation/PowerSubstationParser.tsx","components/power_transformer_loss/PowerTransformerLossItem.ts","components/power_transformer_loss/PowerTransformerLossSubstation.ts","components/power_transformer_loss/PowerTransformerLoss.ts","components/power_transformer_loss/MonthlyPowerTransformerLoss.ts","components/power_transformer_loss/PowerTransformerLossContextProvider.tsx","components/filesdrawer/accordions/PowerSubstationAccordion.tsx","components/filesdrawer/index.ts","components/filesdrawer/FilesDrawer.tsx","components/settings/use-styles.ts","components/settings/tabpanels/SettingsPanel.tsx","components/common/components/textfields/FormTextField.tsx","components/settings/tabpanels/LoadProfileSettingsPanel.tsx","components/settings/tabpanels/MonthlyInterruptionPanel.tsx","components/common/components/tabs/VerticalTab.tsx","components/common/components/tabs/HorizontalTab.tsx","components/settings/tabpanels/PowerSubstationPanel.tsx","components/settings/index.ts","components/maincontent/loadprofile/data/useTreeItemStyles.ts","components/maincontent/loadprofile/data/StyledTreeItem.tsx","components/maincontent/loadprofile/data/DetailsTree.tsx","components/maincontent/loadprofile/data/HourTreeItem.tsx","components/maincontent/loadprofile/data/DayTreeItem.tsx","components/maincontent/loadprofile/data/MonthlyTree.tsx","components/loadprofile/ExcelGenerator.ts","components/maincontent/loadprofile/LoadProfileContent.tsx","components/maincontent/loadprofile/data/MonthlyCard.tsx","components/maincontent/loadprofile/graph/LoadProfileGraph.tsx","components/maincontent/loadprofile/LoadProfileTabPanel.tsx","components/maincontent/feeder_demand/data/useTreeItemStyles.ts","components/maincontent/feeder_demand/data/FeederTreeItem.tsx","components/maincontent/feeder_demand/data/MonthlyFeederTree.tsx","components/feeder_and_demand/FeederAndDemandUtil.ts","components/maincontent/feeder_demand/FeederAndDemandContent.tsx","components/maincontent/feeder_demand/data/MonthlyFeederCard.tsx","components/maincontent/feeder_demand/FeederAndDemandContentRoot.tsx","components/common/components/StyledTreeItem.tsx","components/maincontent/power_transformer_loss/data/useTreeItemStyles.ts","components/maincontent/power_transformer_loss/data/PowerTransformerLossItemTree.tsx","components/maincontent/power_transformer_loss/data/PowerTransformerLossSubstationTree.tsx","components/maincontent/power_transformer_loss/data/MonthlyPowerTransformerLossTree.tsx","components/power_transformer_loss/PowerTransformerLossUtil.ts","components/maincontent/power_transformer_loss/PowerTransformerLossContent.tsx","components/maincontent/power_transformer_loss/data/MonthlyPowerTransformerLossCard.tsx","components/maincontent/MainContent.tsx","components/maincontent/power_transformer_loss/PowerTransformerLossContentRoot.tsx","components/dashboard/Dashboard.tsx","components/dashboard/index.ts","components/App.tsx","components/index.ts","index.js"],"names":["Month","theme","createMuiTheme","palette","primary","main","dark","contrastText","secondary","text","background","default","HourlyLoadProfile","hour","kwdelSet","this","kwdel","kwhdel","fileName","push","filter","length","total","DailyLoadProfile","date","hourlyLoadProfiles","max","sum","buildHourlyLoadProfiles","Array","keys","map","rawData","addKwdel","forEach","hourloadProfile","removeKwdel","maxKwdel","kwdelSum","kwhdelSum","hourlyLoadProfile","getTotalKwdel","getRawTotalKwhdel","ToggleValues","BillingPeriod","month","year","startDate","enddDate","getStartDate","getEndDate","Math","round","getTime","startMonth","startYear","moment","toDate","billingPeriod","day","minute","billingMonth","LoadProfile_Raw","meteringPoint","row","Date","setDate","getDate","getMonth","getFullYear","getBillingMonth","LoadProfile","dailyLoadProfiles","Map","dateString","has","set","get","addLoadProfileData","dailyLoadProfile","removeLoadProfileData","maxHour","maxDate","values","dailyMax","dailyKwdelSum","dailyKwhdelSum","console","log","toLocaleDateString","CoincidentPeak","MonthlyLoadProfile","loadProfiles","dateStrings","coincidentPeak","nonCoincidentPeak","diversityFactor","loadProfilesMax","loadProfilesSum","totalLoadpRofile","chartData","Set","key","add","meteringPoints","loadProfile","removeLoadPRofileData","getTotalKwhdel","dateKey","obj","resetData","dailyLp","genMaxAndSum","hourlyLp","extractDataThenAddToTotal","extractDailyLoadProfileTotalKwdelThenAddToData","delete","dlp","hlp","getRawTotal","info","coincidental","nonCoincidental","totalLoadProfile","hourlyLoadpRofiles","Stack","stack","data","top","element","isEmpty","pop","LoadProfileContext","createContext","updateLoadProfiles","rawDatas","monthlyLoadProfiles","working","deleteLoadProfiles","deleteLoadProfileInfo","LoadProfileContextProvider","props","children","useState","setMonthlyLoadProfiles","buffer","setBuffer","setWorking","useEffect","newBuffer","Promise","resolve","reject","newMonthlyLoadProfiles","addData","mlp","initOtherDetails","then","result","mpl","removeData","Provider","value","prevBuffer","newbuffer","deleteLaodProfileInfo","useStyles","makeStyles","root","border","borderRadius","backgroundColor","color","selected","StyledToggleButton","others","classes","ToggleButton","width","height","zIndex","drawer","container","display","flexDirection","justifyContent","alignItems","toggleButtonsContainer","otherButtonsContainer","LoadProfileStorageKey","Toolbar","onFilesToggled","onSettingsToggled","onSettingsUntoggled","onFilesUntoggled","FILES","toggledButton","setToggledButton","NONE","otherToggledButton","setOtherToggledButton","AppBar","elevation","className","position","Box","ToggleButtonGroup","onChange","event","newToggle","method","params","prevToggled","exclusive","Folder","SETTINGS","createStyles","flexShrink","drawerPaper","borderLeft","divider","borderRight","drawerHeader","padding","spacing","mixins","toolbar","content","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","accordion","boxShadow","borderBottom","margin","expanded","accordionSummary","marginBottom","minHeight","accordionTitle","fontSize","asdf","accordionDetails","StyledAccordion","expandedPanel","onPanelChange","panelName","title","render","Accordion","square","newExpanded","AccordionSummary","expandIcon","ExpandMore","Typography","AccordionDetails","cardStyles","mobileStepper","maxWidth","boxSizing","paper","shape","overflowWrap","wordWrap","filename","progress_text","alignSelf","gap","progress_content","action","button","textTransform","error_container","error_text","whiteSpace","FileCard","file","progress","progressInfo","errors","onRemoveFile","openError","setOpenError","Fragment","name","LinearProgress","variant","Button","size","startIcon","ErrorOutline","onClick","Dialog","open","onClose","DialogTitle","Divider","DialogContent","overflow","error","index","component","LoadProfileStorage","loadSettings","kwdelCol","Number","localStorage","getItem","KWDEL","dateCol","DATE","timeCol","TIME","dateFormat","DATE_FORMAT","timeFormat","TIME_FORMAT","kwhdelCol","KWHDEL","saveSettings","settings","setItem","String","toString","InvalidFileError","message","Error","a","fileExtension","split","parameteres","fileTypeSplit","reader","FileReader","onload","Uint8Array","target","workbook","XLSX","read","type","cellDates","readAsArrayBuffer","Feeder","FileUtil","extractWorkbookFromFile","Transformer","serialNumber","power","brand","HYOSUNG_20MVA","SHIHLIN_20MVA","SHIHLIN_10MVVA","SHIHLIN_5MVA","NANJING_20MVA","PRIME_MEIDEN_10MVA","NEW_KOREA_10MVA","NEW_KOREA_5MVA","CHANGZHOU_10MVA","SHENDA_25MVA","SubstationItem","transformer","feeders","substationKey","feeder","Substation","substationItems","PUTIK","GUIWAN","TUMAGA","ARENA_BLANCO","PRESA","TETUAN","MERCEDES","NORTHSIDE","ZAMPEN","SANJOSE_GUSU","SAN_JOSE","CALARIAN","BALIWASAN","DEDICATED_LINE","SANGALI","CULIANAN","CURUAN","FISHING_PORT","AYALA","TALISAYAN","LABUAN","RECODO","SINUNUC","CABATANGAN","PASONANCA","SAN_ROQUE","CAMANCHILI","ACLEM","GOVERNOR_ALVAREZ","VETERANS_AVENUE","NUNEZ","STA_CATALINA","RIO_HONDO","GUARDIA_NACIONAL","CAMPANER","ALL","MeteringPoint","substations","substation","substationItem","toUpperCase","MF3MPITZAMC01","MF3MPITZAMC02","MF3MPITZAMC03","MF3MPITZAMC04","MF3MPITZAMC05","MF3MPITZAMC06","MF3MPITZAMC07","ExcelUtil","cell","x","t","v","w","r","isValid","strict","number","i","setTimeout","calculatePercent","extractCells","worksheet","sheetName","kwdelAddress","c","dateAddress","timeAddress","kwhdelAddress","kwdelRef","utils","encode_cell","dateRef","timeRef","kwhdelRef","kwdelCell","timeCell","dateCell","kwhdelCell","extractDataFromRow","rowData","kwdelCellData","extractNumber","kwhdelCellData","dateCellData","extractDate","timeCellData","Boolean","concat","getHours","getMinutes","extractLoadProfileRawFromWorkbook","handleProgressUpdate","lp_rawDatas","SheetNames","exists","Sheets","range","decode_range","e","s","totalRows","percent","toFixed","cells","LoadProfileParser","onFileParsed","setProgress","setsProgressInfo","setErrors","setMeteringPoints","catch","dropZone","cursor","dropZone_focused","dropZone_content","flexWrap","dropZoneText","fontWeight","FileDrop","helperText","onFileDrop","onDragEnter","onDragLeave","onDragOver","dragging","setDragging","handleDragEnter","handleDragLeave","onDrop","getRootProps","getInputProps","onMouseEnter","onMouseLeave","clsx","gridGap","marginTop","LoadProfileAccordion","files","setFiles","loadProfileContext","useContext","prevMap","duplicate","handleFileParsed","lpRawDatas","handleRemoveFile","findFeeder","feederText","trim","Object","getMonths","months","monthNum","isNaN","getYears","years","yearNow","isFeederExistsOnFeeders","f","MonthlyInterruptionSettingsKey","GeneralUtil","freeze","findSubstationOfFeeder","item","findSubstationItemOfFeeder","MonthlyInterruptionUtil","createRawDataObject","getDay","DURATION","durationCol","FEEDER","feederCol","extractDataFromCells","rowCells","feederCellData","extractText","durationCellData","feederAddress","durationAddress","feederRef","durationRef","Data","MonthlyInterruptionExcelUtil","extractRawDatasFromWorkbook","progressCallback","monthlyInterruptionRawDatas","FeederAndDemandItem","totalOperatingHours","feederInput","demand","minutes","hours","operatingHours","powerFactor","loadFactor","kvarhrEnergy","powerSubstaionFileName","totalMinutes","totalHours","demandKwhr","kwhrEnergy","getTotalMinutes","cos","atan","FeederAndDemand","items","getTotalDays","addIfNotExist","addRawMonthlyInterruptionData","setPowerSubstationData","removeMonthlyInterruptionData","removePowerSubstationData","MonthlyFeederAndDemand","monthlyFeederAndDemand","feederAndDemands","addMonthlyInterruptionData","addRawPowerSubstationData","feederAndDemand","removePowerSubstationByFileName","removeMonthlyInterruptionByFileName","recalculateData","tempMfd","PowerSubstationSettingsKey","FeederAndDemandContext","onMonthlyInterruptionOrPowerSubstationFileParsed","onPowerSubstationDataFileRemoved","onMonthlyInterruptionDataFileRemoved","FeederAndDemandContextProvider","setMonthlyFeederAndDemand","mfd","removeMonthlyInterruptionDataByFilename","removePowerSubstationDataByFilename","MonthlyInterruptionData","newMonthlyFeederAndDemand","initValues","updateMonthlyFeederAndDemand","PowerSubstationData","MonthlyInterruptionAccordion","feederAndDemandContext","MonthlyInterruptionParser","PowerSubstationUtil","DEMAND","demandKwhrCol","KWHRENERGY","kwhrEnergyCol","KVARHRENERGY","kvarhrEnergyCol","createRawData","bililngPeriod","kwhrEnergyCellData","demandKwhrCellData","kvarhrEnergyCelLData","kwhrEnergyAddress","demandKwhrAddress","kvarhrEnergyAddress","kwhrEnergyRef","kvarhrEnergyRef","demandKwhrRef","SettingsTabs","PowerSubstationExcelUtil","BootstrapInput","withStyles","input","fontFamily","join","borderColor","InputBase","FormSelectField","label","FormControl","InputLabel","id","Select","labelId","MenuItem","form","billingYear","flex","openBillingPeriodDialog","setOpenBillingPeriodDialog","setBillingYear","setBillingMonth","setBillingPeriod","bp","DialogContentText","onSubmit","preventDefault","DialogActions","PowerTransformerLossItem","operationHours","energMwhr","demandMW","loadMVA","percentLoading","averageLoad","lossFactor","coreLoss","windingLoss","auxiliaryLoss","totalLosses","rawDemand","rawEnergyMwh","rawKvarhrEnergy","getTotal","totalKvarhr","getPowerFactor","getLoadMva","getPercentLoading","getLoadFactor","getAverageLoad","getLossFactor","getCoreLoss","getWindingLoss","getAuxiliaryLoss","getTotalLosses","rawSet","kvarhr","kwhr","loadMva","powerTransformer","energyMwh","transformerPower","PowerTransformerLossSubstation","generateKey","addIfNotExists","addPowerSubstatoinData","PowerTransformerLoss","replacePowerTransformerLossItem","addIfNotExisting","addPowerSubstationData","MonthlyPowerTransformerLoss","monthlyPowerTransformerLoss","powerTransformerLosses","replacePowerTransformerlossItem","ptl","pti","billingpPeriod","tempPowerTransformerLoss","PowerTransformerLossContext","onPowerTransformerLossItemChanged","onPowerSubstationFileParsed","onPowerSubstationFileRemoved","flieName","PowerTransformerLossContextProvider","setMonthlyPowerTransformerLoss","newData","isArray","newPlts","powerTransformerLossContext","PowerSubstationParser","FilesDrawer","setExpandedPanel","handlePanelChange","newExpandedPanel","Drawer","anchor","PowerSubstationAccordion","left","title_div","tabs","flexGrow","tab_panel","textFieldContainer","actionContainer","LoadProfileSettingsPanel","focused","FormTextField","placeholder","helpertext","limitZero","TextField","InputProps","disableUnderline","setKwdel","khwdel","setKwhdel","time","setTime","setDateFormat","setTimeFormat","lpSettings","SettingsPanel","alert","MonthlyInterruptionPanel","setDurationCol","setDateCol","setFeederCol","tab","textAlign","tab_selected","tab_wrapper","VerticalTab","Tab","wrapper","minWidth","lineHeight","HorizontalTab","PowerSubstationPanel","demandCol","setDemandCol","setKwhrEnergyCol","setKvarhrEnergyCol","TabPanel","other","role","hidden","aria-labelledby","p","Settings","LOADPROFILE_TAB","selectedTab","setSelectedTab","Tabs","orientation","centered","indicatorColor","newTab","MONTHLYINTERRUPTION_TAB","POWERSUBSTATION_TAB","useTreeItemStyles","paddingLeft","hover","borderTopRightRadius","borderBottomRightRadius","paddingRight","typography","fontWeightMedium","fontWeightRegular","group","labelRoot","labelIcon","marginRight","labelText","StyledTreeItem","LabelIcon","labelInfo","bgColor","TreeItem","style","DetailsTree","monthlyLoadProfile","TreeView","defaultExpanded","defaultCollapseIcon","ArrowDownward","defaultExpandIcon","ArrowRight","defaultEndIcon","nodeId","TrendingUp","Functions","lpMax","lpSum","labelContent","HourTreeItem","treeItemClasses","header","getDailyLoadProfile","DayTree","Today","dayTree","MonthlyTree","CalendarToday","from","DayTreeItem","generateMonthlyLoadProfileXlsx","DataTab","book_new","worksheetName","worksheetData","start","end","generateSheetData","aoa_to_sheet","book_append_sheet","writeFile","monthlyCard_root","monthlyCard_paper","monthlyCard_paperAction","monthlyCard_paperContent","downloadBtn","MonthlyCard","generateLoadProfileExcel","GetAppRounded","graphContent","LoadProfileGraph","Paper","factory","scaleBand","showGrid","valueField","argumentField","monthlyLoadpRofile","loadProfileContent_tabPanel","loadProfileContent_root","LoadProfileContent","DATA","GRAPH","loadProfileContent_Header","loadProfileContent_Title","loadProfileContent_contentWrapper","loadProfileContent_content","LoadProfileTabPanel","numbers","FederTreeitem","feederAndDemandItem","MonthlyFeederTree","FeederTreeItem","Title","Place","FeederAndDemandUtil","removePowerSubstationFile","removeMonthlyInterruptionFile","generateExcelFile","second","MonthlyFeederCard","FeederAndDemandContent","feederAndDemandContent_root","feederAndDemand_header","feederAndDemand_title","feederAndDemand_contentContainer","feederAndDemandContent","FeederAndDemandContentRoot","inputField","outline","standard","easeInOut","errorField","PowerTransformerLossItemTree","powerTransformerLossItem","setDemand","demandError","setDemmandError","newItem","PowerTransformerLossSubstationTree","powerTransformerLossSubstation","PlaceOutlined","MonthlyPowerTransformerLossTree","powerTransformerLoss","PowerTransformerLossUtil","MonthlyPowerTransformerLossCard","ContentTabs","PowerTransformerLossContent","PowerTransformerLossContentRoot","mainContent_content","maincontent_root","tabs_container","MainContent","LOAD_PROFILE","POWER_BILL","FEEDERDEMAND_OUTAGED","SUBSTATION_LOSS","POWER_TRANSFORMER_LOSS","dashboard_root","dashboard_content","Dashboard","filesDrawerClasses","filesDrawerStyles","openFilesDrawer","setOpenFilesDrawer","openSettings","setOpenSettings","App","ThemeProvider","CssBaseline","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2bdf4ad.chunk.js","sourcesContent":["enum Month {\r\n  JANUARY,\r\n  FEBRUARY,\r\n  MARCH,\r\n  APRIL,\r\n  MAY,\r\n  JUNE,\r\n  JULY,\r\n  AUGUST,\r\n  SEPTEMBER,\r\n  OCTOBER,\r\n  NOVEMBER,\r\n  DECEMBER,\r\n}\r\n\r\nexport default Month;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#45aaf2\",\r\n      dark: \"#2d98da\",\r\n      contrastText: \"white\",\r\n    },\r\n    secondary: {\r\n      main: \"#fc5c65\",\r\n      dark: \"#eb3b5a\",\r\n      contrastText: \"white\",\r\n    },\r\n    text: {\r\n      primary: \"#778ca3\",\r\n      secondary: \"#B4BEC8\",\r\n    },\r\n    background: {\r\n      default: \"#F5F7F9\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","class HourlyLoadProfile {\r\n  hour: number;\r\n  kwdelSet: { fileName: string; kwdel: number; kwhdel: number }[];\r\n\r\n  constructor(hour: number) {\r\n    this.hour = hour;\r\n    this.kwdelSet = [];\r\n  }\r\n\r\n  addKwdel(kwdel: number, kwhdel: number, fileName: string): void {\r\n    this.kwdelSet.push({ fileName, kwdel, kwhdel });\r\n  }\r\n\r\n  removeKwdel(fileName: string) {\r\n    this.kwdelSet = this.kwdelSet.filter(\r\n      (kwdel) => kwdel.fileName !== fileName\r\n    );\r\n  }\r\n\r\n  getTotalKwhdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwhdel;\r\n    }\r\n    return total / this.kwdelSet.length;\r\n  }\r\n\r\n  getRawTotalKwhdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwhdel;\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalKwdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwdel;\r\n    }\r\n    return total / this.kwdelSet.length;\r\n  }\r\n\r\n  getRawTotal(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwdel;\r\n    }\r\n    return total;\r\n  }\r\n}\r\n\r\nexport default HourlyLoadProfile;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport HourlyLoadProfile from \"./HourlyLoadProfile\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\n\r\nclass DailyLoadProfile {\r\n  date: Date;\r\n  hourlyLoadProfiles: HourlyLoadProfile[];\r\n  max: { kwdel: number; hour: number };\r\n  sum: { kwdel: number; kwhdel: number };\r\n\r\n  constructor(date: Date) {\r\n    this.date = date;\r\n    this.hourlyLoadProfiles = this.buildHourlyLoadProfiles();\r\n    this.max = { kwdel: 0, hour: 0 };\r\n    this.sum = { kwdel: 0, kwhdel: 0 };\r\n  }\r\n\r\n  private buildHourlyLoadProfiles() {\r\n    return [...Array(24).keys()].map((hour) => {\r\n      return new HourlyLoadProfile(hour);\r\n    });\r\n  }\r\n\r\n  addLoadProfileData(rawData: LoadProfile_Raw) {\r\n    this.hourlyLoadProfiles[rawData.hour].addKwdel(\r\n      rawData.kwdel,\r\n      rawData.kwhdel,\r\n      rawData.fileName\r\n    );\r\n  }\r\n\r\n  removeLoadProfileData(fileName: string) {\r\n    this.hourlyLoadProfiles.forEach((hourloadProfile) => {\r\n      hourloadProfile.removeKwdel(fileName);\r\n    });\r\n  }\r\n\r\n  genMaxAndSum() {\r\n    let maxKwdel = 0;\r\n    let hour = 1;\r\n    let kwdelSum = 0;\r\n    let kwhdelSum = 0;\r\n    for (let hourlyLoadProfile of this.hourlyLoadProfiles) {\r\n      let kwdel = hourlyLoadProfile.getTotalKwdel();\r\n      kwdelSum += kwdel;\r\n      kwhdelSum += hourlyLoadProfile.getRawTotalKwhdel();\r\n      if (kwdel > maxKwdel) {\r\n        hour = hourlyLoadProfile.hour;\r\n        maxKwdel = kwdel;\r\n      }\r\n    }\r\n\r\n    this.max = { kwdel: maxKwdel, hour };\r\n    this.sum = { kwdel: kwdelSum, kwhdel: kwhdelSum };\r\n    return { max: this.max, sum: this.sum };\r\n  }\r\n}\r\n\r\nexport default DailyLoadProfile;\r\n","import { AppBar, Box } from \"@material-ui/core\";\r\nimport { Folder, Settings } from \"@material-ui/icons\";\r\nimport { ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport StyledToggleButton from \"./StyledToggleButton\";\r\n\r\nimport useStyles from \"./use-styles\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\ntype ToolbarProps = {\r\n  onSettingsToggled: () => void;\r\n  onSettingsUntoggled: () => void;\r\n  onFilesToggled: () => void;\r\n  onFilesUntoggled: () => void;\r\n};\r\n\r\nenum ToggleValues {\r\n  FILES = \"files\",\r\n  SETTINGS = \"settings\",\r\n  NONE = \"\",\r\n}\r\n\r\nconst Toolbar: React.FC<ToolbarProps> = ({\r\n  onFilesToggled,\r\n  onSettingsToggled,\r\n  onSettingsUntoggled,\r\n  onFilesUntoggled,\r\n  ...others\r\n}) => {\r\n  const [toggledButton, setToggledButton] = useState<string>(\r\n    ToggleValues.FILES\r\n  );\r\n  const [otherToggledButton, setOtherToggledButton] = useState<string>(\r\n    ToggleValues.NONE\r\n  );\r\n\r\n  function handleToggleChange(\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newToggle: string\r\n  ) {\r\n    console.log({\r\n      method: \"handleToggleChange()\",\r\n      params: { newToggle },\r\n    });\r\n\r\n    const prevToggled = toggledButton;\r\n    setToggledButton(newToggle);\r\n    if (newToggle === ToggleValues.FILES) {\r\n      onFilesToggled();\r\n    } else if (prevToggled === ToggleValues.FILES) {\r\n      onFilesUntoggled();\r\n    }\r\n  }\r\n\r\n  function handleOtherToggleChange(\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newToggle: string\r\n  ) {\r\n    console.log({\r\n      method: \"handleOtherToggleChange()\",\r\n      params: { newToggle },\r\n    });\r\n\r\n    const prevToggled = otherToggledButton;\r\n    setOtherToggledButton(newToggle);\r\n    if (newToggle === ToggleValues.SETTINGS) {\r\n      onSettingsToggled();\r\n    } else if (prevToggled === ToggleValues.SETTINGS) {\r\n      onSettingsUntoggled();\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar\r\n      elevation={4}\r\n      className={classes.root}\r\n      position=\"static\"\r\n      color=\"inherit\"\r\n    >\r\n      <Box className={classes.container}>\r\n        <Box className={classes.toggleButtonsContainer}>\r\n          <ToggleButtonGroup\r\n            onChange={handleToggleChange}\r\n            value={toggledButton}\r\n            exclusive\r\n          >\r\n            <StyledToggleButton value={ToggleValues.FILES}>\r\n              <Folder />\r\n            </StyledToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box className={classes.otherButtonsContainer}>\r\n          <ToggleButtonGroup\r\n            onChange={handleOtherToggleChange}\r\n            value={otherToggledButton}\r\n            exclusive\r\n          >\r\n            <StyledToggleButton value={ToggleValues.SETTINGS}>\r\n              <Settings />\r\n            </StyledToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import moment from \"moment\";\r\nimport { Month } from \"../../components/enums\";\r\n\r\nclass BillingPeriod {\r\n  month: number;\r\n  year: number;\r\n  startDate: Date;\r\n  enddDate: Date;\r\n\r\n  constructor(month: number, year: number) {\r\n    this.month = month;\r\n    this.year = year;\r\n    this.startDate = this.getStartDate();\r\n    this.enddDate = this.getEndDate();\r\n  }\r\n\r\n  static getBillingMonth(\r\n    month: number,\r\n    day: number,\r\n    minute: number = 1,\r\n    hour: number = 0\r\n  ) {\r\n    let billingMonth = month;\r\n    if (day >= 26) {\r\n      if (!(hour === 0 && minute === 0 && day === 26)) {\r\n        billingMonth = ++billingMonth % 12;\r\n        if (billingMonth === 0) {\r\n          billingMonth = 12;\r\n        }\r\n      }\r\n    }\r\n    return billingMonth;\r\n  }\r\n\r\n  getTotalDays() {\r\n    return Math.round(\r\n      (this.enddDate.getTime() - this.startDate.getTime()) /\r\n        (1000 * 60 * 60 * 24)\r\n    );\r\n  }\r\n\r\n  private getStartDate() {\r\n    let startMonth = this.month === 1 ? 12 : this.month - 1;\r\n    let startYear = this.month === 1 ? this.year - 1 : this.year;\r\n    return moment(`${startMonth}/26/${startYear}`, \"MM/DD/YYYY\").toDate();\r\n  }\r\n\r\n  private getEndDate() {\r\n    return moment(`${this.month}/25/${this.year}`, \"MM/DD/YYYY\").toDate();\r\n  }\r\n\r\n  equalsTo(billingPeriod: BillingPeriod): boolean {\r\n    if (\r\n      this.month === null ||\r\n      billingPeriod == null ||\r\n      billingPeriod.month === null\r\n    ) {\r\n      return false;\r\n    }\r\n    return (\r\n      this.month === billingPeriod.month && this.year === billingPeriod.year\r\n    );\r\n  }\r\n\r\n  toString() {\r\n    return `${Month[this.month - 1]} ${this.year}`;\r\n  }\r\n}\r\n\r\nexport default BillingPeriod;\r\n","import BillingPeriod from \"../../../objects/common/BillingPeriod\";\r\nimport { Month } from \"../../enums\";\r\n\r\nclass LoadProfile_Raw {\r\n  kwdel: number;\r\n  kwhdel: number;\r\n  hour: number;\r\n  day: number;\r\n  month: Month;\r\n  year: number;\r\n  minute: number;\r\n  meteringPoint: string;\r\n  row: number;\r\n  billingPeriod: BillingPeriod;\r\n  fileName: string;\r\n\r\n  constructor(\r\n    kwdel: number,\r\n    kwhdel: number,\r\n    day: number,\r\n    month: Month,\r\n    year: number,\r\n    hour: number,\r\n    minute: number,\r\n    meteringPoint: string,\r\n    row: number,\r\n    fileName: string = \"\"\r\n  ) {\r\n    this.kwdel = kwdel;\r\n    this.kwhdel = kwhdel;\r\n    this.day = day;\r\n    this.hour = hour;\r\n    this.month = month;\r\n    this.year = year;\r\n    this.minute = minute;\r\n    this.meteringPoint = meteringPoint;\r\n    this.row = row;\r\n    this.fileName = fileName;\r\n    if (this.hour === 0 && this.minute === 0) {\r\n      this.hour = 23;\r\n      this.minute = 59;\r\n      if (this.day - 1 <= 0) {\r\n        let date = new Date(`${this.year}/${this.month}/${this.day}`);\r\n        date.setDate(date.getDate() - 1);\r\n        this.day = date.getDate();\r\n        this.month = date.getMonth() + 1;\r\n        this.year = date.getFullYear();\r\n      } else {\r\n        this.day--;\r\n      }\r\n    }\r\n    let billingMonth = BillingPeriod.getBillingMonth(\r\n      this.month,\r\n      this.day,\r\n      this.hour,\r\n      this.minute\r\n    );\r\n\r\n    this.billingPeriod = new BillingPeriod(billingMonth, this.year);\r\n\r\n    if (this.minute === 0) {\r\n      this.hour--;\r\n      if (this.hour < 0) {\r\n        this.hour = 23;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default LoadProfile_Raw;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport DailyLoadProfile from \"./DailyLoadProfile\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\n\r\nclass LoadProfile {\r\n  meteringPoint: string;\r\n  dailyLoadProfiles: Map<string, DailyLoadProfile>;\r\n  max: LoadProfileMax;\r\n  sum: LoadProfileSum;\r\n\r\n  constructor(meteringPoint: string) {\r\n    this.meteringPoint = meteringPoint;\r\n    this.dailyLoadProfiles = new Map();\r\n    this.max = { kwdel: 0, hour: 1, meteringPoint: \"\", date: new Date() };\r\n    this.sum = { kwdel: 0, kwhdel: 0, meteringPoint: this.meteringPoint };\r\n  }\r\n\r\n  addLoadProfileData(rawData: LoadProfile_Raw, dateString: string) {\r\n    if (!this.dailyLoadProfiles.has(dateString)) {\r\n      this.dailyLoadProfiles.set(\r\n        dateString,\r\n        new DailyLoadProfile(new Date(dateString))\r\n      );\r\n    }\r\n    this.dailyLoadProfiles.get(dateString)?.addLoadProfileData(rawData);\r\n  }\r\n\r\n  removeLoadPRofileData(fileName: string) {\r\n    this.dailyLoadProfiles.forEach((dailyLoadProfile) => {\r\n      dailyLoadProfile.removeLoadProfileData(fileName);\r\n    });\r\n  }\r\n\r\n  getDailyLoadProfile(dateString: string): DailyLoadProfile {\r\n    return this.dailyLoadProfiles.has(dateString)\r\n      ? (this.dailyLoadProfiles.get(dateString) as DailyLoadProfile)\r\n      : new DailyLoadProfile(new Date(dateString));\r\n  }\r\n\r\n  genMaxAndSum() {\r\n    let max = 0;\r\n    let kwhdelSum = 0;\r\n    let kwdelSum = 0;\r\n    let maxHour = 1;\r\n    let maxDate = new Date();\r\n\r\n    for (let dailyLoadProfile of this.dailyLoadProfiles.values()) {\r\n      const dailyMax = dailyLoadProfile.max;\r\n      const dailyKwdelSum = dailyLoadProfile.sum.kwdel;\r\n      const dailyKwhdelSum = dailyLoadProfile.sum.kwhdel;\r\n      console.log(\r\n        `Sum for day ${dailyLoadProfile.date.toLocaleDateString()} is: ${dailyKwhdelSum}`\r\n      );\r\n      kwhdelSum += dailyKwhdelSum;\r\n      kwdelSum += dailyKwdelSum;\r\n\r\n      if (dailyMax.kwdel > max) {\r\n        max = dailyMax.kwdel;\r\n        maxHour = dailyMax.hour;\r\n        maxDate = dailyLoadProfile.date;\r\n      }\r\n    }\r\n    console.log(`Sum for ${this.meteringPoint} is: ${kwhdelSum}`);\r\n\r\n    this.max = {\r\n      kwdel: max,\r\n      hour: maxHour,\r\n      date: maxDate,\r\n      meteringPoint: this.meteringPoint,\r\n    };\r\n    this.sum = {\r\n      kwdel: kwdelSum,\r\n      kwhdel: kwhdelSum,\r\n      meteringPoint: this.meteringPoint,\r\n    };\r\n    return { max: this.max, sum: this.sum };\r\n  }\r\n}\r\n\r\nexport default LoadProfile;\r\n","export default class CoincidentPeak {\r\n  meteringPoint: string;\r\n  kwdel: number;\r\n  hour: number;\r\n  date: Date;\r\n\r\n  constructor() {\r\n    this.meteringPoint = \"\";\r\n    this.kwdel = 0;\r\n    this.hour = 0;\r\n    this.date = new Date();\r\n  }\r\n}\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport LoadProfile from \"./LoadProfile\";\r\nimport BillingPeriod from \"../../../objects/common/BillingPeriod\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\nimport { CoincidentPeak } from \"./others\";\r\nimport HourlyLoadProfile from \"./HourlyLoadProfile\";\r\nimport DailyLoadProfile from \"./DailyLoadProfile\";\r\n\r\nclass MonthlyLoadProfile {\r\n  loadProfiles: Map<string, LoadProfile>;\r\n  billingPeriod: BillingPeriod;\r\n  dateStrings: Set<string>;\r\n  coincidentPeak: CoincidentPeak;\r\n  nonCoincidentPeak: number;\r\n  diversityFactor: number;\r\n  loadProfilesMax: LoadProfileMax[];\r\n  loadProfilesSum: LoadProfileSum[];\r\n  totalLoadpRofile: LoadProfile;\r\n  chartData: Map<string, any>;\r\n\r\n  constructor(billingPeriod: BillingPeriod) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.loadProfiles = new Map();\r\n    this.dateStrings = new Set();\r\n    this.totalLoadpRofile = new LoadProfile(\"Total\");\r\n    this.coincidentPeak = new CoincidentPeak();\r\n    this.nonCoincidentPeak = 0;\r\n    this.diversityFactor = 0;\r\n    this.loadProfilesMax = [];\r\n    this.loadProfilesSum = [];\r\n    this.chartData = new Map();\r\n  }\r\n\r\n  addData(rawData: LoadProfile_Raw) {\r\n    let key = rawData.meteringPoint;\r\n    let dateString = `${rawData.month}/${rawData.day}/${rawData.year}`;\r\n\r\n    if (!this.dateStrings.has(dateString)) {\r\n      this.dateStrings.add(dateString);\r\n    }\r\n\r\n    if (!this.loadProfiles.has(key)) {\r\n      this.loadProfiles.set(key, new LoadProfile(key));\r\n    }\r\n    this.loadProfiles.get(key)?.addLoadProfileData(rawData, dateString);\r\n  }\r\n\r\n  removeData(fileName: string, meteringPoints: string[]) {\r\n    meteringPoints.forEach((key) => {\r\n      if (this.loadProfiles.has(key)) {\r\n        let loadProfile = this.loadProfiles.get(key);\r\n        loadProfile?.removeLoadPRofileData(fileName);\r\n      }\r\n    });\r\n  }\r\n\r\n  private resetData() {\r\n    this.nonCoincidentPeak = 0;\r\n    this.loadProfilesMax = [];\r\n    this.loadProfilesSum = [];\r\n    this.totalLoadpRofile = new LoadProfile(\"Total\");\r\n    this.chartData = new Map();\r\n  }\r\n\r\n  private extractDataThenAddToTotal(\r\n    hourlyLoadProfile: HourlyLoadProfile,\r\n    dailyLoadProfile: DailyLoadProfile\r\n  ) {\r\n    let rawData = new LoadProfile_Raw(\r\n      hourlyLoadProfile.getTotalKwdel(),\r\n      hourlyLoadProfile.getTotalKwhdel(),\r\n      dailyLoadProfile.date.getDate(),\r\n      dailyLoadProfile.date.getMonth() + 1,\r\n      dailyLoadProfile.date.getFullYear(),\r\n      hourlyLoadProfile.hour,\r\n      3,\r\n      \"Total\",\r\n      0\r\n    );\r\n    let dateString = `${rawData.month}/${rawData.day}/${rawData.year}`;\r\n    this.totalLoadpRofile.addLoadProfileData(rawData, dateString);\r\n  }\r\n\r\n  private extractDailyLoadProfileTotalKwdelThenAddToData(\r\n    dailyLoadProfile: DailyLoadProfile,\r\n    loadProfile: LoadProfile\r\n  ) {\r\n    let dateKey = `${\r\n      dailyLoadProfile.date.getMonth() + 1\r\n    }/${dailyLoadProfile.date.getDate()}`;\r\n\r\n    if (!this.chartData.has(dateKey)) {\r\n      let obj: any = { date: dateKey };\r\n      obj[`${loadProfile.meteringPoint}`] = dailyLoadProfile.sum.kwdel;\r\n      this.chartData.set(dateKey, obj);\r\n    } else {\r\n      let obj = this.chartData.get(dateKey);\r\n      obj[`${loadProfile.meteringPoint}`] = dailyLoadProfile.sum.kwdel;\r\n    }\r\n  }\r\n\r\n  initOtherDetails() {\r\n    this.resetData();\r\n\r\n    let hlpList: HourlyLoadProfile[] = [];\r\n\r\n    for (let loadProfile of this.loadProfiles.values()) {\r\n      for (let dailyLp of [...loadProfile.dailyLoadProfiles.values()]) {\r\n        dailyLp.genMaxAndSum();\r\n        for (let hourlyLp of dailyLp.hourlyLoadProfiles) {\r\n          this.extractDataThenAddToTotal(hourlyLp, dailyLp);\r\n        }\r\n        this.extractDailyLoadProfileTotalKwdelThenAddToData(\r\n          dailyLp,\r\n          loadProfile\r\n        );\r\n      }\r\n      const { max, sum } = loadProfile.genMaxAndSum();\r\n\r\n      if (sum.kwdel === 0) {\r\n        this.loadProfiles.delete(loadProfile.meteringPoint);\r\n      } else {\r\n        this.loadProfilesMax.push(max);\r\n        this.loadProfilesSum.push(sum);\r\n        this.nonCoincidentPeak += max.kwdel;\r\n      }\r\n    }\r\n\r\n    for (let dlp of this.totalLoadpRofile.dailyLoadProfiles.values()) {\r\n      for (let hlp of dlp.hourlyLoadProfiles) {\r\n        if (hlp.getRawTotal() > this.coincidentPeak.kwdel) {\r\n          this.coincidentPeak.kwdel = hlp.getRawTotal();\r\n          this.coincidentPeak.date = dlp.date;\r\n          this.coincidentPeak.hour = hlp.hour;\r\n          this.coincidentPeak.meteringPoint = \"Total\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.diversityFactor = this.nonCoincidentPeak / this.coincidentPeak.kwdel;\r\n\r\n    console.log({\r\n      info: \"max and sum\",\r\n      max: this.loadProfilesMax,\r\n      sum: this.loadProfilesSum,\r\n      coincidental: this.coincidentPeak,\r\n      nonCoincidental: this.nonCoincidentPeak,\r\n      diversityFactor: this.diversityFactor,\r\n      totalLoadProfile: this.totalLoadpRofile,\r\n      chartData: this.chartData,\r\n      hourlyLoadpRofiles: hlpList,\r\n    });\r\n  }\r\n}\r\n\r\nexport default MonthlyLoadProfile;\r\n","class Stack<T> {\r\n  data: T[];\r\n  top: number;\r\n\r\n  constructor(stack?: Stack<T>) {\r\n    this.data = [];\r\n    this.top = 0;\r\n\r\n    if (stack) {\r\n      this.data = stack.data;\r\n      this.top = stack.top;\r\n    }\r\n  }\r\n\r\n  push(element: T) {\r\n    this.data[this.top] = element;\r\n    this.top = this.top + 1;\r\n  }\r\n\r\n  length() {\r\n    return this.top;\r\n  }\r\n\r\n  peek() {\r\n    return this.data[this.top - 1];\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.top === 0;\r\n  }\r\n\r\n  pop() {\r\n    if (this.isEmpty() === false) {\r\n      this.top = this.top - 1;\r\n      return this.data.pop() as T; // removes the last element\r\n    }\r\n  }\r\n}\r\n\r\nexport default Stack;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {\r\n  LoadProfile,\r\n  LoadProfile_Raw,\r\n  MonthlyLoadProfile,\r\n} from \"../loadprofile/objects\";\r\nimport Stack from \"../../objects/common/Stack\";\r\n\r\nexport type DeleteLoadpRofileInfo = {\r\n  fileName: string;\r\n  meteringPoints: string[];\r\n};\r\n\r\nconst LoadProfileContext = createContext<{\r\n  updateLoadProfiles: (rawDatas: LoadProfile_Raw[]) => void;\r\n  monthlyLoadProfiles: Map<string, MonthlyLoadProfile>;\r\n  working: boolean;\r\n  deleteLoadProfiles: (deleteLoadProfileInfo: DeleteLoadpRofileInfo) => void;\r\n}>({\r\n  updateLoadProfiles: (rawDatas) => {},\r\n  monthlyLoadProfiles: new Map(),\r\n  working: false,\r\n  deleteLoadProfiles: (deleteLoadProfileInfo) => {},\r\n});\r\n\r\ntype LoadProfileContextProviderProps = {};\r\nconst LoadProfileContextProvider: React.FunctionComponent<LoadProfileContextProviderProps> = (\r\n  props\r\n) => {\r\n  const { children, ...others } = props;\r\n  const [monthlyLoadProfiles, setMonthlyLoadProfiles] = useState(\r\n    new Map<string, MonthlyLoadProfile>()\r\n  );\r\n\r\n  const [buffer, setBuffer] = useState<\r\n    Stack<LoadProfile_Raw[] | DeleteLoadpRofileInfo>\r\n  >(new Stack());\r\n  const [working, setWorking] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"MonthlyLoadProfiles State Updated\");\r\n    console.log(monthlyLoadProfiles);\r\n  }, [monthlyLoadProfiles]);\r\n\r\n  function updateLoadProfiles(rawDatas: LoadProfile_Raw[]) {\r\n    console.log(\"Updating load profile datas in context....\");\r\n\r\n    setBuffer((prevBuffer) => {\r\n      let newbuffer = new Stack(prevBuffer);\r\n      newbuffer.push(rawDatas);\r\n      return newbuffer;\r\n    });\r\n  }\r\n\r\n  function deleteLoadProfiles(deleteLaodProfileInfo: DeleteLoadpRofileInfo) {\r\n    setBuffer((prevBuffer) => {\r\n      let newbuffer = new Stack(prevBuffer);\r\n      newbuffer.push(deleteLaodProfileInfo);\r\n      return newbuffer;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (working) return;\r\n    if (buffer.isEmpty()) {\r\n      setWorking(false);\r\n      return;\r\n    }\r\n\r\n    let newBuffer = new Stack(buffer);\r\n    let data = newBuffer.pop();\r\n    if (data) {\r\n      setWorking(true);\r\n\r\n      if (data instanceof Array) {\r\n        console.log(\"Data instance of ARRRRAAAAY....\");\r\n        addRawDatasToMonthlyLoadProfiles(data).then((result) => {\r\n          setMonthlyLoadProfiles(result);\r\n          setWorking(false);\r\n          setBuffer(newBuffer);\r\n        });\r\n      } else {\r\n        console.log(\"Data instance of ARRRRAAAAY....\");\r\n        deleteDataFromMonthlyLoadProfiles(\r\n          data.fileName,\r\n          data.meteringPoints\r\n        ).then((result) => {\r\n          setMonthlyLoadProfiles(result);\r\n          setWorking(false);\r\n          setBuffer(newBuffer);\r\n        });\r\n      }\r\n    }\r\n  }, [buffer]);\r\n\r\n  function addRawDatasToMonthlyLoadProfiles(rawDatas: LoadProfile_Raw[]) {\r\n    return new Promise<Map<string, MonthlyLoadProfile>>((resolve, reject) => {\r\n      console.log(\"Processing rawDatas\");\r\n      let newMonthlyLoadProfiles = new Map(monthlyLoadProfiles);\r\n      for (let rawData of rawDatas) {\r\n        let key = `${rawData.billingPeriod.month}-${rawData.year}`;\r\n        if (!newMonthlyLoadProfiles.has(key)) {\r\n          newMonthlyLoadProfiles.set(\r\n            key,\r\n            new MonthlyLoadProfile(rawData.billingPeriod)\r\n          );\r\n        }\r\n        newMonthlyLoadProfiles.get(key)?.addData(rawData);\r\n      }\r\n      newMonthlyLoadProfiles.forEach((mlp) => mlp.initOtherDetails());\r\n      resolve(newMonthlyLoadProfiles);\r\n    });\r\n  }\r\n\r\n  function deleteDataFromMonthlyLoadProfiles(\r\n    fileName: string,\r\n    meteringPoints: string[]\r\n  ) {\r\n    return new Promise<Map<string, MonthlyLoadProfile>>((resolve, reject) => {\r\n      console.log(\"DELETING LAODP ROFILESS\");\r\n      let newMonthlyLoadProfiles = new Map(monthlyLoadProfiles);\r\n      for (let key of newMonthlyLoadProfiles.keys()) {\r\n        let mpl = newMonthlyLoadProfiles.get(key);\r\n        mpl?.removeData(fileName, meteringPoints);\r\n      }\r\n      newMonthlyLoadProfiles.forEach((mlp) => {\r\n        mlp.initOtherDetails();\r\n        if (mlp.nonCoincidentPeak === 0) {\r\n          let key = `${mlp.billingPeriod.month}-${mlp.billingPeriod.year}`;\r\n          newMonthlyLoadProfiles.delete(key);\r\n        }\r\n      });\r\n      resolve(newMonthlyLoadProfiles);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <LoadProfileContext.Provider\r\n      value={{\r\n        updateLoadProfiles,\r\n        monthlyLoadProfiles,\r\n        deleteLoadProfiles,\r\n        working,\r\n      }}\r\n    >\r\n      {children}\r\n    </LoadProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LoadProfileContextProvider;\r\nexport { LoadProfileContext };\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport { ToggleButton } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\n\r\ntype StyledToggleButtonProps = {\r\n  value?: string;\r\n};\r\n\r\nconst StyledToggleButton: React.FunctionComponent<StyledToggleButtonProps> = ({\r\n  value,\r\n  children,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ToggleButton classes={{ root: classes.root }} value={value} {...others}>\r\n      {children}\r\n    </ToggleButton>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"none\",\r\n    borderRadius: 0,\r\n    \"&.Mui-selected\": {\r\n      backgroundColor: theme.palette.background.default,\r\n      color: theme.palette.primary.main,\r\n    },\r\n    \"&:hover, &.Mui-selected:hover\": {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    selected: {},\r\n  },\r\n}));\r\n\r\nexport default StyledToggleButton;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: 50,\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.drawer + 10,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  toggleButtonsContainer: {},\r\n  otherButtonsContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { LoadProfileSettings } from \"./types/LoadProfileSettings\";\r\nenum LoadProfileStorageKey {\r\n  KWDEL = \"lp_kwdelCol\",\r\n  KWHDEL = \"lp_kwhdelCol\",\r\n  DATE = \"lp_dateCol\",\r\n  TIME = \"lp_timeCol\",\r\n  DATE_FORMAT = \"lp_dateFormat\",\r\n  TIME_FORMAT = \"lp_timeFormat\",\r\n}\r\n\r\nfunction loadSettings(): LoadProfileSettings {\r\n  let kwdelCol = Number(\r\n    localStorage.getItem(LoadProfileStorageKey.KWDEL) || \"1\"\r\n  );\r\n  let dateCol = Number(localStorage.getItem(LoadProfileStorageKey.DATE) || \"2\");\r\n  let timeCol = Number(localStorage.getItem(LoadProfileStorageKey.TIME) || \"3\");\r\n  let dateFormat =\r\n    localStorage.getItem(LoadProfileStorageKey.DATE_FORMAT) || \"MM/DD/YYYY\";\r\n  let timeFormat =\r\n    localStorage.getItem(LoadProfileStorageKey.TIME_FORMAT) || \"HH:mm\";\r\n\r\n  let kwhdelCol = Number(\r\n    localStorage.getItem(LoadProfileStorageKey.KWHDEL) || \"4\"\r\n  );\r\n  return {\r\n    kwdelCol,\r\n    dateCol,\r\n    timeCol,\r\n    dateFormat,\r\n    timeFormat,\r\n    kwhdelCol,\r\n  };\r\n}\r\n\r\nfunction saveSettings(settings: LoadProfileSettings): void {\r\n  localStorage.setItem(LoadProfileStorageKey.KWDEL, String(settings.kwdelCol));\r\n\r\n  localStorage.setItem(LoadProfileStorageKey.TIME, String(settings.timeCol));\r\n\r\n  localStorage.setItem(LoadProfileStorageKey.DATE, String(settings.dateCol));\r\n\r\n  localStorage.setItem(\r\n    LoadProfileStorageKey.DATE_FORMAT,\r\n    String(settings.dateFormat)\r\n  );\r\n\r\n  localStorage.setItem(\r\n    LoadProfileStorageKey.TIME_FORMAT,\r\n    String(settings.timeFormat)\r\n  );\r\n\r\n  localStorage.setItem(\r\n    LoadProfileStorageKey.KWHDEL,\r\n    settings.kwhdelCol.toString()\r\n  );\r\n}\r\n\r\nconst LoadProfileStorage = {\r\n  loadSettings,\r\n  saveSettings,\r\n};\r\n\r\nexport default LoadProfileStorage;\r\n","import Toolbar from \"./Toolbar\";\r\n\r\nexport default Toolbar;\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      position: \"static\",\r\n      borderLeft: `1px solid ${theme.palette.divider}`,\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useStyles;\r\nexport { drawerWidth };\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\n\r\ntype StyledAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n  panelName: string;\r\n  title: string;\r\n  render?: any;\r\n};\r\n\r\nconst StyledAccordion: React.FunctionComponent<StyledAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  panelName,\r\n  title,\r\n  render,\r\n  children,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function handlePanelChange(\r\n    event: React.ChangeEvent<{}>,\r\n    newExpanded: boolean\r\n  ) {\r\n    onPanelChange(newExpanded ? panelName : \"\");\r\n  }\r\n\r\n  return (\r\n    <Accordion\r\n      className={classes.accordion}\r\n      square\r\n      onChange={handlePanelChange}\r\n    >\r\n      <AccordionSummary\r\n        className={classes.accordionSummary}\r\n        classes={{ content: classes.content }}\r\n        expandIcon={<ExpandMore />}\r\n      >\r\n        <Typography className={classes.accordionTitle}>{title}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.accordionDetails}>\r\n        {children}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    accordion: {\r\n      border: \"1px solid rgba(0, 0, 0, .125)\",\r\n      boxShadow: \"none\",\r\n      \"&:not(:last-child)\": {\r\n        borderBottom: 0,\r\n      },\r\n      \"&:before\": {\r\n        display: \"none\",\r\n      },\r\n      \"&$expanded\": {\r\n        margin: \"auto\",\r\n      },\r\n      expanded: {},\r\n    },\r\n\r\n    accordionSummary: {\r\n      borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\r\n\r\n      marginBottom: -1,\r\n      minHeight: 30,\r\n      \"&$expanded\": {\r\n        minHeight: 30,\r\n        backgroundColor: \"black\",\r\n      },\r\n      expanded: {},\r\n    },\r\n    content: {\r\n      margin: 2,\r\n    },\r\n    accordionTitle: {\r\n      fontSize: \"0.8rem\",\r\n      asdf: {},\r\n    },\r\n    expanded: {},\r\n    accordionDetails: {\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: \"5px\",\r\n      position: \"relative\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default StyledAccordion;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ErrorOutline } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport type FilecardProps = {\r\n  file: File;\r\n  progressInfo: string;\r\n  progress: number;\r\n  errors?: string[];\r\n  onRemoveFile: () => void;\r\n};\r\n\r\nconst FileCard: React.FunctionComponent<FilecardProps> = ({\r\n  file,\r\n  progress,\r\n  progressInfo,\r\n  errors = [],\r\n  onRemoveFile,\r\n  ...others\r\n}) => {\r\n  const classes = cardStyles();\r\n  const [openError, setOpenError] = useState(false);\r\n\r\n  function handleSeeErrorsClick() {\r\n    setOpenError(true);\r\n  }\r\n\r\n  function handleCloseErrorDialog() {\r\n    setOpenError(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <div className={classes.content}>\r\n          <Typography className={classes.filename}>{file.name}</Typography>\r\n          <div className={classes.progress_content}>\r\n            <LinearProgress\r\n              value={progress}\r\n              variant={\r\n                progress === 0 || progress === 100\r\n                  ? \"determinate\"\r\n                  : \"indeterminate\"\r\n              }\r\n            />\r\n            <Typography className={classes.progress_text}>\r\n              {progressInfo}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.action}>\r\n          {errors.length !== 0 && (\r\n            <Button\r\n              className={classes.button}\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              startIcon={<ErrorOutline color=\"error\" />}\r\n              onClick={handleSeeErrorsClick}\r\n            >\r\n              see errors\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className={classes.button}\r\n            onClick={onRemoveFile}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n          >\r\n            Remove\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Dialog open={openError} onClose={handleCloseErrorDialog}>\r\n        <DialogTitle>\r\n          <Typography variant=\"h6\" color=\"error\">\r\n            Errors\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            {file.name}\r\n          </Typography>\r\n          <Divider />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box overflow=\"auto\" padding=\"5px 25px\">\r\n            {errors.map((error, index) => {\r\n              return (\r\n                <div key={index} className={classes.error_container}>\r\n                  <Typography\r\n                    component=\"p\"\r\n                    className={classes.error_text}\r\n                    key={`${index}~error`}\r\n                  >\r\n                    {error}\r\n                  </Typography>\r\n                  <Divider />\r\n                </div>\r\n              );\r\n            })}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst cardStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.mobileStepper,\r\n    maxWidth: \"100%\",\r\n    fontSize: \"0.8rem\",\r\n    boxSizing: \"border-box\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: theme.shape.borderRadius,\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    padding: 10,\r\n    overflowWrap: \"break-word\",\r\n    wordWrap: \"break-word\",\r\n  },\r\n  filename: {\r\n    fontSize: \"1em\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  progress_text: {\r\n    fontSize: \"0.7em\",\r\n    color: theme.palette.text.secondary,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"5px\",\r\n    justifyContent: \"center\",\r\n  },\r\n  progress_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"3px\",\r\n  },\r\n  action: {},\r\n  button: {\r\n    textTransform: \"none\",\r\n  },\r\n  error_container: {\r\n    maxWidth: \"100%\",\r\n    width: \"550px\",\r\n  },\r\n  error_text: {\r\n    fontSize: \"0.9rem\",\r\n    padding: \"10px 5px\",\r\n    whiteSpace: \"pre-wrap\",\r\n  },\r\n}));\r\n\r\nexport default FileCard;\r\n","class InvalidFileError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n\r\nexport default InvalidFileError;\r\n","import { WorkBook } from \"xlsx/types\";\r\nimport XLSX from \"xlsx\";\r\nimport InvalidFileError from \"../../../components/errors/InvalidFileError\";\r\n\r\nasync function extractWorkbookFromFile(file: File): Promise<WorkBook> {\r\n  return new Promise<WorkBook>((resolve, reject) => {\r\n    console.log(\"FileUTils: Timeout wait for 10 secs....\");\r\n    let fileExtension: string = file.name.split(\".\")[1];\r\n    console.log({\r\n      method: \"extractWorkbookFromFile()\",\r\n      parameteres: { file },\r\n      fileTypeSplit: file.name.split(\".\"),\r\n      fileExtension,\r\n    });\r\n\r\n    if (fileExtension !== \"xlsx\") {\r\n      reject(\r\n        new InvalidFileError(\r\n          `Invalid file: expected: .xlsx received: ${fileExtension}`\r\n        )\r\n      );\r\n    }\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (event: ProgressEvent<FileReader>) {\r\n      try {\r\n        let data = new Uint8Array(event.target?.result as ArrayBuffer);\r\n        let workbook = XLSX.read(data, { type: \"array\", cellDates: true });\r\n        resolve(workbook);\r\n      } catch (error) {\r\n        reject(new Error(error));\r\n      }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  });\r\n}\r\n\r\nconst FileUtil = {\r\n  extractWorkbookFromFile,\r\n};\r\n\r\nexport default FileUtil;\r\n","enum Feeder {\r\n  TETUAN = \"Tetuan\",\r\n  MERCEDES = \"Mercedes\",\r\n  NORTHSIDE = \"Northside\",\r\n  ZAMPEN = \"Zampen\",\r\n  GUIWAN = \"Guiwan\",\r\n  TUMAGA = \"Tumaga\",\r\n  ARENA_BLANCO = \"Arena Blanco\",\r\n  PRESA = \"Presa\",\r\n  SAN_JOSE = \"San Jose\",\r\n  CALARIAN = \"Calarian\",\r\n  BALIWASAN = \"Baliwasan\",\r\n  DEDICATED_LINE = \"Dedicated Line\",\r\n  INTERCO = \"Interco (1-3MVA)\",\r\n  CULIANAN = \"Culianan\",\r\n  CURUAN = \"Curuan\",\r\n  FISHING_PORT = \"Fishing Port\",\r\n  TALISAYAN = \"Talisayan\",\r\n  LABUAN = \"Labuan\",\r\n  RECODO = \"Recodo\",\r\n  SINUNUC = \"Sinunuc\",\r\n  PERMEX = \"PERMEX (2-2MVA)\",\r\n  BIG_FISH = \"Big Fish (1-2MVA)\",\r\n  TIN_CAN_ORIENTAL = \"Tin Can Oriental (1-2MVA)\",\r\n  MEGA_FISHIN_CORP = \"Mega Fishing Corp. (1-4MVA)\",\r\n  MEGA_FISHIN_CORP2 = \"Mega Fishing Corp. (1-3MVA)\",\r\n  PASONANCA = \"Pasonanca\",\r\n  SAN_ROQUE = \"San Roque\",\r\n  ACLEM = \"Aclem\",\r\n  GOVERNOR_ALVAREZ = \"Governor Alvarez\",\r\n  VETERANS_AVENUE = \"Veterans Avenue\",\r\n  NUNEZ = \"Nuňez\",\r\n  STA_CATALINA = \"Sta Catalina\",\r\n  RIO_HONDO = \"Rio Hondo\",\r\n  GUARDIA_NACIONAL = \"Guardia Nacional\",\r\n  CAMPANER = \"Campaner\",\r\n  KCC_MALL = \"KCC Mall (1-10MVA)\",\r\n}\r\n\r\nexport default Feeder;\r\n","class Transformer {\r\n  static readonly HYOSUNG_20MVA = new Transformer(\r\n    \"HYOSUNG_20MVA\",\r\n    \"HYOSUNG PTX - 20MVA\",\r\n    \"TP99-8513\",\r\n    20,\r\n    \"HYOSUNG\"\r\n  );\r\n  static readonly SHIHLIN_20MVA = new Transformer(\r\n    \"SHIHLIN_20MVA\",\r\n    \"SHIHLIN PTX - 20MVA\",\r\n    \"810014\",\r\n    20,\r\n    \"SHIHLIN\"\r\n  );\r\n  static readonly SHIHLIN_10MVVA = new Transformer(\r\n    \"SHIHLIN_10MVVA \",\r\n    \"SHIHLIN PTX - 10MVA\",\r\n    \"T990113\",\r\n    10,\r\n    \"SHIHLIN\"\r\n  );\r\n  static readonly SHIHLIN_5MVA = new Transformer(\r\n    \"SHIHLIN_5MVA\",\r\n    \"SHIHLIN PTX - 5MVA\",\r\n    \"\",\r\n    5,\r\n    \"SHIHLIN\"\r\n  );\r\n  static readonly NANJING_20MVA = new Transformer(\r\n    \"NANJING_20MVA\",\r\n    \"NANJING PTX - 20MVA\",\r\n    \"610205\",\r\n    20,\r\n    \"NANJING\"\r\n  );\r\n  static readonly PRIME_MEIDEN_10MVA = new Transformer(\r\n    \"PRIME_MEIDEN_10MVA\",\r\n    \"PRIME MEIDEN PTX - 10MVA\",\r\n    \"\",\r\n    10,\r\n    \"PRIME MAIDEN\"\r\n  );\r\n  static readonly NEW_KOREA_10MVA = new Transformer(\r\n    \"NEW_KOREA_10MVA\",\r\n    \"NEW KOREA PTX - 10MVA\",\r\n    \"W910009\",\r\n    10,\r\n    \"NEW KOREA\"\r\n  );\r\n  static readonly NEW_KOREA_5MVA = new Transformer(\r\n    \"NEW_KOREA_5MVA\",\r\n    \"NEW KOREA PTX - 5MVA\",\r\n    \"920194\",\r\n    5,\r\n    \"NEW KOREA\"\r\n  );\r\n  static readonly CHANGZHOU_10MVA = new Transformer(\r\n    \"CHANGZHOU_10MVA\",\r\n    \"CHANGZHOU PTX - 10MVA\",\r\n    \"91-61-146\",\r\n    10,\r\n    \"CHANGZHOU\"\r\n  );\r\n  static readonly SHENDA_25MVA = new Transformer(\r\n    \"SHENDA_25MVA\",\r\n    \"SHENDA PTX - 25MVA\",\r\n    \"\",\r\n    25,\r\n    \"SHENDA\"\r\n  );\r\n\r\n  key: string;\r\n  text: string;\r\n  serialNumber: string;\r\n  power: number;\r\n  brand: string;\r\n\r\n  private constructor(\r\n    key: string,\r\n    text: string,\r\n    serialNumber: string,\r\n    power: number,\r\n    brand: string\r\n  ) {\r\n    this.key = key;\r\n    this.text = text;\r\n    this.serialNumber = serialNumber;\r\n    this.power = power;\r\n    this.brand = brand;\r\n  }\r\n\r\n  toString() {\r\n    return this.key;\r\n  }\r\n}\r\n\r\nexport default Transformer;\r\n","import Feeder from \"./Feeder\";\r\nimport Transformer from \"./Transformer\";\r\n\r\nclass SubstationItem {\r\n  transformer: Transformer;\r\n  feeders: Set<Feeder>;\r\n  substationKey: string;\r\n\r\n  constructor(\r\n    transformer: Transformer,\r\n    feeders: Set<Feeder>,\r\n    substationKey: string\r\n  ) {\r\n    this.transformer = transformer;\r\n    this.feeders = feeders;\r\n    this.substationKey = substationKey;\r\n  }\r\n\r\n  toString() {\r\n    return this.transformer.key;\r\n  }\r\n\r\n  isFeederExist(feeder: Feeder) {\r\n    return this.feeders.has(feeder);\r\n  }\r\n}\r\n\r\nclass Substation {\r\n  static readonly PUTIK = new Substation(\"PUTIK\", \"PUTIK S/S\", [\r\n    new SubstationItem(\r\n      Transformer.SHIHLIN_20MVA,\r\n      new Set([\r\n        Feeder.GUIWAN,\r\n        Feeder.TUMAGA,\r\n        Feeder.ARENA_BLANCO,\r\n        Feeder.PRESA,\r\n      ]),\r\n      \"PUTIK\"\r\n    ),\r\n    new SubstationItem(\r\n      Transformer.HYOSUNG_20MVA,\r\n      new Set([\r\n        Feeder.TETUAN,\r\n        Feeder.MERCEDES,\r\n        Feeder.NORTHSIDE,\r\n        Feeder.ZAMPEN,\r\n      ]),\r\n      \"PUTIK\"\r\n    ),\r\n  ]);\r\n  static readonly SANJOSE_GUSU = new Substation(\r\n    \"SAN JOSE GUSU\",\r\n    \"SAN JOSE GUSU S/S\",\r\n    [\r\n      new SubstationItem(\r\n        Transformer.NANJING_20MVA,\r\n        new Set([\r\n          Feeder.SAN_JOSE,\r\n          Feeder.CALARIAN,\r\n          Feeder.BALIWASAN,\r\n          Feeder.DEDICATED_LINE,\r\n        ]),\r\n        \"SAN JOSE GUSU\"\r\n      ),\r\n      new SubstationItem(\r\n        Transformer.NEW_KOREA_10MVA,\r\n        new Set(),\r\n        \"SAN JOSE GUSU\"\r\n      ),\r\n    ]\r\n  );\r\n  static readonly SANGALI = new Substation(\"SANGALI\", \"SANGALI S/S\", [\r\n    new SubstationItem(\r\n      Transformer.PRIME_MEIDEN_10MVA,\r\n      new Set([Feeder.CULIANAN, Feeder.CURUAN, Feeder.FISHING_PORT]),\r\n      \"SANGALI\"\r\n    ),\r\n  ]);\r\n  static readonly AYALA = new Substation(\"AYALA\", \"AYALA S/S\", [\r\n    new SubstationItem(\r\n      Transformer.SHIHLIN_10MVVA,\r\n      new Set([Feeder.TALISAYAN, Feeder.LABUAN]),\r\n      \"AYALA\"\r\n    ),\r\n  ]);\r\n\r\n  static readonly RECODO = new Substation(\"RECODO\", \"RECODO S/S\", [\r\n    new SubstationItem(\r\n      Transformer.NEW_KOREA_10MVA,\r\n      new Set([Feeder.RECODO]),\r\n      \"RECODO\"\r\n    ),\r\n    new SubstationItem(\r\n      Transformer.NEW_KOREA_5MVA,\r\n      new Set([Feeder.SINUNUC]),\r\n      \"RECODO\"\r\n    ),\r\n    new SubstationItem(Transformer.SHIHLIN_5MVA, new Set([]), \"RECODO\"),\r\n  ]);\r\n  static readonly CABATANGAN = new Substation(\"CABATANGAN\", \"CABATANGAN S/S\", [\r\n    new SubstationItem(\r\n      Transformer.CHANGZHOU_10MVA,\r\n      new Set([Feeder.PASONANCA]),\r\n      \"CABATANGAN\"\r\n    ),\r\n    new SubstationItem(\r\n      Transformer.PRIME_MEIDEN_10MVA,\r\n      new Set([Feeder.SAN_ROQUE]),\r\n      \"CABATANGAN\"\r\n    ),\r\n  ]);\r\n  static readonly CAMANCHILI = new Substation(\"CAMANCHILI\", \"CAMANCHILI S/S\", [\r\n    new SubstationItem(\r\n      Transformer.SHIHLIN_20MVA,\r\n      new Set([\r\n        Feeder.ACLEM,\r\n        Feeder.GOVERNOR_ALVAREZ,\r\n        Feeder.VETERANS_AVENUE,\r\n        Feeder.NUNEZ,\r\n      ]),\r\n      \"CAMANCHILI\"\r\n    ),\r\n    new SubstationItem(\r\n      Transformer.SHENDA_25MVA,\r\n      new Set([\r\n        Feeder.STA_CATALINA,\r\n        Feeder.RIO_HONDO,\r\n        Feeder.GUARDIA_NACIONAL,\r\n        Feeder.CAMPANER,\r\n      ]),\r\n      \"CAMANCHILI\"\r\n    ),\r\n  ]);\r\n\r\n  static readonly ALL = [\r\n    Substation.PUTIK,\r\n    Substation.RECODO,\r\n    Substation.SANGALI,\r\n    Substation.SANJOSE_GUSU,\r\n    Substation.AYALA,\r\n    Substation.CABATANGAN,\r\n    Substation.CAMANCHILI,\r\n  ];\r\n\r\n  key: string;\r\n  text: string;\r\n  substationItems: SubstationItem[];\r\n\r\n  private constructor(\r\n    key: string,\r\n    text: string,\r\n    substationItems: SubstationItem[]\r\n  ) {\r\n    this.key = key;\r\n    this.text = text;\r\n    this.substationItems = substationItems;\r\n  }\r\n\r\n  toStrting() {\r\n    return this.key;\r\n  }\r\n}\r\n\r\nexport default Substation;\r\nexport { SubstationItem };\r\n","import Feeder from \"./Feeder\";\r\nimport Substation from \"./Substation\";\r\n\r\nclass MeteringPoint {\r\n  static readonly MF3MPITZAMC01 = new MeteringPoint(\"MF3MPITZAMC01\", [\r\n    Substation.PUTIK,\r\n  ]);\r\n\r\n  static readonly MF3MPITZAMC02 = new MeteringPoint(\"MF3MPITZAMC02\", [\r\n    Substation.SANJOSE_GUSU,\r\n  ]);\r\n\r\n  static readonly MF3MPITZAMC03 = new MeteringPoint(\"MF3MPITZAMC03\", [\r\n    Substation.SANGALI,\r\n  ]);\r\n  static readonly MF3MPITZAMC04 = new MeteringPoint(\"MF3MPITZAMC04\", [\r\n    Substation.RECODO,\r\n    Substation.AYALA,\r\n  ]);\r\n  static readonly MF3MPITZAMC05 = new MeteringPoint(\"MF3MPITZAMC05\", [\r\n    Substation.CABATANGAN,\r\n  ]);\r\n  static readonly MF3MPITZAMC06 = new MeteringPoint(\"MF3MPITZAMC06\", []);\r\n  static readonly MF3MPITZAMC07 = new MeteringPoint(\"MF3MPITZAMC07\", [\r\n    Substation.CAMANCHILI,\r\n  ]);\r\n\r\n  key: string;\r\n  substations: Substation[];\r\n\r\n  private constructor(key: string, substations: Substation[]) {\r\n    this.key = key;\r\n    this.substations = substations;\r\n  }\r\n\r\n  toString() {\r\n    return this.key;\r\n  }\r\n\r\n  getFeeders() {\r\n    let feeders: Feeder[] = [];\r\n    for (let substation of this.substations) {\r\n      for (let substationItem of substation.substationItems) {\r\n        feeders = [...feeders, ...substationItem.feeders];\r\n      }\r\n    }\r\n    return feeders;\r\n  }\r\n\r\n  static getMeteringPoint(meteringPoint: string): MeteringPoint | null {\r\n    switch (meteringPoint.toUpperCase()) {\r\n      case this.MF3MPITZAMC01.key:\r\n        return this.MF3MPITZAMC01;\r\n      case this.MF3MPITZAMC02.key:\r\n        return this.MF3MPITZAMC02;\r\n      case this.MF3MPITZAMC03.key:\r\n        return this.MF3MPITZAMC03;\r\n      case this.MF3MPITZAMC04.key:\r\n        return this.MF3MPITZAMC04;\r\n      case this.MF3MPITZAMC05.key:\r\n        return this.MF3MPITZAMC05;\r\n      case this.MF3MPITZAMC06.key:\r\n        return this.MF3MPITZAMC06;\r\n      case this.MF3MPITZAMC07.key:\r\n        return this.MF3MPITZAMC07;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  static exists(meteringPoint: string): boolean {\r\n    switch (meteringPoint) {\r\n      case this.MF3MPITZAMC01.key:\r\n      case this.MF3MPITZAMC02.key:\r\n      case this.MF3MPITZAMC03.key:\r\n      case this.MF3MPITZAMC04.key:\r\n      case this.MF3MPITZAMC05.key:\r\n      case this.MF3MPITZAMC06.key:\r\n      case this.MF3MPITZAMC07.key:\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeteringPoint;\r\n","import moment from \"moment\";\r\nimport { CellObject } from \"xlsx/types\";\r\n\r\nclass ExcelUtil {\r\n  static extractDate(\r\n    cell: CellObject,\r\n    dateFormat: string\r\n  ): { date: Date | null; error: string | null } {\r\n    let date: Date | null = null;\r\n    let error: string | null = null;\r\n    let x = null;\r\n    if (cell) {\r\n      if (cell.t !== \"d\") {\r\n        if (cell.t === \"s\") {\r\n          x = moment(cell.v || cell.w || cell.r, dateFormat);\r\n          if (!x.isValid()) {\r\n            error = ` ${cell.v} does not match the date format in setstings ${dateFormat}`;\r\n          } else {\r\n            date = x.toDate();\r\n          }\r\n        } else {\r\n          error = `Invalid Cell Value: Expected Date, received: ${cell.v}`;\r\n        }\r\n      } else {\r\n        date = cell.v as Date;\r\n      }\r\n    } else {\r\n      error = \"Cell is empty\";\r\n    }\r\n\r\n    return { date, error };\r\n  }\r\n\r\n  static extractNumber(\r\n    cell: CellObject,\r\n    strict: boolean = false\r\n  ): { number: number | null; error: string | null } {\r\n    let number: number | null = null;\r\n    let error: string | null = null;\r\n    if (cell) {\r\n      if (!(cell.t === \"n\" || Number(cell.v || cell.w))) {\r\n        error = `Invalid Cell Value: Expected number, received: ${cell.v}`;\r\n      } else {\r\n        number = Number(cell.r || cell.v);\r\n      }\r\n    } else {\r\n      if (strict) {\r\n        error = \"Cell is empty\";\r\n      } else {\r\n        number = 0;\r\n      }\r\n    }\r\n\r\n    return { number, error };\r\n  }\r\n\r\n  static extractText(\r\n    cell: CellObject\r\n  ): { text: string | null; error: string | null } {\r\n    let error: string | null = null;\r\n    let text: string | null = null;\r\n    if (cell) {\r\n      if (cell.t !== \"s\") {\r\n        error = `Invalid Cell Value: Expected Text, received: ${cell.v}`;\r\n      } else {\r\n        text = cell.v as string;\r\n      }\r\n    } else {\r\n      error = \"Cell is empty\";\r\n    }\r\n    return { text, error };\r\n  }\r\n\r\n  static calculatePercent(i: number, total: number): Promise<number> {\r\n    return new Promise<number>((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve((i / total) * 100);\r\n      }, 0);\r\n    });\r\n  }\r\n}\r\n\r\nexport default ExcelUtil;\r\n","import XLSX from \"xlsx\";\r\nimport { LoadProfileStorage } from \".\";\r\nimport { LoadProfileSettings } from \"./types/LoadProfileSettings\";\r\nimport { LoadProfile_Raw } from \"./objects\";\r\nimport { CellObject, WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport MeteringPoint from \"../../objects/common/enums/MeteringPoints\";\r\nimport ExcelUtil from \"../../objects/common/utils/ExcelUtil\";\r\n\r\ntype LoadProfileRowData = {\r\n  kwdelCell: CellObject;\r\n  kwhdelCell: CellObject;\r\n  dateCell: CellObject;\r\n  timeCell: CellObject;\r\n  row: number;\r\n  sheetName: string;\r\n};\r\n\r\nfunction extractLoadProfileRawFromWorkbook(\r\n  fileName: string,\r\n  workbook: WorkBook,\r\n  handleProgressUpdate: (progressInfo: string, progress: number) => void\r\n) {\r\n  return new Promise<{\r\n    value: LoadProfile_Raw[];\r\n    errors: string[];\r\n    meteringPoints: string[];\r\n  }>(async (resolve, reject) => {\r\n    if (workbook === null) {\r\n      reject(new Error(\"Invalid file\"));\r\n      handleProgressUpdate(\"tsk, wrong file\", 100);\r\n      return;\r\n    }\r\n    console.log(\"Parsing workbook...\");\r\n\r\n    let lp_rawDatas: LoadProfile_Raw[] = [];\r\n    let errors: string[] = [];\r\n    let meteringPoints: string[] = [];\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      if (!MeteringPoint.exists(sheetName)) {\r\n        errors.push(\r\n          `Invalid sheetname: ${sheetName}, expected: MF3MPITZAMC01~7`\r\n        );\r\n        continue;\r\n      }\r\n      meteringPoints.push(sheetName);\r\n\r\n      handleProgressUpdate(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      if (!worksheet[\"!ref\"]) continue;\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await calculatePercent(row, totalRows);\r\n        handleProgressUpdate(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = LoadProfileStorage.loadSettings();\r\n          let cells = extractCells(worksheet, row, sheetName, settings);\r\n          let rawData = extractDataFromRow(cells, settings, fileName);\r\n          lp_rawDatas.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    console.log(\"finished\");\r\n    resolve({ value: lp_rawDatas, errors, meteringPoints });\r\n  });\r\n}\r\n\r\nfunction calculatePercent(i: number, total: number): Promise<number> {\r\n  return new Promise<number>((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve((i / total) * 100);\r\n    }, 0);\r\n  });\r\n}\r\n\r\n//Extracts the load profile raw data from the row,\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  sheetName: string,\r\n  settings: LoadProfileSettings\r\n): LoadProfileRowData {\r\n  //Builds the raw cell location {column, row}\r\n  let kwdelAddress = { c: settings.kwdelCol, r: row };\r\n  let dateAddress = { c: settings.dateCol, r: row };\r\n  let timeAddress = { c: settings.timeCol, r: row };\r\n  let kwhdelAddress = { c: settings.kwhdelCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let kwdelRef = XLSX.utils.encode_cell(kwdelAddress);\r\n  let dateRef = XLSX.utils.encode_cell(dateAddress);\r\n  let timeRef = XLSX.utils.encode_cell(timeAddress);\r\n  let kwhdelRef = XLSX.utils.encode_cell(kwhdelAddress);\r\n\r\n  return {\r\n    kwdelCell: worksheet[kwdelRef],\r\n    timeCell: worksheet[timeRef],\r\n    dateCell: worksheet[dateRef],\r\n    kwhdelCell: worksheet[kwhdelRef],\r\n    sheetName: sheetName,\r\n    row,\r\n  };\r\n}\r\n\r\nfunction extractDataFromRow(\r\n  rowData: LoadProfileRowData,\r\n  settings: LoadProfileSettings,\r\n  fileName: string\r\n): LoadProfile_Raw {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: LoadProfile_Raw | null = null;\r\n\r\n  let kwdelCellData = ExcelUtil.extractNumber(rowData.kwdelCell);\r\n  let kwhdelCellData = ExcelUtil.extractNumber(rowData.kwhdelCell);\r\n  let dateCellData = ExcelUtil.extractDate(\r\n    rowData.dateCell,\r\n    settings.dateFormat\r\n  );\r\n  let timeCellData = ExcelUtil.extractDate(\r\n    rowData.timeCell,\r\n    settings.timeFormat\r\n  );\r\n\r\n  anyErrors = Boolean(\r\n    kwdelCellData.error ||\r\n      dateCellData.error ||\r\n      timeCellData.error ||\r\n      kwhdelCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowData.row + 1}:\\n`;\r\n    if (kwdelCellData.error)\r\n      error = error.concat(`\\tKwdel Cell: ${kwdelCellData.error}\\n`);\r\n    if (dateCellData.error)\r\n      error = error.concat(`\\tDate Cell: ${dateCellData.error}\\n`);\r\n    if (timeCellData.error)\r\n      error = error.concat(`\\tTime Cell: ${timeCellData.error}\\n`);\r\n    if (kwhdelCellData.error)\r\n      error = error.concat(`\\tKwhdel Cell: ${timeCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let kwhdel = kwhdelCellData.number as number;\r\n    let kwdel = kwdelCellData.number as number;\r\n    let day = dateCellData.date?.getDate() as number;\r\n    let month = dateCellData.date?.getMonth() as number;\r\n    let hour = timeCellData.date?.getHours() as number;\r\n    let minute = timeCellData.date?.getMinutes() as number;\r\n    let year = dateCellData.date?.getFullYear() as number;\r\n    rawData = new LoadProfile_Raw(\r\n      kwdel,\r\n      kwhdel,\r\n      day,\r\n      month + 1,\r\n      year,\r\n      hour,\r\n      minute,\r\n      rowData.sheetName,\r\n      rowData.row,\r\n      fileName\r\n    );\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nexport default extractLoadProfileRawFromWorkbook;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FileUtil } from \"../../objects/common/utils\";\r\nimport { LoadProfile_Raw } from \"./objects\";\r\nimport extractLoadProfileRawFromWorkbook from \"./ExcelParser\";\r\nimport { FilecardProps } from \"../filesdrawer/FileCard\";\r\n\r\ntype LoadProfileParserProps = {\r\n  file: File;\r\n  render: React.FunctionComponent<FilecardProps>;\r\n  onFileParsed: (data: LoadProfile_Raw[]) => void;\r\n  onRemoveFile: (file: File, meteringPointss: string[]) => void;\r\n};\r\n\r\nexport type LoadProfileParserRenderProps = {\r\n  progress: number;\r\n  progressInfo: string;\r\n  fileFromParser: File;\r\n  errors: string[];\r\n  onRemoveFile: () => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<LoadProfileParserProps> = ({\r\n  file,\r\n  render,\r\n  onFileParsed,\r\n  onRemoveFile,\r\n  ...others\r\n}) => {\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [meteringPoints, setMeteringPoints] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        return extractLoadProfileRawFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n        setMeteringPoints((meteringPoint) => [\r\n          ...meteringPoint,\r\n          ...result.meteringPoints,\r\n        ]);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }, []);\r\n\r\n  function handleFileParsed(lp_rawDatas: LoadProfile_Raw[]) {\r\n    onFileParsed(lp_rawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file, meteringPoints);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoadProfileParser;\r\n","import { Box, Typography, makeStyles, Theme } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\ntype FileDropProps = {\r\n  onFileDrop: (files: File[]) => void;\r\n  onDragEnter: () => void;\r\n  onDragLeave: () => void;\r\n  onDragOver?: () => void;\r\n  helperText: string;\r\n};\r\n\r\nconst FileDrop: React.FunctionComponent<FileDropProps> = ({\r\n  helperText = \"\",\r\n  onFileDrop,\r\n  onDragEnter,\r\n  onDragLeave,\r\n  onDragOver = () => {},\r\n  children,\r\n  ...others\r\n}) => {\r\n  const [dragging, setDragging] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  function handleDragEnter() {\r\n    setDragging(true);\r\n    onDragEnter();\r\n  }\r\n\r\n  function handleDragLeave() {\r\n    setDragging(false);\r\n    onDragLeave();\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      <Dropzone\r\n        onDrop={onFileDrop}\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section\r\n            onMouseEnter={handleDragEnter}\r\n            onMouseLeave={handleDragLeave}\r\n            className={clsx(classes.dropZone, {\r\n              [classes.dropZone_focused]: dragging,\r\n            })}\r\n          >\r\n            <div\r\n              {...getRootProps({ className: `${classes.dropZone_content}` })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                color=\"textSecondary\"\r\n                className={classes.dropZoneText}\r\n              >\r\n                {helperText}\r\n              </Typography>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        maxWidth=\"100%\"\r\n        gridGap={5}\r\n        marginTop={1}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dropZone: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n    minHeight: 50,\r\n  },\r\n  dropZone_focused: {\r\n    border: `2px dashed ${theme.palette.text.secondary}`,\r\n  },\r\n  dropZone_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: \"100%\",\r\n    gap: \"10px\",\r\n    flexWrap: \"wrap\",\r\n    margin: 5,\r\n  },\r\n  dropZoneText: {\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n  },\r\n}));\r\n\r\nexport default FileDrop;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CustomAccordion from \"../StyledAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport { LoadProfileParser } from \"../../loadprofile\";\r\nimport { LoadProfile_Raw } from \"../../loadprofile/objects\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport FileDrop from \"../FileDrop\";\r\nimport { LoadProfileParserRenderProps } from \"../../loadprofile/LoadProfileParser\";\r\n\r\ntype LoadProfileAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"laodprofile_filespanel\";\r\nconst title = \"Load Profile Files\";\r\n\r\nconst LoadProfileAccordion: React.FunctionComponent<LoadProfileAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  ...others\r\n}) => {\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(lpRawDatas: LoadProfile_Raw[]) {\r\n    loadProfileContext.updateLoadProfiles(lpRawDatas);\r\n  }\r\n\r\n  function handleRemoveFile(file: File, meteringPoints: string[]) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n\r\n    loadProfileContext.deleteLoadProfiles({\r\n      fileName: file.name,\r\n      meteringPoints,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <LoadProfileParser\r\n              onFileParsed={handleFileParsed}\r\n              key={file.name}\r\n              file={file}\r\n              onRemoveFile={handleRemoveFile}\r\n              render={(props) => (\r\n                <FileCard\r\n                  progress={props.progress}\r\n                  progressInfo={props.progressInfo}\r\n                  file={props.file}\r\n                  errors={props.errors}\r\n                  onRemoveFile={props.onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default LoadProfileAccordion;\r\nexport { panelName };\r\n","import { Month } from \"../../components/enums\";\r\nimport Feeder from \"./enums/Feeder\";\r\nimport Substation, { SubstationItem } from \"./enums/Substation\";\r\n\r\nfunction findFeeder(feederText: String): string | null {\r\n  feederText = feederText.toUpperCase().trim();\r\n  for (let feeder of Object.values(Feeder)) {\r\n    if (feeder.toUpperCase().trim() === feederText) {\r\n      return feeder.toUpperCase().trim();\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getMonths(): { month: string; monthNum: number }[] {\r\n  let months: { month: string; monthNum: number }[] = [];\r\n\r\n  let monthNum = 1;\r\n  for (let month of Object.values(Month)) {\r\n    if (isNaN(Number(month))) {\r\n      months.push({ month: String(month), monthNum });\r\n      monthNum++;\r\n    }\r\n  }\r\n\r\n  return months;\r\n}\r\n\r\nfunction getYears(): number[] {\r\n  let years: number[] = [];\r\n  let yearNow = new Date().getFullYear();\r\n  for (let year = 2012; year <= yearNow; year++) {\r\n    years.push(year);\r\n  }\r\n  return years;\r\n}\r\n\r\nfunction isFeederExistsOnFeeders(feeder: Feeder, feeders: Feeder[]) {\r\n  for (let f of feeders) {\r\n    if (feeder.toUpperCase().trim() === f.toUpperCase().trim()) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction findSubstationOfFeeder(feeder: Feeder) {\r\n  let result = null;\r\n  for (let substation of Substation.ALL) {\r\n    for (let item of substation.substationItems.values()) {\r\n      if (isFeederExistsOnFeeders(feeder, [...item.feeders.values()])) {\r\n        return substation;\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction findSubstationItemOfFeeder(feeder: Feeder, substation: Substation) {\r\n  let result = null;\r\n\r\n  for (let item of substation.substationItems.values()) {\r\n    if (isFeederExistsOnFeeders(feeder, [...item.feeders.values()])) {\r\n      return item;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nconst GeneralUtil = Object.freeze({\r\n  findSubstationOfFeeder,\r\n  getYears,\r\n  getMonths,\r\n  findFeeder,\r\n  findSubstationItemOfFeeder,\r\n});\r\n\r\nexport default GeneralUtil;\r\nexport { findFeeder, getMonths, getYears };\r\n","import BillingPeriod from \"../common/BillingPeriod\";\r\nimport Feeder from \"../common/enums/Feeder\";\r\nimport {\r\n  MonthlyInterruptionRawData,\r\n  MonthlyInterruptionSettings,\r\n} from \"./types\";\r\n\r\nfunction createRawDataObject(\r\n  duration: number,\r\n  feeder: Feeder,\r\n  date: Date,\r\n  fileName: string\r\n): MonthlyInterruptionRawData {\r\n  let billingMonth = BillingPeriod.getBillingMonth(\r\n    date.getMonth() + 1,\r\n    date.getDay()\r\n  );\r\n\r\n  let billingPeriod = new BillingPeriod(billingMonth, date.getFullYear());\r\n  return {\r\n    duration,\r\n    feeder: feeder,\r\n    date,\r\n    billingPeriod,\r\n    fileName,\r\n  };\r\n}\r\n\r\nenum MonthlyInterruptionSettingsKey {\r\n  DATE = \"mis_date\",\r\n  DURATION = \"mis_duration\",\r\n  DATE_FORMAT = \"mis_dateformat\",\r\n  FEEDER = \"mis_feeder\",\r\n}\r\n\r\nfunction loadSettings(): MonthlyInterruptionSettings {\r\n  return {\r\n    dateCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.DATE)) || 0,\r\n    durationCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.DURATION)) ||\r\n      1,\r\n    dateFormat:\r\n      localStorage.getItem(MonthlyInterruptionSettingsKey.DATE_FORMAT) ||\r\n      \"MM/DD/YYYY\",\r\n\r\n    feederCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.FEEDER)) || 2,\r\n  };\r\n}\r\n\r\nfunction saveSettings(settings: MonthlyInterruptionSettings) {\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DATE,\r\n    settings.dateCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DURATION,\r\n    settings.durationCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DATE_FORMAT,\r\n    settings.dateFormat\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.FEEDER,\r\n    settings.feederCol.toString()\r\n  );\r\n}\r\n\r\nconst MonthlyInterruptionUtil = Object.freeze({\r\n  createRawDataObject,\r\n  saveSettings,\r\n  loadSettings,\r\n});\r\n\r\nexport default MonthlyInterruptionUtil;\r\n","import { WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport ExcelUtil from \"../common/utils/ExcelUtil\";\r\nimport {\r\n  MonthlyInterruptionRawData,\r\n  MonthlyInterruptionCells,\r\n  MonthlyInterruptionSettings,\r\n} from \"./types\";\r\n\r\nimport { findFeeder } from \"../common/GeneralUtil\";\r\nimport XLSX from \"xlsx\";\r\nimport MonthlyInterruptionUtil from \"./MonthlyInterruptionUtil\";\r\nimport Feeder from \"../common/enums/Feeder\";\r\n\r\nfunction extractRawDatasFromWorkbook(\r\n  filename: string,\r\n  workbook: WorkBook,\r\n  progressCallback: (info: string, progress: number) => void\r\n): Promise<{ value: MonthlyInterruptionRawData[]; errors: string[] }> {\r\n  return new Promise(async (resolve, reject) => {\r\n    let errors: string[] = [];\r\n    let value: MonthlyInterruptionRawData[] = [];\r\n\r\n    console.log(\"MonthllyInterruption Workbook: \");\r\n    console.log(workbook);\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      let worksheet = workbook.Sheets[sheetName];\r\n\r\n      progressCallback(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      if (!worksheet[\"!ref\"]) continue;\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await ExcelUtil.calculatePercent(row, totalRows);\r\n        progressCallback(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = MonthlyInterruptionUtil.loadSettings();\r\n          let cells = extractCells(worksheet, row, settings);\r\n          let rawData = extractDataFromCells(cells, settings, filename);\r\n          value.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    resolve({ value, errors });\r\n  });\r\n}\r\n\r\nfunction extractDataFromCells(\r\n  rowCells: MonthlyInterruptionCells,\r\n  settings: MonthlyInterruptionSettings,\r\n  fileName: string\r\n): MonthlyInterruptionRawData {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: MonthlyInterruptionRawData | null = null;\r\n\r\n  let dateCellData = ExcelUtil.extractDate(rowCells.date, settings.dateFormat);\r\n  let feederCellData = ExcelUtil.extractText(rowCells.feeder);\r\n  let durationCellData = ExcelUtil.extractNumber(rowCells.duration);\r\n\r\n  let feeder = null;\r\n  if (feederCellData.text) {\r\n    feeder = findFeeder(feederCellData.text);\r\n    if (!feeder) {\r\n      feederCellData.error = `Feeder value ${feederCellData.text} does not match any of the registered feeders`;\r\n    }\r\n  }\r\n\r\n  anyErrors = Boolean(\r\n    dateCellData.error || durationCellData.error || feederCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowCells.row + 1}:\\n`;\r\n    if (durationCellData.error)\r\n      error = error.concat(`\\tDuration Cell: ${durationCellData.error}\\n`);\r\n    if (dateCellData.error)\r\n      error = error.concat(`\\tDate Cell: ${dateCellData.error}\\n`);\r\n    if (feederCellData.error)\r\n      error = error.concat(`\\tFeeder Cell: ${feederCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let duration = durationCellData.number as number;\r\n    let date = dateCellData.date as Date;\r\n    rawData = MonthlyInterruptionUtil.createRawDataObject(\r\n      duration,\r\n      feeder as Feeder,\r\n      date,\r\n      fileName\r\n    );\r\n    console.log({ rawData });\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  settings: MonthlyInterruptionSettings\r\n): MonthlyInterruptionCells {\r\n  //Builds the raw cell location {column, row}\r\n  let dateAddress = { c: settings.dateCol, r: row };\r\n  let feederAddress = { c: settings.feederCol, r: row };\r\n  let durationAddress = { c: settings.durationCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let dateRef = XLSX.utils.encode_cell(dateAddress);\r\n  let feederRef = XLSX.utils.encode_cell(feederAddress);\r\n  let durationRef = XLSX.utils.encode_cell(durationAddress);\r\n\r\n  return {\r\n    feeder: worksheet[feederRef],\r\n    date: worksheet[dateRef],\r\n    duration: worksheet[durationRef],\r\n    row,\r\n  };\r\n}\r\n\r\nconst MonthlyInterruptionExcelUtil = Object.freeze({\r\n  extractRawDatasFromWorkbook,\r\n});\r\n\r\nexport default MonthlyInterruptionExcelUtil;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport MonthlyFeederAndDemand from \"./MonthlyFeederAndDemand\";\r\nimport { MonthlyInterruptionRawData } from \"../../objects/monthly_interruption/types\";\r\nimport { PowerSubstationRawData } from \"../../objects/power_substation/types\";\r\n\r\ntype FeederAndDemandContextProviderProps = {};\r\n\r\nconst tempMfd = new MonthlyFeederAndDemand();\r\n\r\nenum Data {\r\n  MonthlyInterruptionData,\r\n  PowerSubstationData,\r\n}\r\n\r\nconst FeederAndDemandContext = createContext({\r\n  monthlyFeederAndDemand: new MonthlyFeederAndDemand(),\r\n  onMonthlyInterruptionOrPowerSubstationFileParsed: (\r\n    rawDatas: MonthlyInterruptionRawData[] | PowerSubstationRawData[]\r\n  ) => {},\r\n  onPowerSubstationDataFileRemoved: (fileName: string) => {},\r\n  onMonthlyInterruptionDataFileRemoved: (fileName: string) => {},\r\n});\r\n\r\nconst FeederAndDemandContextProvider: React.FunctionComponent<FeederAndDemandContextProviderProps> = (\r\n  props\r\n) => {\r\n  const [buffer, setBuffer] = useState<\r\n    (\r\n      | PowerSubstationRawData[]\r\n      | MonthlyInterruptionRawData[]\r\n      | { data: Data; fileName: string }\r\n    )[]\r\n  >([]);\r\n  const [monthlyFeederAndDemand, setMonthlyFeederAndDemand] = useState<\r\n    MonthlyFeederAndDemand\r\n  >(tempMfd);\r\n\r\n  useEffect(() => {\r\n    setMonthlyFeederAndDemand(new MonthlyFeederAndDemand());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(monthlyFeederAndDemand);\r\n  }, [monthlyFeederAndDemand]);\r\n\r\n  useEffect(() => {\r\n    async function updateMonthlyFeederAndDemand() {\r\n      let newBuffer = [...buffer];\r\n      let data = newBuffer.pop();\r\n      if (data) {\r\n        let result: MonthlyFeederAndDemand = new MonthlyFeederAndDemand(\r\n          monthlyFeederAndDemand\r\n        );\r\n        if ((data as { data: Data; fileName: string }).data) {\r\n          data = data as { data: Data; fileName: string };\r\n          if (data.data == Data.MonthlyInterruptionData) {\r\n            result = await removeMonthlyInterruptionData(data.fileName, result);\r\n          } else {\r\n            result = await removePowerSubstationData(data.fileName, result);\r\n          }\r\n        } else if ((data as PowerSubstationRawData[])[0]) {\r\n          result = await addRawPowerSubstationData(\r\n            data as PowerSubstationRawData[],\r\n            result\r\n          );\r\n        } else {\r\n          result = await addRawMonthlyInterruptionData(\r\n            data as MonthlyInterruptionRawData[],\r\n            result\r\n          );\r\n        }\r\n        setMonthlyFeederAndDemand(result);\r\n        setBuffer([...newBuffer]);\r\n      }\r\n    }\r\n    if (buffer.length <= 0) {\r\n      let newMonthlyFeederAndDemand = new MonthlyFeederAndDemand(\r\n        monthlyFeederAndDemand\r\n      );\r\n      newMonthlyFeederAndDemand.initValues();\r\n      setMonthlyFeederAndDemand(newMonthlyFeederAndDemand);\r\n    } else {\r\n      updateMonthlyFeederAndDemand();\r\n    }\r\n  }, [buffer]);\r\n\r\n  function addRawPowerSubstationData(\r\n    rawDatas: PowerSubstationRawData[],\r\n    mfd: MonthlyFeederAndDemand\r\n  ) {\r\n    return new Promise<MonthlyFeederAndDemand>((resolve, reject) => {\r\n      console.log(\"Adding power substation raw datas...\");\r\n      rawDatas.forEach((rawData) => {\r\n        mfd.addRawPowerSubstationData(rawData);\r\n      });\r\n      resolve(mfd);\r\n    });\r\n  }\r\n\r\n  function addRawMonthlyInterruptionData(\r\n    rawDatas: MonthlyInterruptionRawData[],\r\n    mfd: MonthlyFeederAndDemand\r\n  ) {\r\n    return new Promise<MonthlyFeederAndDemand>((resolve, reject) => {\r\n      rawDatas.forEach((rawData) => {\r\n        mfd.addRawMonthlyInterruptionData(rawData);\r\n      });\r\n      resolve(mfd);\r\n    });\r\n  }\r\n\r\n  function removeMonthlyInterruptionData(\r\n    fileName: string,\r\n    mfd: MonthlyFeederAndDemand\r\n  ) {\r\n    return new Promise<MonthlyFeederAndDemand>((resolve, reject) => {\r\n      mfd.removeMonthlyInterruptionDataByFilename(fileName);\r\n      resolve(mfd);\r\n    });\r\n  }\r\n  function removePowerSubstationData(\r\n    fileName: string,\r\n    mfd: MonthlyFeederAndDemand\r\n  ) {\r\n    return new Promise<MonthlyFeederAndDemand>((resolve, reject) => {\r\n      mfd.removePowerSubstationDataByFilename(fileName);\r\n      resolve(mfd);\r\n    });\r\n  }\r\n\r\n  function onMonthlyInterruptionOrPowerSubstationFileParsed(\r\n    rawDatas: MonthlyInterruptionRawData[] | PowerSubstationRawData[]\r\n  ) {\r\n    setBuffer((prevBuffer) => [...prevBuffer, rawDatas]);\r\n  }\r\n\r\n  function onPowerSubstationDataFileRemoved(fileName: string) {\r\n    setBuffer((prevBuffer) => [\r\n      ...prevBuffer,\r\n      { data: Data.PowerSubstationData, fileName },\r\n    ]);\r\n  }\r\n  function onMonthlyInterruptionDataFileRemoved(fileName: string) {\r\n    setBuffer((prevBuffer) => [\r\n      ...prevBuffer,\r\n      { data: Data.MonthlyInterruptionData, fileName },\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <FeederAndDemandContext.Provider\r\n      value={{\r\n        monthlyFeederAndDemand,\r\n        onMonthlyInterruptionOrPowerSubstationFileParsed,\r\n        onMonthlyInterruptionDataFileRemoved,\r\n        onPowerSubstationDataFileRemoved,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FeederAndDemandContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FeederAndDemandContextProvider;\r\n\r\nexport { FeederAndDemandContext };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FileUtil } from \"../../objects/common/utils\";\r\nimport MonthlyInterruptionExcelUtil from \"../../objects/monthly_interruption/MonthlyInterruptionExcelUtil\";\r\nimport { MonthlyInterruptionRawData } from \"../../objects/monthly_interruption/types\";\r\nimport { FilecardProps } from \"../filesdrawer/FileCard\";\r\n\r\ntype MonthlyInterruptionParserProps = {\r\n  file: File;\r\n  render: React.FunctionComponent<FilecardProps>;\r\n  onFileParsed: (rawDatas: MonthlyInterruptionRawData[]) => void;\r\n  onRemoveFile: (file: File) => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<MonthlyInterruptionParserProps> = (\r\n  props\r\n) => {\r\n  const { file, render, onFileParsed, onRemoveFile, ...others } = props;\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        return MonthlyInterruptionExcelUtil.extractRawDatasFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }, []);\r\n\r\n  function handleFileParsed(\r\n    monthlyInterruptionRawDatas: MonthlyInterruptionRawData[]\r\n  ) {\r\n    onFileParsed(monthlyInterruptionRawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoadProfileParser;\r\n","import Feeder from \"../../objects/common/enums/Feeder\";\r\nimport { MonthlyInterruptionRawData } from \"../../objects/monthly_interruption/types\";\r\nimport { PowerSubstationRawData } from \"../../objects/power_substation/types\";\r\n\r\nclass FeederAndDemandItem {\r\n  feeder: Feeder;\r\n  feederInput: number;\r\n  demand: number;\r\n  minutes: { fileName: string; value: number }[];\r\n  hours: number;\r\n  operatingHours: number;\r\n  powerFactor: number;\r\n  loadFactor: number;\r\n  kvarhrEnergy: number;\r\n  totalOperatingHours: number;\r\n  powerSubstaionFileName: string;\r\n  totalMinutes: number;\r\n  totalHours: number;\r\n\r\n  constructor(feeder: Feeder, totalOperatingHours: number) {\r\n    this.feeder = feeder;\r\n    this.feederInput = 0;\r\n    this.demand = 0;\r\n    this.minutes = [];\r\n    this.hours = 0;\r\n    this.operatingHours = 0;\r\n    this.powerFactor = 0;\r\n    this.loadFactor = 0;\r\n    this.kvarhrEnergy = 0;\r\n    this.totalOperatingHours = totalOperatingHours;\r\n    this.powerSubstaionFileName = \"\";\r\n    this.totalMinutes = 0;\r\n    this.totalHours = 0;\r\n  }\r\n\r\n  private getTotalMinutes() {\r\n    let total = 0;\r\n    for (let min of this.minutes) {\r\n      total += min.value;\r\n    }\r\n    return total;\r\n  }\r\n\r\n  removeMonthlyInterruptionData(fileName: string) {\r\n    this.minutes = this.minutes.filter(\r\n      (minute) => minute.fileName !== fileName\r\n    );\r\n  }\r\n\r\n  removePowerSubstationData(fileName: string) {\r\n    if (this.powerSubstaionFileName === fileName) {\r\n      this.powerSubstaionFileName = \"\";\r\n      this.demand = 0;\r\n      this.feederInput = 0;\r\n      this.kvarhrEnergy = 0;\r\n    }\r\n  }\r\n\r\n  addRawMonthlyInterruptionData(rawData: MonthlyInterruptionRawData) {\r\n    this.minutes.push({ fileName: rawData.fileName, value: rawData.duration });\r\n  }\r\n\r\n  setPowerSubstationData(data: PowerSubstationRawData) {\r\n    this.demand = data.demandKwhr;\r\n    this.feederInput = data.kwhrEnergy;\r\n    this.kvarhrEnergy = data.kvarhrEnergy;\r\n    this.powerSubstaionFileName = data.fileName;\r\n  }\r\n\r\n  recalculateData() {\r\n    this.totalMinutes = this.getTotalMinutes();\r\n    this.totalHours = this.totalMinutes / 60;\r\n    this.operatingHours = this.totalOperatingHours - this.totalHours;\r\n    this.powerFactor =\r\n      Math.cos(Math.atan(this.kvarhrEnergy / this.feederInput)) * 100;\r\n    this.loadFactor = this.feederInput / this.operatingHours / this.demand;\r\n  }\r\n}\r\n\r\nexport default FeederAndDemandItem;\r\n","import BillingPeriod from \"../../objects/common/BillingPeriod\";\r\nimport Feeder from \"../../objects/common/enums/Feeder\";\r\nimport { MonthlyInterruptionRawData } from \"../../objects/monthly_interruption/types\";\r\nimport { PowerSubstationRawData } from \"../../objects/power_substation/types\";\r\nimport FeederAndDemandItem from \"./FeederAndDemandItem\";\r\n\r\nclass FeederAndDemand {\r\n  billingPeriod: BillingPeriod;\r\n\r\n  items: Map<Feeder, FeederAndDemandItem>;\r\n  totalOperatingHours: number;\r\n\r\n  constructor(billingPeriod: BillingPeriod) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.items = new Map();\r\n    this.totalOperatingHours = (billingPeriod.getTotalDays() + 1) * 24;\r\n    console.log(\"FeederAndDemand Created\");\r\n  }\r\n\r\n  addMonthlyInterruptionData(rawData: MonthlyInterruptionRawData) {\r\n    this.addIfNotExist(rawData.feeder);\r\n    this.items.get(rawData.feeder)?.addRawMonthlyInterruptionData(rawData);\r\n  }\r\n\r\n  addRawPowerSubstationData(data: PowerSubstationRawData) {\r\n    this.addIfNotExist(data.feeder);\r\n    this.items.get(data.feeder)?.setPowerSubstationData(data);\r\n  }\r\n\r\n  removeMonthlyInterruptionByFileName(fileName: string) {\r\n    this.items.forEach((item) => {\r\n      item.removeMonthlyInterruptionData(fileName);\r\n    });\r\n  }\r\n\r\n  removePowerSubstationByFileName(fileName: string) {\r\n    this.items.forEach((item) => {\r\n      item.removePowerSubstationData(fileName);\r\n    });\r\n  }\r\n\r\n  private addIfNotExist(feeder: Feeder) {\r\n    if (!this.items.has(feeder)) {\r\n      this.items.set(\r\n        feeder,\r\n        new FeederAndDemandItem(feeder, this.totalOperatingHours)\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default FeederAndDemand;\r\n","import BillingPeriod from \"../../objects/common/BillingPeriod\";\r\nimport { MonthlyInterruptionRawData } from \"../../objects/monthly_interruption/types\";\r\nimport { PowerSubstationRawData } from \"../../objects/power_substation/types\";\r\nimport FeederAndDemand from \"./FeederAndDemand\";\r\n\r\nclass MonthlyFeederAndDemand {\r\n  feederAndDemands: Map<string, FeederAndDemand>;\r\n\r\n  constructor(monthlyFeederAndDemand?: MonthlyFeederAndDemand) {\r\n    if (monthlyFeederAndDemand) {\r\n      this.feederAndDemands = new Map(monthlyFeederAndDemand.feederAndDemands);\r\n    } else {\r\n      this.feederAndDemands = new Map();\r\n    }\r\n    console.log(\"Monthly feeder and demand created\");\r\n  }\r\n\r\n  addRawMonthlyInterruptionData(rawData: MonthlyInterruptionRawData) {\r\n    this.addIfNotExist(rawData.billingPeriod);\r\n    this.feederAndDemands\r\n      .get(rawData.billingPeriod.toString())\r\n      ?.addMonthlyInterruptionData(rawData);\r\n  }\r\n\r\n  addRawPowerSubstationData(rawData: PowerSubstationRawData) {\r\n    this.addIfNotExist(rawData.billingPeriod);\r\n    this.feederAndDemands\r\n      .get(rawData.billingPeriod.toString())\r\n      ?.addRawPowerSubstationData(rawData);\r\n  }\r\n\r\n  removePowerSubstationDataByFilename(fileName: string) {\r\n    this.feederAndDemands.forEach((feederAndDemand) =>\r\n      feederAndDemand.removePowerSubstationByFileName(fileName)\r\n    );\r\n  }\r\n  removeMonthlyInterruptionDataByFilename(fileName: string) {\r\n    this.feederAndDemands.forEach((feederAndDemand) =>\r\n      feederAndDemand.removeMonthlyInterruptionByFileName(fileName)\r\n    );\r\n  }\r\n\r\n  private addIfNotExist(billingPeriod: BillingPeriod) {\r\n    let key = billingPeriod.toString();\r\n    if (!this.feederAndDemands.has(key)) {\r\n      this.feederAndDemands.set(key, new FeederAndDemand(billingPeriod));\r\n    }\r\n  }\r\n\r\n  initValues() {\r\n    for (let feederAndDemand of this.feederAndDemands.values()) {\r\n      for (let item of feederAndDemand.items.values()) {\r\n        item.recalculateData();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MonthlyFeederAndDemand;\r\n","import BillingPeriod from \"../common/BillingPeriod\";\r\nimport Feeder from \"../common/enums/Feeder\";\r\nimport { PowerSubstationRawData, PowerSubstationSettings } from \"./types\";\r\n\r\nenum PowerSubstationSettingsKey {\r\n  FEEDER = \"ps_feeder\",\r\n  DEMAND = \"ps_demand\",\r\n  KWHRENERGY = \"ps_kwhrenergy\",\r\n  KVARHRENERGY = \"ps_kvarhrenergy\",\r\n}\r\n\r\nfunction saveSettings(settings: PowerSubstationSettings) {\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.DEMAND,\r\n    settings.demandKwhrCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.FEEDER,\r\n    settings.feederCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.KWHRENERGY,\r\n    settings.kwhrEnergyCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.KVARHRENERGY,\r\n    settings.kvarhrEnergyCol.toString()\r\n  );\r\n}\r\n\r\nfunction loadSettings(): PowerSubstationSettings {\r\n  return {\r\n    kvarhrEnergyCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.KVARHRENERGY)) ||\r\n      0,\r\n    kwhrEnergyCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.KWHRENERGY)) || 1,\r\n    demandKwhrCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.DEMAND)) || 2,\r\n    feederCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.FEEDER)) || 3,\r\n  };\r\n}\r\n\r\nfunction createRawData(\r\n  feeder: Feeder,\r\n  kwhrEnergy: number,\r\n  kvarhrEnergy: number,\r\n  demandKwhr: number,\r\n  billingPeriod: BillingPeriod,\r\n  fileName: string\r\n): PowerSubstationRawData {\r\n  return {\r\n    kwhrEnergy,\r\n    kvarhrEnergy,\r\n    demandKwhr,\r\n    billingPeriod,\r\n    feeder,\r\n    fileName,\r\n  };\r\n}\r\n\r\nconst PowerSubstationUtil = Object.freeze({\r\n  saveSettings,\r\n  loadSettings,\r\n  createRawData,\r\n});\r\n\r\nexport default PowerSubstationUtil;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { MonthlyInterruptionRawData } from \"../../../objects/monthly_interruption/types\";\r\nimport MonthlyInterruptionParser from \"../../monthly_interruption/MonthlyInterruptionParser\";\r\nimport CustomAccordion from \"../StyledAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport FileDrop from \"../FileDrop\";\r\nimport { FeederAndDemandContext } from \"../../feeder_and_demand/FeederAndDemandContextProvider\";\r\n\r\ntype MonthlyInterruptionAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"mi_panel\";\r\nconst title = \"Monthly Interruption Files\";\r\n\r\nconst MonthlyInterruptionAccordion: React.FunctionComponent<MonthlyInterruptionAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  ...others\r\n}) => {\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n\r\n  const feederAndDemandContext = useContext(FeederAndDemandContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(rawDatas: MonthlyInterruptionRawData[]) {\r\n    feederAndDemandContext.onMonthlyInterruptionOrPowerSubstationFileParsed(\r\n      rawDatas\r\n    );\r\n  }\r\n\r\n  function handleRemoveFile(file: File) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n    feederAndDemandContext.onMonthlyInterruptionDataFileRemoved(file.name);\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <MonthlyInterruptionParser\r\n              onFileParsed={handleFileParsed}\r\n              onRemoveFile={handleRemoveFile}\r\n              key={file.name}\r\n              file={file}\r\n              render={(props) => (\r\n                <FileCard\r\n                  progress={props.progress}\r\n                  progressInfo={props.progressInfo}\r\n                  file={props.file}\r\n                  errors={props.errors}\r\n                  onRemoveFile={props.onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionAccordion;\r\nexport { panelName };\r\n","import { WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport ExcelUtil from \"../common/utils/ExcelUtil\";\r\nimport PowerSubstationUtil from \"./PowerSubstationUtil\";\r\nimport {\r\n  PowerSubstationCells,\r\n  PowerSubstationRawData,\r\n  PowerSubstationSettings,\r\n} from \"./types\";\r\nimport PowerSubstation from \"./PowerSubstation\";\r\n\r\nimport { findFeeder } from \"../common/GeneralUtil\";\r\nimport XLSX from \"xlsx\";\r\nimport BillingPeriod from \"../common/BillingPeriod\";\r\nimport Feeder from \"../common/enums/Feeder\";\r\n\r\nfunction extractRawDatasFromWorkbook(\r\n  filename: string,\r\n  workbook: WorkBook,\r\n  billingPeriod: BillingPeriod,\r\n  progressCallback: (info: string, progress: number) => void\r\n): Promise<{ value: PowerSubstationRawData[]; errors: string[] }> {\r\n  return new Promise(async (resolve, reject) => {\r\n    let errors: string[] = [];\r\n    let value: PowerSubstationRawData[] = [];\r\n\r\n    console.log(\"MonthllyInterruption Workbook: \");\r\n    console.log(workbook);\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      let worksheet = workbook.Sheets[sheetName];\r\n      progressCallback(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      if (!worksheet[\"!ref\"]) continue;\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await ExcelUtil.calculatePercent(row, totalRows);\r\n        progressCallback(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = PowerSubstationUtil.loadSettings();\r\n          let cells = extractCells(worksheet, row, settings);\r\n          let rawData = extractDataFromCells(cells, billingPeriod, filename);\r\n          value.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    resolve({ value, errors });\r\n  });\r\n}\r\n\r\nfunction extractDataFromCells(\r\n  rowCells: PowerSubstationCells,\r\n  bililngPeriod: BillingPeriod,\r\n  fileName: string\r\n): PowerSubstationRawData {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: PowerSubstationRawData | null = null;\r\n\r\n  let feederCellData = ExcelUtil.extractText(rowCells.feeder);\r\n  let kwhrEnergyCellData = ExcelUtil.extractNumber(rowCells.kwhrEnergy, false);\r\n  let demandKwhrCellData = ExcelUtil.extractNumber(rowCells.demandKwhr, false);\r\n  let kvarhrEnergyCelLData = ExcelUtil.extractNumber(\r\n    rowCells.kvarhrEnergy,\r\n    false\r\n  );\r\n\r\n  let feeder = null;\r\n  if (feederCellData.text) {\r\n    feeder = findFeeder(feederCellData.text);\r\n    if (!feeder) {\r\n      feederCellData.error = `Feeder value ${feederCellData.text} does not match any of the registered feeders`;\r\n    }\r\n  }\r\n\r\n  anyErrors = Boolean(\r\n    kwhrEnergyCellData.error ||\r\n      demandKwhrCellData.error ||\r\n      kvarhrEnergyCelLData.error ||\r\n      feederCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowCells.row + 1}:\\n`;\r\n    if (kwhrEnergyCellData.error)\r\n      error = error.concat(`\\tKwhrEnergy Cell: ${kwhrEnergyCellData.error}\\n`);\r\n    if (demandKwhrCellData.error)\r\n      error = error.concat(\r\n        `\\tDemand KwhrEnergy Cell: ${demandKwhrCellData.error}\\n`\r\n      );\r\n    if (kvarhrEnergyCelLData.error)\r\n      error = error.concat(\r\n        `\\tKvarhrEnergy Cell: ${kvarhrEnergyCelLData.error}\\n`\r\n      );\r\n    if (feederCellData.error)\r\n      error = error.concat(`\\tFeeder Cell: ${feederCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let kwhrEnergy = kwhrEnergyCellData.number as number;\r\n    let kvarhrEnergy = kvarhrEnergyCelLData.number as number;\r\n    let demandKwhr = demandKwhrCellData.number as number;\r\n    let feeder = feederCellData.text as string;\r\n    rawData = PowerSubstationUtil.createRawData(\r\n      feeder as Feeder,\r\n      kwhrEnergy,\r\n      kvarhrEnergy,\r\n      demandKwhr,\r\n      bililngPeriod,\r\n      fileName\r\n    );\r\n    console.log({ rawData });\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  settings: PowerSubstationSettings\r\n): PowerSubstationCells {\r\n  //Builds the raw cell location {column, row}\r\n  let kwhrEnergyAddress = { c: settings.kwhrEnergyCol, r: row };\r\n  let demandKwhrAddress = { c: settings.demandKwhrCol, r: row };\r\n  let kvarhrEnergyAddress = { c: settings.kvarhrEnergyCol, r: row };\r\n  let feederAddress = { c: settings.feederCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let feederRef = XLSX.utils.encode_cell(feederAddress);\r\n  let kwhrEnergyRef = XLSX.utils.encode_cell(kwhrEnergyAddress);\r\n  let kvarhrEnergyRef = XLSX.utils.encode_cell(kvarhrEnergyAddress);\r\n  let demandKwhrRef = XLSX.utils.encode_cell(demandKwhrAddress);\r\n\r\n  return {\r\n    feeder: worksheet[feederRef],\r\n    kwhrEnergy: worksheet[kwhrEnergyRef],\r\n    demandKwhr: worksheet[demandKwhrRef],\r\n    kvarhrEnergy: worksheet[kvarhrEnergyRef],\r\n    row,\r\n  };\r\n}\r\n\r\nconst PowerSubstationExcelUtil = Object.freeze({\r\n  extractRawDatasFromWorkbook,\r\n});\r\n\r\nexport default PowerSubstationExcelUtil;\r\n","import { Tabs, Typography, Box } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport useStyles from \"./use-styles\";\r\nimport {\r\n  LoadProfileSettingsPanel,\r\n  MonthlyInterruptionSettingsPanel,\r\n} from \"./tabpanels\";\r\nimport { VerticalTab } from \"../common/components/tabs\";\r\nimport PowerSubstationPanel from \"./tabpanels/PowerSubstationPanel\";\r\n\r\ntype SettingsProps = {};\r\n\r\nenum SettingsTabs {\r\n  LOADPROFILE_TAB = \"lp_tab\",\r\n  MONTHLYINTERRUPTION_TAB = \"mi_tab\",\r\n  POWERSUBSTATION_TAB = \"ps_tab\",\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-prevent-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n      className={classes.tab_panel}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Settings: React.FunctionComponent<SettingsProps> = ({ ...others }) => {\r\n  const [selectedTab, setSelectedTab] = useState<string>(\r\n    SettingsTabs.LOADPROFILE_TAB\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title_div}>\r\n        <Typography className={classes.title}>Settings</Typography>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={selectedTab}\r\n          centered={false}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n        >\r\n          <VerticalTab\r\n            label=\"Load Profile Settings\"\r\n            value={SettingsTabs.LOADPROFILE_TAB}\r\n          />\r\n          <VerticalTab\r\n            value={SettingsTabs.MONTHLYINTERRUPTION_TAB}\r\n            label=\"Monthly Interruption Settings\"\r\n          />\r\n          <VerticalTab\r\n            value={SettingsTabs.POWERSUBSTATION_TAB}\r\n            label=\"Power Substation Settings\"\r\n          />\r\n        </Tabs>\r\n        <TabPanel value={selectedTab} index={SettingsTabs.LOADPROFILE_TAB}>\r\n          <LoadProfileSettingsPanel />\r\n        </TabPanel>\r\n        <TabPanel\r\n          value={selectedTab}\r\n          index={SettingsTabs.MONTHLYINTERRUPTION_TAB}\r\n        >\r\n          <MonthlyInterruptionSettingsPanel />\r\n        </TabPanel>\r\n        <TabPanel value={selectedTab} index={SettingsTabs.POWERSUBSTATION_TAB}>\r\n          <PowerSubstationPanel />\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Theme,\r\n  createStyles,\r\n  InputBase,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: theme.shape.borderRadius,\r\n      position: \"relative\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: theme.palette.divider,\r\n      fontSize: \"1rem\",\r\n      padding: \"10px 26px 10px 12px\",\r\n      transition: theme.transitions.create([\"border-color\"]),\r\n      // Use the system font instead of the default Roboto font.\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      \"&:focus, &:hover\": {\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\ntype FormSelectFieldProps = {\r\n  value: string;\r\n  onChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\r\n  items: { value: string; text: string }[];\r\n  label: string;\r\n  className?: string;\r\n};\r\n\r\nconst FormSelectField: React.FunctionComponent<FormSelectFieldProps> = (\r\n  props\r\n) => {\r\n  const { value, onChange, items, label, className, ...others } = props;\r\n  return (\r\n    <FormControl className={className} {...others}>\r\n      <InputLabel id={props.label}>{props.label}</InputLabel>\r\n      <Select\r\n        labelId={label}\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<BootstrapInput />}\r\n      >\r\n        {items.map((item) => {\r\n          return <MenuItem value={item.value}>{item.text}</MenuItem>;\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default FormSelectField;\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { FormEvent, useEffect, useState } from \"react\";\r\nimport BillingPeriod from \"../../objects/common/BillingPeriod\";\r\nimport { FileUtil } from \"../../objects/common/utils\";\r\nimport PowerSubstationExcelUtil from \"../../objects/power_substation/PowerSubstationExcelUtil\";\r\nimport { PowerSubstationRawData } from \"../../objects/power_substation/types\";\r\nimport FormSelectFields from \"../common/components/textfields/FormSelectField\";\r\nimport { FilecardProps } from \"../filesdrawer/FileCard\";\r\nimport { getYears, getMonths } from \"../../objects/common/GeneralUtil\";\r\n\r\ntype PowerSubstationParserProps = {\r\n  file: File;\r\n  render: React.FunctionComponent<FilecardProps>;\r\n  onFileParsed: (rawDatas: PowerSubstationRawData[]) => void;\r\n  onRemoveFile: (file: File) => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<PowerSubstationParserProps> = (\r\n  props\r\n) => {\r\n  const { file, render, onFileParsed, onRemoveFile, ...others } = props;\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [openBillingPeriodDialog, setOpenBillingPeriodDialog] = useState(true);\r\n  const [billingYear, setBillingYear] = useState(new Date().getFullYear());\r\n  const [billingMonth, setBillingMonth] = useState(new Date().getMonth() + 1);\r\n  const [billingPeriod, setBillingPeriod] = useState<BillingPeriod | null>(\r\n    null\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (billingPeriod) {\r\n      startParsing();\r\n    }\r\n  }, [billingPeriod]);\r\n\r\n  function startParsing() {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        let bp = billingPeriod;\r\n        return PowerSubstationExcelUtil.extractRawDatasFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          bp as BillingPeriod,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }\r\n\r\n  function handleFileParsed(rawDatas: PowerSubstationRawData[]) {\r\n    onFileParsed(rawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file);\r\n  }\r\n\r\n  function handleYearChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setBillingYear(Number(event.target.value));\r\n  }\r\n\r\n  function handleMonthChange(event: React.ChangeEvent<{ value: unknown }>) {\r\n    setBillingMonth(Number(event.target.value));\r\n  }\r\n\r\n  function handleSubmit(event: FormEvent<HTMLElement>) {\r\n    event.preventDefault();\r\n    setBillingPeriod(new BillingPeriod(billingMonth, billingYear));\r\n    setOpenBillingPeriodDialog(false);\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n      <Dialog open={openBillingPeriodDialog}>\r\n        <DialogTitle>{`Input Billing Period for ${file.name}`}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter the billing month (in numbers) and the billing year (number)\r\n            e.g. 5 2020 = ( April 26 ~ May 25 2020)\r\n          </DialogContentText>\r\n          <form\r\n            id=\"billing-period-form\"\r\n            className={classes.form}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <FormSelectFields\r\n              className={classes.billingYear}\r\n              value={billingYear.toString()}\r\n              label=\"Year\"\r\n              onChange={handleYearChange}\r\n              items={getYears().map((year) => ({\r\n                value: year.toString(),\r\n                text: year.toString(),\r\n              }))}\r\n            />\r\n            <FormSelectFields\r\n              value={billingMonth.toString()}\r\n              label=\"Month\"\r\n              onChange={handleMonthChange}\r\n              items={getMonths().map((month) => ({\r\n                value: month.monthNum.toString(),\r\n                text: month.month.toString(),\r\n              }))}\r\n            />\r\n          </form>\r\n          <DialogActions>\r\n            <Button form=\"billing-period-form\" type=\"submit\">\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    form: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(3),\r\n      maxWidth: \"300px\",\r\n    },\r\n    billingYear: {\r\n      flex: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileParser;\r\n","import { SubstationItem } from \"../../objects/common/enums/Substation\";\r\nimport PowerSubstationItem from \"../../objects/power_substation/PowerSubstationItem\";\r\n\r\nclass PowerTransformerLossItem {\r\n  substationItem: SubstationItem;\r\n  energMwhr: number;\r\n  demandMW: number;\r\n  powerFactor: number;\r\n  loadMVA: number;\r\n  percentLoading: number;\r\n  operationHours: number;\r\n  averageLoad: number;\r\n  loadFactor: number;\r\n  lossFactor: number;\r\n  coreLoss: number;\r\n  windingLoss: number;\r\n  auxiliaryLoss: number;\r\n  totalLosses: number;\r\n  rawDemand: { fileName: string; value: number }[];\r\n  rawEnergyMwh: { fileName: string; value: number }[];\r\n  rawKvarhrEnergy: { fileName: string; value: number }[];\r\n\r\n  constructor(\r\n    substationItem: SubstationItem,\r\n    operationHours: number,\r\n    item?: PowerTransformerLossItem\r\n  ) {\r\n    if (item) {\r\n      this.substationItem = item.substationItem;\r\n      this.operationHours = item.operationHours;\r\n      this.energMwhr = item.energMwhr;\r\n      this.demandMW = item.demandMW;\r\n      this.powerFactor = item.powerFactor;\r\n      this.loadMVA = item.loadMVA;\r\n      this.percentLoading = item.percentLoading;\r\n      this.averageLoad = item.averageLoad;\r\n      this.loadFactor = item.loadFactor;\r\n      this.lossFactor = item.lossFactor;\r\n      this.coreLoss = item.coreLoss;\r\n      this.windingLoss = item.windingLoss;\r\n      this.auxiliaryLoss = item.auxiliaryLoss;\r\n      this.totalLosses = item.totalLosses;\r\n      this.rawDemand = item.rawDemand;\r\n      this.rawEnergyMwh = item.rawEnergyMwh;\r\n      this.rawKvarhrEnergy = item.rawKvarhrEnergy;\r\n    } else {\r\n      this.substationItem = substationItem;\r\n      this.operationHours = operationHours;\r\n      this.energMwhr = 0;\r\n      this.demandMW = 0;\r\n      this.powerFactor = 0;\r\n      this.loadMVA = 0;\r\n      this.percentLoading = 0;\r\n      this.averageLoad = 0;\r\n      this.loadFactor = 0;\r\n      this.lossFactor = 0;\r\n      this.coreLoss = 0;\r\n      this.windingLoss = 0;\r\n      this.auxiliaryLoss = 0;\r\n      this.totalLosses = 0;\r\n      this.rawDemand = [];\r\n      this.rawEnergyMwh = [];\r\n      this.rawKvarhrEnergy = [];\r\n    }\r\n\r\n    console.log(\r\n      \"PowerTransformerLossItem Created: \" + substationItem.toString()\r\n    );\r\n  }\r\n\r\n  addPowerSubstatoinData(data: PowerSubstationItem) {\r\n    console.log(\"Adding power substation data\");\r\n    console.log({ data });\r\n    this.rawEnergyMwh.push({\r\n      fileName: data.fileName,\r\n      value: data.kwhrEnergy,\r\n    });\r\n    this.rawDemand.push({ fileName: data.fileName, value: data.demandKwhr });\r\n    this.rawKvarhrEnergy.push({\r\n      fileName: data.fileName,\r\n      value: data.kvarhrEnergy,\r\n    });\r\n  }\r\n\r\n  refreshData() {\r\n    this.rawDemand = [];\r\n    this.rawEnergyMwh = [];\r\n    this.rawKvarhrEnergy = [];\r\n  }\r\n\r\n  initValues() {\r\n    this.energMwhr = this.getTotal(this.rawEnergyMwh) / 1000;\r\n    let totalKvarhr = this.getTotal(this.rawKvarhrEnergy) / 1000;\r\n    this.powerFactor = this.getPowerFactor(totalKvarhr, this.energMwhr);\r\n    this.loadMVA = this.getLoadMva(this.demandMW, this.powerFactor); /////////\r\n    this.percentLoading = this.getPercentLoading(\r\n      this.loadMVA,\r\n      this.substationItem.transformer.power\r\n    );\r\n    this.loadFactor = this.getLoadFactor(\r\n      this.energMwhr,\r\n      this.demandMW,\r\n      this.operationHours\r\n    ); ///////////\r\n    this.averageLoad = this.getAverageLoad(this.demandMW, this.loadFactor); ////////\r\n    this.lossFactor = this.getLossFactor(this.loadFactor);\r\n    this.coreLoss = this.getCoreLoss(\r\n      this.substationItem.transformer.power,\r\n      this.operationHours\r\n    );\r\n    this.windingLoss = this.getWindingLoss(\r\n      this.percentLoading,\r\n      this.lossFactor,\r\n      this.operationHours\r\n    );\r\n    this.auxiliaryLoss = this.getAuxiliaryLoss(this.operationHours);\r\n    this.totalLosses = this.getTotalLosses(\r\n      this.coreLoss,\r\n      this.auxiliaryLoss,\r\n      this.windingLoss\r\n    );\r\n  }\r\n\r\n  private getTotal(rawSet: { fileName: string; value: number }[]) {\r\n    let total = 0;\r\n    for (let raw of rawSet) {\r\n      total += raw.value;\r\n    }\r\n    return total;\r\n  }\r\n\r\n  private getPowerFactor(kvarhr: number, kwhr: number) {\r\n    return Math.cos(Math.atan(kvarhr / kwhr)) * 100;\r\n  }\r\n\r\n  private getLoadMva(demand: number, powerFactor: number) {\r\n    return (demand * 100) / powerFactor;\r\n  }\r\n\r\n  private getPercentLoading(loadMva: number, powerTransformer: number) {\r\n    return (loadMva * 100) / powerTransformer;\r\n  }\r\n\r\n  private getLoadFactor(\r\n    energyMwh: number,\r\n    demand: number,\r\n    operationHours: number\r\n  ) {\r\n    let bottom = demand * operationHours;\r\n    return energyMwh / bottom;\r\n  }\r\n\r\n  private getAverageLoad(demand: number, loadFactor: number) {\r\n    return demand * loadFactor;\r\n  }\r\n\r\n  private getLossFactor(lossFactor: number) {\r\n    return 0.2 * lossFactor + 0.8 * (lossFactor * lossFactor);\r\n  }\r\n\r\n  private getCoreLoss(transformerPower: number, operationHours: number) {\r\n    return transformerPower * operationHours;\r\n  }\r\n\r\n  private getWindingLoss(\r\n    percentLoading: number,\r\n    lossFactor: number,\r\n    operationHours: number\r\n  ) {\r\n    return (\r\n      77 *\r\n      (percentLoading / 100) *\r\n      (percentLoading / 100) *\r\n      lossFactor *\r\n      operationHours\r\n    );\r\n  }\r\n\r\n  private getAuxiliaryLoss(operationHours: number) {\r\n    return 2 * 3 * (operationHours / 24);\r\n  }\r\n\r\n  private getTotalLosses(\r\n    coreLoss: number,\r\n    windingLoss: number,\r\n    auxiliaryLoss: number\r\n  ) {\r\n    return coreLoss + windingLoss + auxiliaryLoss;\r\n  }\r\n}\r\n\r\nexport default PowerTransformerLossItem;\r\n","import Substation, {\r\n  SubstationItem,\r\n} from \"../../objects/common/enums/Substation\";\r\nimport PowerSubstationItem from \"../../objects/power_substation/PowerSubstationItem\";\r\nimport PowerTransformerLossItem from \"./PowerTransformerLossItem\";\r\nimport GeneralUtil from \"../../objects/common/GeneralUtil\";\r\n\r\nclass PowerTransformerLossSubstation {\r\n  substation: Substation;\r\n  //key = substation.key + transformer.key\r\n  substationItems: Map<string, PowerTransformerLossItem>;\r\n  operatingHours: number;\r\n  constructor(substation: Substation, operatingHours: number) {\r\n    this.substation = substation;\r\n    this.substationItems = new Map();\r\n    this.operatingHours = operatingHours;\r\n  }\r\n\r\n  replacePowerTransformerLossItem(item: PowerTransformerLossItem) {\r\n    this.substationItems.set(this.generateKey(item.substationItem), item);\r\n  }\r\n\r\n  addPowerSubstationData(data: PowerSubstationItem) {\r\n    console.log(\r\n      \"finding substation item of: \" +\r\n        data.feeder +\r\n        \" from: \" +\r\n        this.substation.key\r\n    );\r\n    let substationItem = GeneralUtil.findSubstationItemOfFeeder(\r\n      data.feeder,\r\n      this.substation\r\n    );\r\n    if (substationItem) {\r\n      console.log(\"substation item found: \" + substationItem.toString());\r\n      this.addIfNotExists(substationItem);\r\n      this.substationItems\r\n        .get(this.generateKey(substationItem))\r\n        ?.addPowerSubstatoinData(data);\r\n    } else {\r\n      console.log(\"sbustation item not found :<\");\r\n    }\r\n  }\r\n\r\n  private addIfNotExists(substationItem: SubstationItem) {\r\n    let key = this.generateKey(substationItem);\r\n    if (!this.substationItems.has(key)) {\r\n      this.substationItems.set(\r\n        key,\r\n        new PowerTransformerLossItem(substationItem, this.operatingHours)\r\n      );\r\n    }\r\n  }\r\n\r\n  private generateKey(substationItem: SubstationItem) {\r\n    return this.substation.key + substationItem.transformer.key;\r\n  }\r\n}\r\nexport default PowerTransformerLossSubstation;\r\n","import BillingPeriod from \"../../objects/common/BillingPeriod\";\r\n\r\nimport PowerSubstationItem from \"../../objects/power_substation/PowerSubstationItem\";\r\nimport PowerTransformerLossSubstation from \"./PowerTransformerLossSubstation\";\r\n\r\nimport GeneralUtil from \"../../objects/common/GeneralUtil\";\r\nimport Substation from \"../../objects/common/enums/Substation\";\r\nimport PowerTransformerLossItem from \"./PowerTransformerLossItem\";\r\nimport { PowerSubstationRawData } from \"../../objects/power_substation/types\";\r\n\r\nclass PowerTransformerLoss {\r\n  billingPeriod: BillingPeriod;\r\n  //key: substation\r\n  items: Map<string, PowerTransformerLossSubstation>;\r\n  operatingHours: number;\r\n  fileName: string;\r\n\r\n  constructor(billingPeriod: BillingPeriod, fileName: string) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.operatingHours = (billingPeriod.getTotalDays() + 1) * 24;\r\n    this.items = new Map();\r\n    this.fileName = fileName;\r\n  }\r\n\r\n  replacePowerTransformerlossItem(item: PowerTransformerLossItem) {\r\n    this.items\r\n      .get(item.substationItem.substationKey)\r\n      ?.replacePowerTransformerLossItem(item);\r\n  }\r\n\r\n  addPowerSubstationData(data: PowerSubstationRawData) {\r\n    console.log(\"findgin substation of feeder: \" + data.feeder);\r\n    let substation = GeneralUtil.findSubstationOfFeeder(data.feeder);\r\n    if (substation) {\r\n      console.log(\"substation foud: \" + substation.key);\r\n      this.addIfNotExisting(substation);\r\n      this.items.get(substation.key)?.addPowerSubstationData(data);\r\n    } else {\r\n      console.log(\"substation not found :<\");\r\n    }\r\n  }\r\n\r\n  private addIfNotExisting(substation: Substation) {\r\n    let key = substation.key;\r\n    if (!this.items.has(key)) {\r\n      console.log(\r\n        \"Adding new PowerTransformerSubstationItem, subtation: \" +\r\n          substation.key\r\n      );\r\n      this.items.set(\r\n        key,\r\n        new PowerTransformerLossSubstation(substation, this.operatingHours)\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default PowerTransformerLoss;\r\n","import BillingPeriod from \"../../objects/common/BillingPeriod\";\r\nimport MonthlyInterruptionItem from \"../../objects/monthly_interruption/MonthlyInterruptionItem\";\r\nimport PowerSubstationItem from \"../../objects/power_substation/PowerSubstationItem\";\r\nimport { PowerSubstationRawData } from \"../../objects/power_substation/types\";\r\nimport PowerTransformerLoss from \"./PowerTransformerLoss\";\r\nimport PowerTransformerLossItem from \"./PowerTransformerLossItem\";\r\n\r\nclass MonthlyPowerTransformerLoss {\r\n  //key: billingpPeriod.toString(),\r\n  powerTransformerLosses: Map<string, PowerTransformerLoss>;\r\n\r\n  constructor(monthlyPowerTransformerLoss?: MonthlyPowerTransformerLoss) {\r\n    if (monthlyPowerTransformerLoss) {\r\n      this.powerTransformerLosses = new Map(\r\n        monthlyPowerTransformerLoss.powerTransformerLosses\r\n      );\r\n    } else {\r\n      this.powerTransformerLosses = new Map();\r\n    }\r\n    console.log(\"MonthlyPowerTransformerLoss created..\");\r\n  }\r\n\r\n  replacePowerTransformerLossItem(\r\n    item: PowerTransformerLossItem,\r\n    billingPeriod: BillingPeriod\r\n  ) {\r\n    this.powerTransformerLosses\r\n      .get(billingPeriod.toString())\r\n      ?.replacePowerTransformerlossItem(item);\r\n  }\r\n\r\n  removePowerSubstationData(fileName: string) {\r\n    for (let key of this.powerTransformerLosses.keys()) {\r\n      if (this.powerTransformerLosses.get(key)?.fileName === fileName) {\r\n        this.powerTransformerLosses.delete(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  addRawPowerSubstationData(rawData: PowerSubstationRawData) {\r\n    this.addIfNotExist(rawData.billingPeriod, rawData.fileName);\r\n    this.powerTransformerLosses\r\n      .get(rawData.billingPeriod.toString())\r\n      ?.addPowerSubstationData(rawData);\r\n  }\r\n\r\n  initValues() {\r\n    [...this.powerTransformerLosses.values()].forEach((ptl) => {\r\n      [...ptl.items.values()].forEach((pti) => {\r\n        [...pti.substationItems.values()].forEach((item) => {\r\n          item.initValues();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private addIfNotExist(billingpPeriod: BillingPeriod, fileName: string) {\r\n    let key = billingpPeriod.toString();\r\n    if (!this.powerTransformerLosses.has(key)) {\r\n      console.log(\r\n        \"Adding new PowerTransformerLoss, billing period: \" +\r\n          billingpPeriod.toString()\r\n      );\r\n      this.powerTransformerLosses.set(\r\n        key,\r\n        new PowerTransformerLoss(billingpPeriod, fileName)\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MonthlyPowerTransformerLoss;\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport MonthlyPowerTransformerLoss from \"./MonthlyPowerTransformerLoss\";\r\nimport MonthlyPowerSubstation from \"../../objects/power_substation/MonthlyPowerSubstation\";\r\nimport PowerTransformerLossItem from \"./PowerTransformerLossItem\";\r\nimport BillingPeriod from \"../../objects/common/BillingPeriod\";\r\nimport { PowerSubstationRawData } from \"../../objects/power_substation/types\";\r\n\r\ntype PowerTransformerLossContextProviderProps = {};\r\n\r\nconst tempPowerTransformerLoss = new MonthlyPowerTransformerLoss();\r\n\r\nconst PowerTransformerLossContext = createContext({\r\n  monthlyPowerTransformerLoss: tempPowerTransformerLoss,\r\n  onPowerTransformerLossItemChanged: (\r\n    item: PowerTransformerLossItem,\r\n    billingPeriod: BillingPeriod\r\n  ) => {},\r\n  onPowerSubstationFileParsed: (rawDatas: PowerSubstationRawData[]) => {},\r\n  onPowerSubstationFileRemoved: (flieName: string) => {},\r\n});\r\n\r\nconst PowerTransformerLossContextProvider: React.FunctionComponent<PowerTransformerLossContextProviderProps> = (\r\n  props\r\n) => {\r\n  const [\r\n    monthlyPowerTransformerLoss,\r\n    setMonthlyPowerTransformerLoss,\r\n  ] = useState(tempPowerTransformerLoss);\r\n\r\n  const [buffer, setBuffer] = useState<\r\n    (\r\n      | PowerSubstationRawData[]\r\n      | { item: PowerTransformerLossItem; billingPeriod: BillingPeriod }\r\n      | string\r\n    )[]\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    console.log({\r\n      method: \"useEffect()\",\r\n      message: \"Buffer  length is: \" + buffer.length,\r\n    });\r\n    if (buffer.length > 0) {\r\n      let newBuffer = [...buffer];\r\n      let data = newBuffer.pop();\r\n\r\n      if (\r\n        (data as {\r\n          item: PowerTransformerLossItem;\r\n          billingPeriod: BillingPeriod;\r\n        }).item\r\n      ) {\r\n        replacePowerTransformerLossItem(\r\n          data as {\r\n            item: PowerTransformerLossItem;\r\n            billingPeriod: BillingPeriod;\r\n          }\r\n        ).then((result) => {\r\n          setMonthlyPowerTransformerLoss(result);\r\n          setBuffer(newBuffer);\r\n        });\r\n      } else if (Array.isArray(data)) {\r\n        addRawPowerSubstationData(data as PowerSubstationRawData[]).then(\r\n          (result) => {\r\n            setMonthlyPowerTransformerLoss(result);\r\n            setBuffer(newBuffer);\r\n          }\r\n        );\r\n      } else {\r\n        removePowerSubstationData(data as string).then((result) => {\r\n          setMonthlyPowerTransformerLoss(result);\r\n          setBuffer(newBuffer);\r\n        });\r\n      }\r\n    } else {\r\n      initPowerTransformerLossValues().then((result) => {\r\n        setMonthlyPowerTransformerLoss(result);\r\n      });\r\n    }\r\n  }, [buffer]);\r\n\r\n  useEffect(() => {\r\n    console.log({ monthlyPowerTransformerLoss });\r\n  }, [monthlyPowerTransformerLoss]);\r\n\r\n  function initPowerTransformerLossValues() {\r\n    return new Promise<MonthlyPowerTransformerLoss>((resolve, reject) => {\r\n      let newPlts = new MonthlyPowerTransformerLoss(\r\n        monthlyPowerTransformerLoss\r\n      );\r\n      newPlts.initValues();\r\n      resolve(newPlts);\r\n    });\r\n  }\r\n\r\n  function replacePowerTransformerLossItem(item: {\r\n    item: PowerTransformerLossItem;\r\n    billingPeriod: BillingPeriod;\r\n  }) {\r\n    return new Promise<MonthlyPowerTransformerLoss>((resolve, reject) => {\r\n      console.log(\"Updating PowerTransformerLoss....\");\r\n      console.log({ item });\r\n      let newData = new MonthlyPowerTransformerLoss(\r\n        monthlyPowerTransformerLoss\r\n      );\r\n\r\n      newData.replacePowerTransformerLossItem(item.item, item.billingPeriod);\r\n\r\n      resolve(newData);\r\n    });\r\n  }\r\n\r\n  function removePowerSubstationData(fileName: string) {\r\n    return new Promise<MonthlyPowerTransformerLoss>((resolve, reject) => {\r\n      let newData = new MonthlyPowerTransformerLoss(\r\n        monthlyPowerTransformerLoss\r\n      );\r\n      newData.removePowerSubstationData(fileName);\r\n\r\n      resolve(newData);\r\n    });\r\n  }\r\n\r\n  function onPowerSubstationFileParsed(rawDatas: PowerSubstationRawData[]) {\r\n    setBuffer((prevBuffer) => [...prevBuffer, rawDatas]);\r\n  }\r\n\r\n  function addRawPowerSubstationData(rawDatas: PowerSubstationRawData[]) {\r\n    return new Promise<MonthlyPowerTransformerLoss>((resolve, reject) => {\r\n      console.log(\"Updating PowerTransformerLoss....\");\r\n      let newData = new MonthlyPowerTransformerLoss(\r\n        monthlyPowerTransformerLoss\r\n      );\r\n      rawDatas.forEach((rawData) => {\r\n        newData.addRawPowerSubstationData(rawData);\r\n      });\r\n\r\n      resolve(newData);\r\n    });\r\n  }\r\n\r\n  function onPowerSubstationFileRemoved(fileName: string) {\r\n    setBuffer((prevBuffer) => [...prevBuffer, fileName]);\r\n  }\r\n\r\n  function onPowerTransformerLossItemChanged(\r\n    item: PowerTransformerLossItem,\r\n    billingPeriod: BillingPeriod\r\n  ) {\r\n    setBuffer((prevBuffer) => [...prevBuffer, { item, billingPeriod }]);\r\n  }\r\n\r\n  return (\r\n    <PowerTransformerLossContext.Provider\r\n      value={{\r\n        monthlyPowerTransformerLoss,\r\n        onPowerTransformerLossItemChanged,\r\n        onPowerSubstationFileParsed,\r\n        onPowerSubstationFileRemoved,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PowerTransformerLossContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PowerTransformerLossContextProvider;\r\nexport { PowerTransformerLossContext };\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CustomAccordion from \"../StyledAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport FileDrop from \"../FileDrop\";\r\nimport PowerSubstationParser from \"../../power_substation/PowerSubstationParser\";\r\nimport { PowerSubstationRawData } from \"../../../objects/power_substation/types\";\r\nimport { PowerTransformerLossContext } from \"../../power_transformer_loss/PowerTransformerLossContextProvider\";\r\nimport { FeederAndDemandContext } from \"../../feeder_and_demand/FeederAndDemandContextProvider\";\r\n\r\ntype MonthlyInterruptionAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"ps_panel\";\r\nconst title = \"Power Substation Files\";\r\n\r\nconst MonthlyInterruptionAccordion: React.FunctionComponent<MonthlyInterruptionAccordionProps> = (\r\n  props\r\n) => {\r\n  const { expandedPanel, onPanelChange, ...others } = props;\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n  const powerTransformerLossContext = useContext(PowerTransformerLossContext);\r\n  const feederAndDemandContext = useContext(FeederAndDemandContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(rawDatas: PowerSubstationRawData[]) {\r\n    powerTransformerLossContext.onPowerSubstationFileParsed(rawDatas);\r\n    feederAndDemandContext.onMonthlyInterruptionOrPowerSubstationFileParsed(\r\n      rawDatas\r\n    );\r\n  }\r\n\r\n  function handleRemoveFile(file: File) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n    feederAndDemandContext.onPowerSubstationDataFileRemoved(file.name);\r\n    powerTransformerLossContext.onPowerSubstationFileRemoved(file.name);\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <PowerSubstationParser\r\n              onFileParsed={handleFileParsed}\r\n              onRemoveFile={handleRemoveFile}\r\n              key={file.name}\r\n              file={file}\r\n              render={(props) => (\r\n                <FileCard\r\n                  progress={props.progress}\r\n                  progressInfo={props.progressInfo}\r\n                  file={props.file}\r\n                  errors={props.errors}\r\n                  onRemoveFile={props.onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionAccordion;\r\nexport { panelName };\r\n","import FilesDrawer from \"./FilesDrawer\";\r\nimport useStyles, { drawerWidth } from \"./use-styles\";\r\n\r\nexport default FilesDrawer;\r\nexport { drawerWidth, useStyles };\r\n","import { Drawer } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport useStyles from \"./use-styles\";\r\nimport LoadProfileAccordion, {\r\n  panelName as loadProfilePanelName,\r\n} from \"./accordions/LoadProfileAccordion\";\r\nimport MonthlyInterruptionAccordion from \"./accordions/MonthlyInterruptionAccordion\";\r\nimport PowerSubstationAccordion from \"./accordions/PowerSubstationAccordion\";\r\n\r\ntype FilesDrawerProps = {\r\n  open: boolean;\r\n};\r\n\r\nconst FilesDrawer: React.FunctionComponent<FilesDrawerProps> = ({\r\n  open,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [expandedPanel, setExpandedPanel] = useState<string>(\r\n    loadProfilePanelName\r\n  );\r\n\r\n  function handlePanelChange(newExpandedPanel: string) {\r\n    setExpandedPanel(newExpandedPanel);\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"persistent\"\r\n      open={open}\r\n      anchor=\"left\"\r\n      className={classes.drawer}\r\n      classes={{ paper: classes.drawerPaper }}\r\n    >\r\n      <LoadProfileAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n      <MonthlyInterruptionAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n      <PowerSubstationAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default FilesDrawer;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    background: theme.palette.background.paper,\r\n    padding: theme.spacing(3),\r\n    fontSize: \"1rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    zIndex: theme.zIndex.mobileStepper,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    minHeight: 0,\r\n  },\r\n  title_div: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(5),\r\n    fontSize: \"1.3em\",\r\n  },\r\n  tabs: {\r\n    display: \"inline-block\",\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n  tab_panel: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { FormEvent } from \"react\";\r\nimport { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\ntype LoadProfileSettingsProps = {\r\n  onSubmit: (event: FormEvent<HTMLFormElement>) => void;\r\n  children: any;\r\n};\r\n\r\nconst LoadProfileSettingsPanel: React.FunctionComponent<LoadProfileSettingsProps> = (\r\n  props\r\n) => {\r\n  const { onSubmit, children, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    onSubmit(event);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form\r\n        id=\"settings-form\"\r\n        className={classes.textFieldContainer}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {children}\r\n      </form>\r\n      <div className={classes.actionContainer}>\r\n        <Button form=\"settings-form\" type=\"submit\" color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    textFieldContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"10px\",\r\n      width: \"300px\",\r\n      fontSize: \"0.9rem\",\r\n    },\r\n    actionContainer: {\r\n      marginTop: 10,\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileSettingsPanel;\r\n","import { makeStyles, TextField, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    fontSize: \"1em\",\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: theme.palette.background.paper,\r\n    \"&.Mui-focused\": {\r\n      backgroundColor: theme.palette.background.default,\r\n      border: `1px solid ${theme.palette.primary.main}`,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    focused: {},\r\n  },\r\n}));\r\n\r\ntype FormTextFieldProps = {\r\n  value?: string | number;\r\n  name?: string;\r\n  label?: string;\r\n  placeholder?: string;\r\n  helpertext?: string;\r\n  error?: boolean;\r\n  type?: string;\r\n  limitZero?: boolean;\r\n  onChange?: (\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => void;\r\n};\r\n\r\nconst FormTextField: React.FunctionComponent<FormTextFieldProps> = ({\r\n  label,\r\n  value = \"\",\r\n  name = \"\",\r\n  placeholder = \"\",\r\n  helpertext = \"\",\r\n  error = false,\r\n  type = \"text\",\r\n  onChange = (event) => {},\r\n  limitZero = true,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function handleChange(\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) {\r\n    if (type === \"number\" && Number(event.target.value) < 0) {\r\n      return;\r\n    } else {\r\n      onChange(event);\r\n    }\r\n  }\r\n  return (\r\n    <TextField\r\n      variant=\"filled\"\r\n      label={label}\r\n      value={value}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      error={error}\r\n      helperText={helpertext}\r\n      type={type}\r\n      InputProps={{\r\n        disableUnderline: true,\r\n        classes: { root: classes.root },\r\n      }}\r\n      margin=\"dense\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormTextField;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\n\r\nimport { LoadProfileStorage } from \"../../loadprofile\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport FormTextField from \"../../common/components/textfields/FormTextField\";\r\n\r\ntype LoadProfileSettingsProps = {};\r\n\r\nconst LoadProfileSettingsPanel: React.FunctionComponent<LoadProfileSettingsProps> = ({\r\n  ...others\r\n}) => {\r\n  const [kwdel, setKwdel] = useState(0);\r\n  const [khwdel, setKwhdel] = useState(0);\r\n  const [date, setDate] = useState(0);\r\n  const [time, setTime] = useState(0);\r\n  const [dateFormat, setDateFormat] = useState(\"\");\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let lpSettings = LoadProfileStorage.loadSettings();\r\n    setKwdel(lpSettings.kwdelCol);\r\n    setKwhdel(lpSettings.kwhdelCol);\r\n    setDateFormat(lpSettings.dateFormat);\r\n    setDate(lpSettings.dateCol);\r\n    setTime(lpSettings.timeCol);\r\n    setTimeFormat(lpSettings.timeFormat);\r\n  }, []);\r\n\r\n  function handleKwdelChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwdel(Number(event.target.value));\r\n  }\r\n\r\n  function handleKwhdelChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwhdel(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDate(Number(event.target.value));\r\n  }\r\n\r\n  function handleTimeChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setTime(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateFormat(event.target.value);\r\n  }\r\n\r\n  function handleTimeFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setTimeFormat(event.target.value);\r\n  }\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    LoadProfileStorage.saveSettings({\r\n      kwdelCol: kwdel,\r\n      timeCol: time,\r\n      dateCol: date,\r\n      dateFormat,\r\n      timeFormat,\r\n      kwhdelCol: khwdel,\r\n    });\r\n    alert(\"Load profile settings saved\");\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Kwdel Column#\"\r\n        placeholder=\"Kwdel Column#\"\r\n        value={kwdel}\r\n        type=\"number\"\r\n        onChange={handleKwdelChange}\r\n        helpertext=\"the column# of the kwdel value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Kwhdel Column#\"\r\n        placeholder=\"Kwhdel Column#\"\r\n        value={khwdel}\r\n        type=\"number\"\r\n        onChange={handleKwhdelChange}\r\n        helpertext=\"the column# of the kwhdel value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Date Column#\"\r\n        placeholder=\"Date Column#\"\r\n        value={date}\r\n        type=\"number\"\r\n        onChange={handleDateChange}\r\n        helpertext=\"the column# of the date value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Time Column#\"\r\n        placeholder=\"Time Column#\"\r\n        value={time}\r\n        type=\"number\"\r\n        onChange={handleTimeChange}\r\n        helpertext=\"the column# of the time value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Date Format\"\r\n        placeholder=\"Date Format\"\r\n        value={dateFormat}\r\n        onChange={handleDateFormatChange}\r\n        helpertext=\"(MM/DD/YYYY) = '09/22/2020', (MMMM/DD/YYYY) = 'September/22/2020'  \"\r\n      />\r\n      <FormTextField\r\n        label=\"Time Format\"\r\n        placeholder=\"Time Format\"\r\n        value={timeFormat}\r\n        onChange={handleTimeFormatChange}\r\n        helpertext=\"(HH:mm) = '22:15', (hh:mm a) = '10:15 pm', (HH:mm:ss) = '22:15:13' \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default LoadProfileSettingsPanel;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport FormTextField from \"../../common/components/textfields/FormTextField\";\r\nimport MonthlyInterruptionUtil from \"../../../objects/monthly_interruption/MonthlyInterruptionUtil\";\r\n\r\ntype MonthlyInterruptionPanelProps = {};\r\n\r\nconst MonthlyInterruptionPanel: React.FunctionComponent<MonthlyInterruptionPanelProps> = (\r\n  props\r\n) => {\r\n  const { ...others } = props;\r\n\r\n  const [durationCol, setDurationCol] = useState(0);\r\n  const [dateCol, setDateCol] = useState(0);\r\n  const [feederCol, setFeederCol] = useState(0);\r\n  const [dateFormat, setDateFormat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let settings = MonthlyInterruptionUtil.loadSettings();\r\n    setDurationCol(settings.durationCol);\r\n    setDateCol(settings.dateCol);\r\n    setFeederCol(settings.feederCol);\r\n    setDateFormat(settings.dateFormat);\r\n  }, []);\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    MonthlyInterruptionUtil.saveSettings({\r\n      dateCol,\r\n      durationCol,\r\n      feederCol,\r\n      dateFormat,\r\n    });\r\n\r\n    alert(\"Monthly Interruption Settings Saved\");\r\n  }\r\n\r\n  function handleDurationColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDurationCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateFormat(event.target.value);\r\n  }\r\n\r\n  function handleFeederColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setFeederCol(Number(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Feeder Column#\"\r\n        placeholder=\"Feeder Column#\"\r\n        value={feederCol}\r\n        type=\"number\"\r\n        onChange={handleFeederColChange}\r\n        helpertext=\"the column# of the feeder value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Duration Column#\"\r\n        placeholder=\"Duration Column#\"\r\n        value={durationCol}\r\n        type=\"number\"\r\n        onChange={handleDurationColChange}\r\n        helpertext=\"the column# of the duration value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Date Column#\"\r\n        placeholder=\"Date Column#\"\r\n        value={dateCol}\r\n        type=\"number\"\r\n        onChange={handleDateColChange}\r\n        helpertext=\"the column# of the date value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Date Format\"\r\n        placeholder=\"Date Format\"\r\n        value={dateFormat}\r\n        onChange={handleDateFormatChange}\r\n        helpertext=\"(MM/DD/YYYY) = '09/22/2020', (MMMM/DD/YYYY) = 'September/22/2020'  \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionPanel;\r\n","import { makeStyles, Tab, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype VerticalTabProps = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    textAlign: \"start\",\r\n    textTransform: \"none\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"0.9em\",\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  tab_selected: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tab_wrapper: {\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n}));\r\n\r\nconst VerticalTab: React.FunctionComponent<VerticalTabProps> = ({\r\n  label,\r\n  value,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      classes={{\r\n        root: classes.tab,\r\n        wrapper: classes.tab_wrapper,\r\n        selected: classes.tab_selected,\r\n      }}\r\n      value={value}\r\n      label={label}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalTab;\r\n","import { makeStyles, Tab, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype HorizontalTabProps = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    textAlign: \"start\",\r\n    textTransform: \"none\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"0.9em\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    padding: 0,\r\n    minWidth: \"100px\",\r\n    lineHeight: 0,\r\n  },\r\n  tab_selected: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tab_wrapper: {},\r\n}));\r\n\r\nconst HorizontalTab: React.FunctionComponent<HorizontalTabProps> = ({\r\n  label,\r\n  value,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      classes={{\r\n        root: classes.tab,\r\n        wrapper: classes.tab_wrapper,\r\n        selected: classes.tab_selected,\r\n      }}\r\n      value={value}\r\n      label={label}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalTab;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport FormTextField from \"../../common/components/textfields/FormTextField\";\r\nimport PowerSubstationUtil from \"../../../objects/power_substation/PowerSubstationUtil\";\r\n\r\ntype PowerSubstationPanelProps = {};\r\n\r\nconst PowerSubstationPanel: React.FunctionComponent<PowerSubstationPanelProps> = (\r\n  props\r\n) => {\r\n  const { ...others } = props;\r\n\r\n  const [demandCol, setDemandCol] = useState(0);\r\n  const [kwhrEnergyCol, setKwhrEnergyCol] = useState(0);\r\n  const [feederCol, setFeederCol] = useState(0);\r\n  const [kvarhrEnergyCol, setKvarhrEnergyCol] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let settings = PowerSubstationUtil.loadSettings();\r\n    setDemandCol(settings.demandKwhrCol);\r\n    setKwhrEnergyCol(settings.kwhrEnergyCol);\r\n    setFeederCol(settings.feederCol);\r\n    setKvarhrEnergyCol(settings.kvarhrEnergyCol);\r\n  }, []);\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    PowerSubstationUtil.saveSettings({\r\n      kwhrEnergyCol,\r\n      demandKwhrCol: demandCol,\r\n      feederCol,\r\n      kvarhrEnergyCol,\r\n    });\r\n\r\n    alert(\"Power Substation Settings Saved\");\r\n  }\r\n\r\n  function handleDemandChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDemandCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleKvarhrEnergyChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKvarhrEnergyCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleFeederColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setFeederCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleKwhrEnergyChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwhrEnergyCol(Number(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Kwhr Energy Column#\"\r\n        placeholder=\"Kwhr Energy Column#\"\r\n        value={kwhrEnergyCol}\r\n        type=\"number\"\r\n        onChange={handleKwhrEnergyChange}\r\n        helpertext=\"the column# of the kwhr energy value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Demand Column#\"\r\n        placeholder=\"Demand Column#\"\r\n        value={demandCol}\r\n        type=\"number\"\r\n        onChange={handleDemandChange}\r\n        helpertext=\"the column# of the demand value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Kvarhr Energy Column#\"\r\n        placeholder=\"Kvarhr Energy Column#\"\r\n        value={kvarhrEnergyCol}\r\n        type=\"number\"\r\n        onChange={handleKvarhrEnergyChange}\r\n        helpertext=\"the column# of the kvarhr value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Feeder Column#\"\r\n        placeholder=\"Feeder Column#\"\r\n        value={feederCol}\r\n        onChange={handleFeederColChange}\r\n        type=\"number\"\r\n        helpertext=\"the column# of the feeder value, note: column starts at 0 \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default PowerSubstationPanel;\r\n","import Settings from \"./Settings\";\r\n\r\nexport default Settings;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(3),\r\n\r\n      color: theme.palette.text.primary,\r\n      \"&:hover > $content\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      \"&:focus > $content, &$selected > $content\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.primary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"$expanded > &\": {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      \"& $content\": {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n    labelRoot: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: `${theme.spacing(2)}px`,\r\n      padding: theme.spacing(0.5, 1),\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: \"normal\",\r\n      flexGrow: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useTreeItemStyles;\r\n","import { SvgIconProps, Typography } from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\n\r\ndeclare module \"csstype\" {\r\n  interface Properties {\r\n    \"--tree-view-color\"?: string;\r\n    \"--tree-view-bg-color\"?: string;\r\n  }\r\n}\r\n\r\ntype StyledTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n  labelInfo?: string;\r\n  labelText: string;\r\n};\r\n\r\nfunction StyledTreeItem(props: StyledTreeItemProps) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          <Typography variant=\"body2\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default StyledTreeItem;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport {\r\n  ArrowDownward,\r\n  ArrowRight,\r\n  Functions,\r\n  TrendingUp,\r\n} from \"@material-ui/icons\";\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\n\r\ntype DetailsTreeProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst DetailsTree: React.FunctionComponent<DetailsTreeProps> = (props) => {\r\n  const { monthlyLoadProfile, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={[\"1\"]}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }}></div>}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"2\"\r\n        labelText=\"Coincident Peak\"\r\n        labelIcon={TrendingUp}\r\n        labelInfo={\r\n          monthlyLoadProfile.coincidentPeak\r\n            ? `${monthlyLoadProfile.coincidentPeak.meteringPoint}: ${\r\n                monthlyLoadProfile.coincidentPeak.date.getMonth() + 1\r\n              }/${monthlyLoadProfile.coincidentPeak.date.getDate()}/${monthlyLoadProfile.coincidentPeak.date.getFullYear()} ${\r\n                monthlyLoadProfile.coincidentPeak.hour\r\n              }:00 kwdel: ${monthlyLoadProfile.coincidentPeak.kwdel.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"3\"\r\n        labelText=\"None Coincident Peak\"\r\n        labelIcon={Functions}\r\n        labelInfo={\r\n          monthlyLoadProfile.nonCoincidentPeak\r\n            ? ` ${monthlyLoadProfile.nonCoincidentPeak.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"4\"\r\n        labelText=\"Diversity Factor:\"\r\n        labelIcon={Functions}\r\n        labelInfo={\r\n          monthlyLoadProfile.diversityFactor\r\n            ? ` ${monthlyLoadProfile.diversityFactor.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"5\"\r\n        labelText=\"Max per metering point:\"\r\n        labelIcon={TrendingUp}\r\n        labelInfo={\"\"}\r\n      >\r\n        {monthlyLoadProfile.loadProfilesMax.map((lpMax) => {\r\n          return (\r\n            <StyledTreeItem\r\n              key={`LM:S${lpMax.meteringPoint}`}\r\n              nodeId={`LM:S${lpMax.meteringPoint}`}\r\n              labelIcon={TrendingUp}\r\n              labelText={`${lpMax.meteringPoint}`}\r\n              labelInfo={` ${\r\n                lpMax.date.getMonth() + 1\r\n              }/${lpMax.date.getDate()}/${lpMax.date.getFullYear()} ${\r\n                lpMax.hour\r\n              }:00 kwdel: ${lpMax.kwdel.toFixed(2)}`}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n      <StyledTreeItem\r\n        nodeId=\"7\"\r\n        labelText=\"Sum per metering point:\"\r\n        labelIcon={Functions}\r\n        labelInfo={\"\"}\r\n      >\r\n        {monthlyLoadProfile.loadProfilesSum.map((lpSum) => {\r\n          return (\r\n            <StyledTreeItem\r\n              key={`LS:S${lpSum.meteringPoint}`}\r\n              nodeId={`LS:S${lpSum.meteringPoint}`}\r\n              labelIcon={Functions}\r\n              labelText={`${lpSum.meteringPoint}`}\r\n              labelInfo={` ${lpSum.kwhdel.toFixed(2)}`}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n  })\r\n);\r\n\r\nexport default DetailsTree;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport { LoadProfile } from \"../../../loadprofile/objects\";\r\nimport React, { useEffect } from \"react\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\n\r\ntype HourTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  loadProfiles: LoadProfile[];\r\n  totalLoadProfile: LoadProfile;\r\n  dateString?: string;\r\n  hour?: number;\r\n  header?: boolean;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    labelContent: {\r\n      width: \"120px\",\r\n      fontWeight: \"normal\",\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nfunction HourTreeItem(props: HourTreeItemProps) {\r\n  const treeItemClasses = useTreeItemStyles();\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    bgColor,\r\n    loadProfiles,\r\n    dateString = \"\",\r\n    hour = 1,\r\n    header = false,\r\n    totalLoadProfile,\r\n    ...other\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(\"HourTreeItemRendered: Hour: \" + hour);\r\n  }, []);\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={treeItemClasses.labelRoot}>\r\n          <Box minWidth=\"35px\">\r\n            {header ? (\r\n              <Typography variant=\"body2\" className={treeItemClasses.labelText}>\r\n                Hour\r\n              </Typography>\r\n            ) : (\r\n              <Typography variant=\"body2\" className={treeItemClasses.labelText}>\r\n                {hour}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n          {header\r\n            ? loadProfiles.map((loadProfile) => {\r\n                return (\r\n                  <Typography\r\n                    key={`HTI: T: M:${loadProfile.meteringPoint}`}\r\n                    variant=\"body2\"\r\n                    className={classes.labelContent}\r\n                  >\r\n                    {loadProfile.meteringPoint}\r\n                  </Typography>\r\n                );\r\n              })\r\n            : loadProfiles.map((loadProfile) => {\r\n                return (\r\n                  <Typography\r\n                    key={`HTI: T: K:${loadProfile.meteringPoint}`}\r\n                    variant=\"body2\"\r\n                    className={classes.labelContent}\r\n                  >\r\n                    {loadProfile\r\n                      .getDailyLoadProfile(dateString)\r\n                      .hourlyLoadProfiles[hour - 1].getTotalKwdel()\r\n                      .toFixed(2)}\r\n                  </Typography>\r\n                );\r\n              })}\r\n          {header ? (\r\n            <Typography\r\n              className={classes.labelContent}\r\n              variant=\"caption\"\r\n              color=\"inherit\"\r\n            >\r\n              {`Total `}\r\n            </Typography>\r\n          ) : (\r\n            <Typography\r\n              className={classes.labelContent}\r\n              variant=\"caption\"\r\n              color=\"inherit\"\r\n            >\r\n              {totalLoadProfile\r\n                .getDailyLoadProfile(dateString)\r\n                .hourlyLoadProfiles[hour - 1].getRawTotal()\r\n                .toFixed(2)}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: treeItemClasses.root,\r\n        content: treeItemClasses.content,\r\n        expanded: treeItemClasses.expanded,\r\n        selected: treeItemClasses.selected,\r\n        group: treeItemClasses.group,\r\n        label: treeItemClasses.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HourTreeItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\nimport { Today } from \"@material-ui/icons\";\r\nimport { Month } from \"../../../enums\";\r\nimport HourTreeItem from \"./HourTreeItem\";\r\n\r\ntype DayTreeProps = {\r\n  loadProfiles: LoadProfile[];\r\n  totalLoadProfile: LoadProfile;\r\n  dateString: string;\r\n  nodeId: string;\r\n};\r\n\r\nconst DayTree = (props: DayTreeProps) => {\r\n  const { loadProfiles, dateString, nodeId, totalLoadProfile } = props;\r\n\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    setDate(new Date(dateString));\r\n  }, [dateString]);\r\n\r\n  return (\r\n    <StyledTreeItem\r\n      nodeId={nodeId}\r\n      labelText={`${Month[date.getMonth()]} ${date.getDate()}`}\r\n      labelIcon={Today}\r\n    >\r\n      <HourTreeItem\r\n        nodeId={`DTI:D:${dateString}H`}\r\n        dateString={dateString}\r\n        header={true}\r\n        loadProfiles={loadProfiles}\r\n        totalLoadProfile={totalLoadProfile}\r\n      />\r\n      {[...Array(24).keys()].map((hour) => {\r\n        return (\r\n          <HourTreeItem\r\n            nodeId={`HTI: H:${hour}`}\r\n            key={`HTI: H:${hour}`}\r\n            hour={hour + 1}\r\n            dateString={dateString}\r\n            loadProfiles={loadProfiles}\r\n            totalLoadProfile={totalLoadProfile}\r\n          />\r\n        );\r\n      })}\r\n    </StyledTreeItem>\r\n  );\r\n};\r\n\r\nexport default DayTree;\r\n","import React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\nimport { ArrowDownward, ArrowRight, CalendarToday } from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { Month } from \"../../../enums\";\r\nimport DayTreeItem from \"./DayTreeItem\";\r\n\r\ntype MonthlyTreeProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst MonthlyTree = (props: MonthlyTreeProps) => {\r\n  const { monthlyLoadProfile } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={[\"1\"]}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"1\"\r\n        labelText={`${Month[monthlyLoadProfile.billingPeriod.month - 1]} ${\r\n          monthlyLoadProfile.billingPeriod.year\r\n        }`}\r\n        labelIcon={CalendarToday}\r\n      >\r\n        {[...monthlyLoadProfile.dateStrings.values()].map((dateString) => {\r\n          let loadProfiles = [\r\n            ...Array.from(monthlyLoadProfile.loadProfiles.values()),\r\n          ];\r\n          let key = `DTI:D:${dateString}`;\r\n          return (\r\n            <DayTreeItem\r\n              totalLoadProfile={monthlyLoadProfile.totalLoadpRofile}\r\n              key={key}\r\n              nodeId={key}\r\n              loadProfiles={loadProfiles}\r\n              dateString={dateString}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyTree;\r\n","import { MonthlyLoadProfile, DailyLoadProfile } from \"./objects\";\r\nimport XLSX from \"xlsx\";\r\n\r\nfunction generateMonthlyLoadProfileXlsx(\r\n  monthlyLoadProfile: MonthlyLoadProfile\r\n) {\r\n  let workbook = XLSX.utils.book_new();\r\n  let worksheetName = `${monthlyLoadProfile.billingPeriod.toString()}`;\r\n  let worksheetData = generateSheetData(monthlyLoadProfile);\r\n  let worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, worksheetName);\r\n  XLSX.writeFile(\r\n    workbook,\r\n    `Monthly LoadProfile Report of ${monthlyLoadProfile.billingPeriod.toString()}.xlsx`\r\n  );\r\n}\r\n\r\nfunction generateSheetData(monthlyLoadProfile: MonthlyLoadProfile) {\r\n  let data = [];\r\n  let start = monthlyLoadProfile.billingPeriod.startDate;\r\n  let end = monthlyLoadProfile.billingPeriod.enddDate;\r\n  console.log(\r\n    `start date: ${start.toLocaleDateString()} endDate: ${end.toLocaleDateString()}`\r\n  );\r\n\r\n  //---------CREATING HEADERS-------------\r\n\r\n  let header = [\"Date\", \"Hour\"];\r\n  for (let loadProfile of monthlyLoadProfile.loadProfiles.values()) {\r\n    header.push(loadProfile.meteringPoint);\r\n  }\r\n  header.push(\"Total\");\r\n\r\n  //----------CONTENT----------------\r\n  data.push(header);\r\n  while (start <= end) {\r\n    let dateString = `${\r\n      start.getMonth() + 1\r\n    }/${start.getDate()}/${start.getFullYear()}`;\r\n\r\n    for (let hour = 0; hour < 24; hour++) {\r\n      let row: string[] = [];\r\n      row.push(dateString);\r\n\r\n      row.push(hour.toString());\r\n      for (let loadProfile of monthlyLoadProfile.loadProfiles.values()) {\r\n        let dailyLoadProfile =\r\n          loadProfile.dailyLoadProfiles.get(dateString) ||\r\n          new DailyLoadProfile(new Date(dateString));\r\n        row.push(\r\n          dailyLoadProfile.hourlyLoadProfiles[hour].getTotalKwdel().toFixed(2)\r\n        );\r\n      }\r\n\r\n      let dailyLoadProfile =\r\n        monthlyLoadProfile.totalLoadpRofile.dailyLoadProfiles.get(dateString) ||\r\n        new DailyLoadProfile(new Date(dateString));\r\n      row.push(\r\n        dailyLoadProfile.hourlyLoadProfiles[hour].getRawTotal().toFixed(2)\r\n      );\r\n      console.log(row);\r\n      data.push(row);\r\n    }\r\n    start.setDate(start.getDate() + 1);\r\n  }\r\n\r\n  console.log(data);\r\n  return data;\r\n}\r\n\r\nexport default generateMonthlyLoadProfileXlsx;\r\n","import { createStyles, makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, ReactComponentElement } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport { MonthlyLoadProfile } from \"../../loadprofile/objects\";\r\nimport MonthlyCard from \"./data/MonthlyCard\";\r\nimport LoadProfileGraph from \"./graph/LoadProfileGraph\";\r\n\r\ntype LoadProfileContentProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nenum DataTab {\r\n  DATA = \"data\",\r\n  GRAPH = \"graph\",\r\n  NONE = \"\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  monthlyLoadpRofile: MonthlyLoadProfile;\r\n  value: string;\r\n  index: string;\r\n  children: any;\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { monthlyLoadpRofile, value, index, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return value === index ? (\r\n    <div className={classes.loadProfileContent_tabPanel}>{children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst LoadProfileContent: React.FunctionComponent<LoadProfileContentProps> = (\r\n  props\r\n) => {\r\n  const { monthlyLoadProfile, index, value } = props;\r\n  const [selectedTab, setSelectedTab] = useState<string>(DataTab.DATA);\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return index === value ? (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          <HorizontalTab label=\"Data\" value={DataTab.DATA} />\r\n          <HorizontalTab label=\"Graph\" value={DataTab.GRAPH} />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel\r\n        index={DataTab.DATA}\r\n        value={selectedTab}\r\n        monthlyLoadpRofile={monthlyLoadProfile}\r\n      >\r\n        <MonthlyCard monthlyLoadProfile={monthlyLoadProfile} />\r\n      </TabPanel>\r\n      <TabPanel\r\n        index={DataTab.GRAPH}\r\n        value={selectedTab}\r\n        monthlyLoadpRofile={monthlyLoadProfile}\r\n      >\r\n        <LoadProfileGraph monthlyLoadProfile={monthlyLoadProfile} />\r\n      </TabPanel>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    loadProfileContent_root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    loadProfileContent_tabPanel: {\r\n      flex: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileContent;\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { GetAppRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\nimport DetailsTree from \"./DetailsTree\";\r\nimport MonthlyTree from \"./MonthlyTree\";\r\nimport generateLoadProfileExcel from \"../../../loadprofile/ExcelGenerator\";\r\n\r\ntype MonthlyCardProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst MonthlyCard: React.FunctionComponent<MonthlyCardProps> = (props) => {\r\n  const { monthlyLoadProfile } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleDownloadClick() {\r\n    generateLoadProfileExcel(monthlyLoadProfile);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.monthlyCard_root}>\r\n      <div className={classes.monthlyCard_paper}>\r\n        <div className={classes.monthlyCard_paperAction}>\r\n          <Button\r\n            onClick={handleDownloadClick}\r\n            className={classes.downloadBtn}\r\n            size=\"small\"\r\n            startIcon={<GetAppRounded />}\r\n          >\r\n            download\r\n          </Button>\r\n        </div>\r\n        <div className={classes.monthlyCard_paperContent}>\r\n          <MonthlyTree monthlyLoadProfile={monthlyLoadProfile} />\r\n          <DetailsTree monthlyLoadProfile={monthlyLoadProfile} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    monthlyCard_root: {\r\n      display: \"inline-flex\",\r\n      boxSizing: \"border-box\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    monthlyCard_paper: {\r\n      flexGrow: 0,\r\n      flexShrink: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      boxSizing: \"border-box\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    monthlyCard_paperAction: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    monthlyCard_paperContent: {\r\n      display: \"flex\",\r\n      flexShrink: 0,\r\n    },\r\n    downloadBtn: {\r\n      fontSize: \"14px\",\r\n      textTransform: \"none\",\r\n      fontWeight: \"lighter\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyCard;\r\n","import { AreaSeries, ArgumentScale, Stack } from \"@devexpress/dx-react-chart\";\r\nimport { scaleBand } from \"@devexpress/dx-chart-core\";\r\nimport {\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Chart,\r\n  LineSeries,\r\n  Legend,\r\n  Title,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\n\r\nimport { createStyles, makeStyles, Paper, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\ntype LoadProfileGraphProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst LoadProfileGraph: React.FunctionComponent<LoadProfileGraphProps> = (\r\n  props\r\n) => {\r\n  const { monthlyLoadProfile, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.graphContent}>\r\n      <Chart data={[...monthlyLoadProfile.chartData.values()]}>\r\n        <ArgumentScale factory={scaleBand} />\r\n        <ArgumentAxis showGrid />\r\n        <ValueAxis showGrid />\r\n        {[...monthlyLoadProfile.loadProfiles.values()].map((data) => {\r\n          return (\r\n            <LineSeries\r\n              valueField={data.meteringPoint}\r\n              argumentField=\"date\"\r\n              name={data.meteringPoint}\r\n            />\r\n          );\r\n        })}\r\n        <Stack />\r\n        <Legend />\r\n        <Title\r\n          text={`Billing Period: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    graphContent: {\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileGraph;\r\n","import { makeStyles, Tabs, Theme, Typography } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useContext, useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport LoadProfileContent from \"./LoadProfileContent\";\r\nimport { MonthlyLoadProfile } from \"../../loadprofile/objects\";\r\n\r\ntype LoadProfileContentProps = {};\r\n\r\nconst LoadProfileTabPanel: React.FunctionComponent<LoadProfileContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"\");\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n  return (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div className={classes.loadProfileContent_Header}>\r\n        <Typography className={classes.loadProfileContent_Title} variant=\"h5\">\r\n          Load Profile\r\n        </Typography>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          {[...loadProfileContext.monthlyLoadProfiles.values()].map(\r\n            (monthlyLoadProfile) => {\r\n              return (\r\n                <HorizontalTab\r\n                  label={monthlyLoadProfile.billingPeriod.toString()}\r\n                  value={monthlyLoadProfile.billingPeriod.toString()}\r\n                  key={`T: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.loadProfileContent_contentWrapper}>\r\n        <div className={classes.loadProfileContent_content}>\r\n          {[...loadProfileContext.monthlyLoadProfiles.values()].map(\r\n            (monthlyLoadProfile) => {\r\n              return (\r\n                <LoadProfileContent\r\n                  key={`C: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n                  monthlyLoadProfile={monthlyLoadProfile}\r\n                  value={selectedTab}\r\n                  index={monthlyLoadProfile.billingPeriod.toString()}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadProfileContent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"0px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  loadProfileContent_Header: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  loadProfileContent_Title: {\r\n    marginRight: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: \"center\",\r\n  },\r\n  loadProfileContent_contentWrapper: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  loadProfileContent_content: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default LoadProfileTabPanel;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(3),\r\n\r\n      color: theme.palette.text.primary,\r\n      \"&:hover > $content\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      \"&:focus > $content, &$selected > $content\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.primary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"$expanded > &\": {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      \"& $content\": {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n    labelRoot: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: `${theme.spacing(2)}px`,\r\n      padding: theme.spacing(0.5, 1),\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: \"normal\",\r\n      flexGrow: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useTreeItemStyles;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Typography,\r\n  Box,\r\n  SvgIconProps,\r\n} from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport React, { useEffect } from \"react\";\r\nimport FeederAndDemandItem from \"../../../feeder_and_demand/FeederAndDemandItem\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\n\r\ntype FederTreeitemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  feederAndDemandItem: FeederAndDemandItem;\r\n  header?: boolean;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    labelContent: {\r\n      width: \"120px\",\r\n      fontWeight: \"normal\",\r\n      flexGrow: 1,\r\n    },\r\n    feeder: {\r\n      width: \"200px\",\r\n    },\r\n    numbers: {\r\n      width: \"130px\",\r\n      maxWidth: \"130px\",\r\n    },\r\n    percent: {\r\n      width: \"90px\",\r\n      maxWidth: \"90px\",\r\n    },\r\n  })\r\n);\r\n\r\nconst FederTreeitem: React.FunctionComponent<FederTreeitemProps> = (\r\n  props: FederTreeitemProps\r\n) => {\r\n  const treeItemClasses = useTreeItemStyles();\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    bgColor,\r\n    header = false,\r\n    feederAndDemandItem,\r\n    labelIcon: LabelIcon,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={treeItemClasses.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={treeItemClasses.labelIcon} />\r\n          {header ? (\r\n            <React.Fragment>\r\n              <Typography\r\n                classes={{ root: classes.feeder }}\r\n                variant=\"body2\"\r\n                className={treeItemClasses.labelText}\r\n              >\r\n                Feeder\r\n              </Typography>\r\n\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Feeder Input Energy (KWHR)\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Demand (KW)\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Minutes\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Hours\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Operating Hours\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Power Factor\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Load Factor\r\n              </Typography>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography\r\n                classes={{ root: classes.feeder }}\r\n                variant=\"body2\"\r\n                className={treeItemClasses.labelText}\r\n              >\r\n                {feederAndDemandItem.feeder}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.feederInput.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.demand.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.totalMinutes}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.totalHours.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.operatingHours.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.powerFactor.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {feederAndDemandItem.loadFactor.toFixed(2)}\r\n              </Typography>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: treeItemClasses.root,\r\n        content: treeItemClasses.content,\r\n        expanded: treeItemClasses.expanded,\r\n        selected: treeItemClasses.selected,\r\n        group: treeItemClasses.group,\r\n        label: treeItemClasses.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FederTreeitem;\r\n","import React from \"react\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport { ArrowDownward, ArrowRight, Place, Title } from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport FeederAndDemand from \"../../../feeder_and_demand/FeederAndDemand\";\r\nimport FeederTreeItem from \"./FeederTreeItem\";\r\nimport FeederAndDemandItem from \"../../../feeder_and_demand/FeederAndDemandItem\";\r\nimport Feeder from \"../../../../objects/common/enums/Feeder\";\r\n\r\ntype MonthlyFeederTreeProps = {\r\n  feederAndDemand: FeederAndDemand;\r\n};\r\n\r\nconst MonthlyFeederTree = (props: MonthlyFeederTreeProps) => {\r\n  const { feederAndDemand } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      <FeederTreeItem\r\n        labelIcon={Title}\r\n        feederAndDemandItem={new FeederAndDemandItem(Feeder.ACLEM, 0)}\r\n        nodeId={\"header\"}\r\n        header={true}\r\n      />\r\n      {[...feederAndDemand.items.values()].map((item) => {\r\n        let key = `FTI:F:${item.feeder}`;\r\n        return (\r\n          <FeederTreeItem\r\n            labelIcon={Place}\r\n            feederAndDemandItem={item}\r\n            key={key}\r\n            nodeId={key}\r\n          />\r\n        );\r\n      })}\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyFeederTree;\r\n","import MonthlyFeederAndDemand from \"./MonthlyFeederAndDemand\";\r\nimport XLSX from \"xlsx\";\r\nimport FeederAndDemand from \"./FeederAndDemand\";\r\n\r\nconst FeederAndDemandUtil = Object.freeze({\r\n  removePowerSubstationFile,\r\n  removeMonthlyInterruptionFile,\r\n  generateExcelFile,\r\n});\r\n\r\nfunction removePowerSubstationFile(\r\n  fileName: string,\r\n  monthlyFeederAndDemand: MonthlyFeederAndDemand\r\n) {\r\n  let newData = new MonthlyFeederAndDemand(monthlyFeederAndDemand);\r\n  [...newData.feederAndDemands.values()].forEach((feederAndDemand) => {\r\n    [...feederAndDemand.items.values()].forEach((feederAndDemandItem) => {\r\n      feederAndDemandItem.removePowerSubstationData(fileName);\r\n    });\r\n  });\r\n\r\n  return newData;\r\n}\r\n\r\nfunction removeMonthlyInterruptionFile(\r\n  fileName: string,\r\n  monthlyFeederAndDemand: MonthlyFeederAndDemand\r\n) {\r\n  let newData = new MonthlyFeederAndDemand(monthlyFeederAndDemand);\r\n  [...newData.feederAndDemands.values()].forEach((feederAndDemand) => {\r\n    [...feederAndDemand.items.values()].forEach((feederAndDemandItem) => {\r\n      feederAndDemandItem.removeMonthlyInterruptionData(fileName);\r\n    });\r\n  });\r\n\r\n  return newData;\r\n}\r\n\r\nfunction generateExcelFile(feederAndDemand: FeederAndDemand) {\r\n  let workbook = XLSX.utils.book_new();\r\n  let worksheetName = `${feederAndDemand.billingPeriod.toString()}`;\r\n  let worksheetData = generateSheetData(feederAndDemand);\r\n  let worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, worksheetName);\r\n  XLSX.writeFile(\r\n    workbook,\r\n    `Monthly Feeder And Demand Report of ${feederAndDemand.billingPeriod.toString()}.xlsx`\r\n  );\r\n}\r\n\r\nfunction generateSheetData(feederAndDemand: FeederAndDemand) {\r\n  let data = [];\r\n\r\n  //---------CREATING HEADERS-------------\r\n  let first = [\"\", \"\", \"\", \"Power Outages\"];\r\n  let second = [\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    `${feederAndDemand.billingPeriod.startDate.toLocaleDateString()} ~ ${feederAndDemand.billingPeriod.enddDate.toLocaleDateString()}`,\r\n  ];\r\n  let third = [\r\n    \"Feeders\",\r\n    \"Feeder Input\",\r\n    \"Deamnd\",\r\n    \"Minutes\",\r\n    \"Hours\",\r\n    \"Operating Hours\",\r\n    \"Power Factor\",\r\n    \"Load Factor\",\r\n  ];\r\n\r\n  data.push(first, second, third);\r\n\r\n  //----------CONTENT----------------\r\n  for (let item of feederAndDemand.items.values()) {\r\n    data.push([\r\n      item.feeder,\r\n      item.feederInput.toFixed(2),\r\n      item.demand.toFixed(2),\r\n      item.totalMinutes.toString(),\r\n      item.totalHours.toFixed(2),\r\n      item.operatingHours.toFixed(2),\r\n      item.powerFactor.toFixed(2),\r\n      item.loadFactor.toFixed(2),\r\n    ]);\r\n  }\r\n  console.log(data);\r\n  return data;\r\n}\r\n\r\nexport default FeederAndDemandUtil;\r\n","import { createStyles, makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport FeederAndDemand from \"../../feeder_and_demand/FeederAndDemand\";\r\nimport MonthlyFeederCard from \"./data/MonthlyFeederCard\";\r\n\r\ntype FeederAndDemandContentProps = {\r\n  feederAndDemand: FeederAndDemand;\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nenum DataTab {\r\n  DATA = \"data\",\r\n  GRAPH = \"graph\",\r\n  NONE = \"\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  value: string;\r\n  index: string;\r\n  children: any;\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { value, index, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return value === index ? (\r\n    <div className={classes.loadProfileContent_tabPanel}>{children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst FeederAndDemandContent: React.FunctionComponent<FeederAndDemandContentProps> = (\r\n  props\r\n) => {\r\n  const { feederAndDemand, index, value } = props;\r\n  const [selectedTab, setSelectedTab] = useState<string>(DataTab.DATA);\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return index === value ? (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          <HorizontalTab label=\"Data\" value={DataTab.DATA} />\r\n          <HorizontalTab label=\"Graph\" value={DataTab.GRAPH} />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel index={DataTab.DATA} value={selectedTab}>\r\n        <MonthlyFeederCard feederAndDemand={feederAndDemand} />\r\n      </TabPanel>\r\n      {/* <TabPanel index={DataTab.GRAPH} value={selectedTab}></TabPanel> */}\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    loadProfileContent_root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    loadProfileContent_tabPanel: {\r\n      flex: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default FeederAndDemandContent;\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { GetAppRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport FeederAndDemand from \"../../../feeder_and_demand/FeederAndDemand\";\r\nimport MonthlyTree from \"./MonthlyFeederTree\";\r\nimport FeederAndDemandUtil from \"../../../feeder_and_demand/FeederAndDemandUtil\";\r\n\r\ntype MonthlyFeederCardProps = {\r\n  feederAndDemand: FeederAndDemand;\r\n};\r\n\r\nconst MonthlyFeederCard: React.FunctionComponent<MonthlyFeederCardProps> = (\r\n  props\r\n) => {\r\n  const { feederAndDemand } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleDownloadClick() {\r\n    FeederAndDemandUtil.generateExcelFile(feederAndDemand);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.monthlyCard_root}>\r\n      <div className={classes.monthlyCard_paper}>\r\n        <div className={classes.monthlyCard_paperAction}>\r\n          <Button\r\n            className={classes.downloadBtn}\r\n            size=\"small\"\r\n            startIcon={<GetAppRounded />}\r\n            onClick={handleDownloadClick}\r\n          >\r\n            download\r\n          </Button>\r\n        </div>\r\n        <div className={classes.monthlyCard_paperContent}>\r\n          <MonthlyTree feederAndDemand={feederAndDemand} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    monthlyCard_root: {\r\n      display: \"inline-flex\",\r\n      boxSizing: \"border-box\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    monthlyCard_paper: {\r\n      flexGrow: 0,\r\n      flexShrink: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      boxSizing: \"border-box\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    monthlyCard_paperAction: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    monthlyCard_paperContent: {\r\n      display: \"flex\",\r\n      flexShrink: 0,\r\n    },\r\n    downloadBtn: {\r\n      fontSize: \"14px\",\r\n      textTransform: \"none\",\r\n      fontWeight: \"lighter\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyFeederCard;\r\n","import { makeStyles, Tabs, Theme, Typography } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useContext, useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport { FeederAndDemandContext } from \"../../feeder_and_demand/FeederAndDemandContextProvider\";\r\nimport FeederAndDemandContent from \"./FeederAndDemandContent\";\r\n\r\ntype FeederAndDemandContentRootProps = {};\r\n\r\nconst FeederAndDemandContentRoot: React.FunctionComponent<FeederAndDemandContentRootProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"\");\r\n  const feederAndDemandContext = useContext(FeederAndDemandContext);\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n  return (\r\n    <div className={classes.feederAndDemandContent_root}>\r\n      <div className={classes.feederAndDemand_header}>\r\n        <Typography className={classes.feederAndDemand_title} variant=\"h5\">\r\n          Feeder Demand and Outages :D\r\n        </Typography>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          {[\r\n            ...feederAndDemandContext.monthlyFeederAndDemand.feederAndDemands.values(),\r\n          ].map((feederAndDemands) => {\r\n            return (\r\n              <HorizontalTab\r\n                label={feederAndDemands.billingPeriod.toString()}\r\n                value={feederAndDemands.billingPeriod.toString()}\r\n                key={`T: ${feederAndDemands.billingPeriod.toString()}`}\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.feederAndDemand_contentContainer}>\r\n        <div className={classes.feederAndDemandContent}>\r\n          {[\r\n            ...feederAndDemandContext.monthlyFeederAndDemand.feederAndDemands.values(),\r\n          ].map((feederAndDemand) => {\r\n            return (\r\n              <FeederAndDemandContent\r\n                key={`FDC:BP:${feederAndDemand.billingPeriod.toString()}`}\r\n                feederAndDemand={feederAndDemand}\r\n                value={selectedTab}\r\n                index={feederAndDemand.billingPeriod.toString()}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  feederAndDemandContent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"0px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  feederAndDemand_header: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  feederAndDemand_title: {\r\n    marginRight: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: \"center\",\r\n  },\r\n  feederAndDemand_contentContainer: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  feederAndDemandContent: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default FeederAndDemandContentRoot;\r\n","import { SvgIconProps, Typography } from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport useTreeItemStyles from \"../../maincontent/feeder_demand/data/useTreeItemStyles\";\r\n\r\ndeclare module \"csstype\" {\r\n  interface Properties {\r\n    \"--tree-view-color\"?: string;\r\n    \"--tree-view-bg-color\"?: string;\r\n  }\r\n}\r\n\r\ntype StyledTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n  labelInfo?: string;\r\n  labelText: string;\r\n};\r\n\r\nfunction StyledTreeItem(props: StyledTreeItemProps) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          <Typography variant=\"body2\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default StyledTreeItem;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(3),\r\n\r\n      color: theme.palette.text.primary,\r\n      \"&:hover > $content\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      \"&:focus > $content, &$selected > $content\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.primary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"$expanded > &\": {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      \"& $content\": {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n    labelRoot: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: `${theme.spacing(2)}px`,\r\n      padding: theme.spacing(0.5, 1),\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: \"normal\",\r\n      flexGrow: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useTreeItemStyles;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Typography,\r\n  SvgIconProps,\r\n} from \"@material-ui/core\";\r\nimport transitions from \"@material-ui/core/styles/transitions\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport clsx from \"clsx\";\r\nimport React, { ChangeEvent, useContext, useEffect } from \"react\";\r\nimport { FormEvent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Substation from \"../../../../objects/common/enums/Substation\";\r\nimport PowerTransformerLossItem from \"../../../power_transformer_loss/PowerTransformerLossItem\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\nimport { PowerTransformerLossContext } from \"../../../power_transformer_loss/PowerTransformerLossContextProvider\";\r\nimport BillingPeriod from \"../../../../objects/common/BillingPeriod\";\r\n\r\ntype PowerTransformerLossItemTreeProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  powerTransformerLossItem?: PowerTransformerLossItem;\r\n  billingPeriod: BillingPeriod;\r\n  substation: Substation;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n};\r\n\r\nconst PowerTransformerLossItemTree: React.FunctionComponent<PowerTransformerLossItemTreeProps> = (\r\n  props\r\n) => {\r\n  const treeItemClasses = useTreeItemStyles();\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    bgColor,\r\n    powerTransformerLossItem,\r\n    substation,\r\n    labelIcon: LabelIcon,\r\n    billingPeriod,\r\n    ...other\r\n  } = props;\r\n  const powerTransformerLossContext = useContext(PowerTransformerLossContext);\r\n  const [demand, setDemand] = useState(\"0\");\r\n  const [demandError, setDemmandError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (powerTransformerLossItem) {\r\n      setDemand(powerTransformerLossItem.demandMW.toString());\r\n    }\r\n  }, []);\r\n\r\n  function handleDemandChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    if (Number(event.target.value)) {\r\n      setDemmandError(false);\r\n    } else {\r\n      setDemmandError(true);\r\n    }\r\n    setDemand(event.target.value);\r\n  }\r\n\r\n  function handleDemandSubmit(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    if (!demandError && powerTransformerLossItem) {\r\n      let newItem = new PowerTransformerLossItem(\r\n        powerTransformerLossItem.substationItem,\r\n        0,\r\n        powerTransformerLossItem\r\n      );\r\n      newItem.demandMW = Number(demand);\r\n      console.log({ newItem });\r\n      powerTransformerLossContext.onPowerTransformerLossItemChanged(\r\n        newItem,\r\n        billingPeriod\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={treeItemClasses.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={treeItemClasses.labelIcon} />\r\n          {!powerTransformerLossItem ? (\r\n            <React.Fragment>\r\n              <Typography\r\n                classes={{ root: classes.feeder }}\r\n                variant=\"body2\"\r\n                className={treeItemClasses.labelText}\r\n              >\r\n                Substation\r\n              </Typography>\r\n\r\n              <Typography\r\n                classes={{ root: classes.feeder }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Transformer\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Energy (MWHR)\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Demand (MW)\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Power Factor\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Load (MVA)\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Percent Loading\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Operation Hours\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Ave. Load (MW)\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Load Factor\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Loss Factor\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Core Loss\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Winding Loss\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Auxiliary Loss\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                Total Losses\r\n              </Typography>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography\r\n                classes={{ root: classes.feeder }}\r\n                variant=\"body2\"\r\n                className={treeItemClasses.labelText}\r\n              >\r\n                {substation.text}\r\n              </Typography>\r\n\r\n              <Typography\r\n                classes={{ root: classes.feeder }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.substationItem.transformer.text}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.energMwhr.toFixed(2)}\r\n              </Typography>\r\n              <form className={classes.percent} onSubmit={handleDemandSubmit}>\r\n                <input\r\n                  value={demand}\r\n                  className={clsx(classes.inputField, {\r\n                    [classes.errorField]: demandError,\r\n                  })}\r\n                  onChange={handleDemandChange}\r\n                />\r\n              </form>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.powerFactor.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.loadMVA.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.percentLoading.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.operationHours}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.averageLoad.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.loadFactor.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.percent }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.lossFactor.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.coreLoss.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.windingLoss.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.auxiliaryLoss.toFixed(2)}\r\n              </Typography>\r\n              <Typography\r\n                classes={{ root: classes.numbers }}\r\n                variant=\"body2\"\r\n                className={classes.labelContent}\r\n              >\r\n                {powerTransformerLossItem.totalLosses.toFixed(2)}\r\n              </Typography>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: treeItemClasses.root,\r\n        content: treeItemClasses.content,\r\n        expanded: treeItemClasses.expanded,\r\n        selected: treeItemClasses.selected,\r\n        group: treeItemClasses.group,\r\n        label: treeItemClasses.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    labelContent: {\r\n      width: \"120px\",\r\n      fontWeight: \"normal\",\r\n      flexGrow: 1,\r\n    },\r\n    feeder: {\r\n      width: \"200px\",\r\n    },\r\n    numbers: {\r\n      width: \"130px\",\r\n      maxWidth: \"130px\",\r\n    },\r\n    percent: {\r\n      width: \"90px\",\r\n      maxWidth: \"90px\",\r\n    },\r\n    inputField: {\r\n      width: \"100%\",\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      borderRadius: theme.shape.borderRadius,\r\n      outline: \"none\",\r\n      color: theme.palette.text.primary,\r\n      transition: theme.transitions.create(\"borderColor\", {\r\n        duration: theme.transitions.duration.standard,\r\n        easing: transitions.easing.easeInOut,\r\n      }),\r\n      \"&:focus, &:hover\": {\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n    errorField: {\r\n      borderColor: theme.palette.error.main,\r\n      \"&:focus, &:hover\": {\r\n        borderColor: theme.palette.error.main,\r\n      },\r\n      color: theme.palette.error.main,\r\n    },\r\n  })\r\n);\r\n\r\nexport default PowerTransformerLossItemTree;\r\n","import React from \"react\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport StyledTreeItem from \"../../../common/components/StyledTreeItem\";\r\nimport {\r\n  ArrowDownward,\r\n  ArrowRight,\r\n  CalendarToday,\r\n  Place,\r\n  PlaceOutlined,\r\n  Title,\r\n} from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport PowerTransformerLossSubstation from \"../../../power_transformer_loss/PowerTransformerLossSubstation\";\r\nimport PowerTransformerLossItemTree from \"./PowerTransformerLossItemTree\";\r\nimport BillingPeriod from \"../../../../objects/common/BillingPeriod\";\r\n\r\ntype PowerTransformerLossSubstationTreeProps = {\r\n  powerTransformerLossSubstation: PowerTransformerLossSubstation;\r\n  billingPeriod: BillingPeriod;\r\n};\r\n\r\nconst PowerTransformerLossSubstationTree = (\r\n  props: PowerTransformerLossSubstationTreeProps\r\n) => {\r\n  const { powerTransformerLossSubstation, billingPeriod } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId={powerTransformerLossSubstation.substation.key}\r\n        labelText={powerTransformerLossSubstation.substation.text}\r\n        labelIcon={Place}\r\n      >\r\n        <PowerTransformerLossItemTree\r\n          labelIcon={Title}\r\n          substation={powerTransformerLossSubstation.substation}\r\n          nodeId=\"header\"\r\n          billingPeriod={billingPeriod}\r\n        />\r\n        {[...powerTransformerLossSubstation.substationItems.values()].map(\r\n          (substationItem) => {\r\n            let key = `PFTS:H:${substationItem.substationItem.toString()}`;\r\n            return (\r\n              <PowerTransformerLossItemTree\r\n                labelIcon={PlaceOutlined}\r\n                powerTransformerLossItem={substationItem}\r\n                substation={powerTransformerLossSubstation.substation}\r\n                key={key}\r\n                nodeId={key}\r\n                billingPeriod={billingPeriod}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default PowerTransformerLossSubstationTree;\r\n","import React from \"react\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport StyledTreeItem from \"../../../common/components/StyledTreeItem\";\r\nimport { ArrowDownward, ArrowRight, CalendarToday } from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport PowerTransformerLoss from \"../../../power_transformer_loss/PowerTransformerLoss\";\r\nimport PowerTransformerLossSubstationTree from \"./PowerTransformerLossSubstationTree\";\r\n\r\ntype MonthlyPowerTransformerLossTreeProps = {\r\n  powerTransformerLoss: PowerTransformerLoss;\r\n};\r\n\r\nconst MonthlyPowerTransformerLossTree = (\r\n  props: MonthlyPowerTransformerLossTreeProps\r\n) => {\r\n  const { powerTransformerLoss } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      {[...powerTransformerLoss.items.values()].map((item) => {\r\n        let key = `PFT:F:${item.substation.key}`;\r\n        return (\r\n          <PowerTransformerLossSubstationTree\r\n            powerTransformerLossSubstation={item}\r\n            billingPeriod={powerTransformerLoss.billingPeriod}\r\n            key={key}\r\n          />\r\n        );\r\n      })}\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyPowerTransformerLossTree;\r\n","import PowerTransformerLoss from \"./PowerTransformerLoss\";\r\nimport XLSX from \"xlsx\";\r\n\r\nconst PowerTransformerLossUtil = Object.freeze({ generateExcelFile });\r\n\r\nfunction generateExcelFile(powerTransformerLoss: PowerTransformerLoss) {\r\n  let workbook = XLSX.utils.book_new();\r\n  let worksheetName = `${powerTransformerLoss.billingPeriod.toString()}`;\r\n  let worksheetData = generateSheetData(powerTransformerLoss);\r\n  let worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, worksheetName);\r\n  XLSX.writeFile(\r\n    workbook,\r\n    `Monthly Power Transformer Loss Report of ${powerTransformerLoss.billingPeriod.toString()}.xlsx`\r\n  );\r\n}\r\n\r\nfunction generateSheetData(powerTransformerLoss: PowerTransformerLoss) {\r\n  let data = [];\r\n\r\n  //---------CREATING HEADERS-------------\r\n\r\n  let header = [\r\n    \"Substation\",\r\n    \"Power Transformer\",\r\n    \"Brand\",\r\n    \"Energy (MWHR)\",\r\n    \"Demand (MW)\",\r\n    \"Power Factor\",\r\n    \"Load (MVA)\",\r\n    \"Percent Loading\",\r\n    \"Operation Hours\",\r\n    \"Ave. Load (MW)\",\r\n    \"Load Factor\",\r\n    \"Loss Factor\",\r\n    \"Core Loss\",\r\n    \"Winding Loss\",\r\n    \"Auxiliary Loss\",\r\n    \"Total Losses\",\r\n  ];\r\n\r\n  data.push(header);\r\n\r\n  //----------CONTENT----------------\r\n  for (let substation of powerTransformerLoss.items.values()) {\r\n    for (let item of substation.substationItems.values()) {\r\n      data.push([\r\n        substation.substation.text,\r\n        `${item.substationItem.transformer.power} mVA`,\r\n        item.substationItem.transformer.brand,\r\n        item.energMwhr.toFixed(2),\r\n        item.demandMW.toFixed(2),\r\n        item.powerFactor.toFixed(2),\r\n        item.loadMVA.toFixed(2),\r\n        item.percentLoading.toFixed(2),\r\n        item.operationHours.toFixed(2),\r\n        item.averageLoad.toFixed(2),\r\n        item.loadFactor.toFixed(2),\r\n        item.coreLoss.toFixed(2),\r\n        item.windingLoss.toFixed(2),\r\n        item.auxiliaryLoss.toFixed(2),\r\n        item.totalLosses.toFixed(2),\r\n      ]);\r\n    }\r\n  }\r\n  console.log(data);\r\n  return data;\r\n}\r\nexport default PowerTransformerLossUtil;\r\n","import { createStyles, makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport PowerTransformerLoss from \"../../power_transformer_loss/PowerTransformerLoss\";\r\nimport MonthlyPowerTransformerLossCard from \"./data/MonthlyPowerTransformerLossCard\";\r\n\r\ntype PowerTransformerLossContentProps = {\r\n  powerTransformerLoss: PowerTransformerLoss;\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nenum DataTab {\r\n  DATA = \"data\",\r\n  GRAPH = \"graph\",\r\n  NONE = \"\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  value: string;\r\n  index: string;\r\n  children: any;\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { value, index, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return value === index ? (\r\n    <div className={classes.loadProfileContent_tabPanel}>{children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst PowerTransformerLossContent: React.FunctionComponent<PowerTransformerLossContentProps> = (\r\n  props\r\n) => {\r\n  const { powerTransformerLoss, index, value } = props;\r\n  const [selectedTab, setSelectedTab] = useState<string>(DataTab.DATA);\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return index === value ? (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          <HorizontalTab label=\"Data\" value={DataTab.DATA} />\r\n          <HorizontalTab label=\"Graph\" value={DataTab.GRAPH} />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel index={DataTab.DATA} value={selectedTab}>\r\n        <MonthlyPowerTransformerLossCard\r\n          powerTransformerLoss={powerTransformerLoss}\r\n        />\r\n      </TabPanel>\r\n      {/* <TabPanel index={DataTab.GRAPH} value={selectedTab}></TabPanel> */}\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    loadProfileContent_root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    loadProfileContent_tabPanel: {\r\n      flex: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default PowerTransformerLossContent;\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { GetAppRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport PowerTransformerLoss from \"../../../power_transformer_loss/PowerTransformerLoss\";\r\nimport MonthlyPowerTransformerLossTree from \"./MonthlyPowerTransformerLossTree\";\r\nimport PowerTransformerLossUtil from \"../../../power_transformer_loss/PowerTransformerLossUtil\";\r\n\r\ntype MonthlyPoowerTransformerLossCard = {\r\n  powerTransformerLoss: PowerTransformerLoss;\r\n};\r\n\r\nconst MonthlyPowerTransformerLossCard: React.FunctionComponent<MonthlyPoowerTransformerLossCard> = (\r\n  props\r\n) => {\r\n  const { powerTransformerLoss } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleDownloadClick() {\r\n    PowerTransformerLossUtil.generateExcelFile(powerTransformerLoss);\r\n  }\r\n  return (\r\n    <div className={classes.monthlyCard_root}>\r\n      <div className={classes.monthlyCard_paper}>\r\n        <div className={classes.monthlyCard_paperAction}>\r\n          <Button\r\n            className={classes.downloadBtn}\r\n            size=\"small\"\r\n            startIcon={<GetAppRounded />}\r\n            onClick={handleDownloadClick}\r\n          >\r\n            download\r\n          </Button>\r\n        </div>\r\n        <div className={classes.monthlyCard_paperContent}>\r\n          <MonthlyPowerTransformerLossTree\r\n            powerTransformerLoss={powerTransformerLoss}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    monthlyCard_root: {\r\n      display: \"inline-flex\",\r\n      boxSizing: \"border-box\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    monthlyCard_paper: {\r\n      flexGrow: 0,\r\n      flexShrink: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      boxSizing: \"border-box\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    monthlyCard_paperAction: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    monthlyCard_paperContent: {\r\n      display: \"flex\",\r\n      flexShrink: 0,\r\n    },\r\n    downloadBtn: {\r\n      fontSize: \"14px\",\r\n      textTransform: \"none\",\r\n      fontWeight: \"lighter\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyPowerTransformerLossCard;\r\n","import { makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { VerticalTab } from \"../common/components/tabs\";\r\nimport LoadProfileTabPanel from \"./loadprofile/LoadProfileTabPanel\";\r\nimport FeederAndDemandContentRoot from \"./feeder_demand/FeederAndDemandContentRoot\";\r\nimport PowerTransformerLossContentRoot from \"./power_transformer_loss/PowerTransformerLossContentRoot\";\r\ntype MainContentProps = {};\r\n\r\nenum ContentTabs {\r\n  LOAD_PROFILE = \"lp\",\r\n  SUBSTATION_LOSS = \"ssl\",\r\n  FEEDERDEMAND_OUTAGED = \"fdo\",\r\n  POWER_BILL = \"pbl\",\r\n  POWER_TRANSFORMER_LOSS = \"pts\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nconst TabPanel: React.FunctionComponent<TabPanelProps> = (props) => {\r\n  const { value, index, ...others } = props;\r\n  const classes = useStyles();\r\n  return value === index ? (\r\n    <div className={classes.mainContent_content}>{props.children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst MainContent: React.FunctionComponent<MainContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\r\n    ContentTabs.LOAD_PROFILE\r\n  );\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.maincontent_root}>\r\n      <div className={classes.tabs_container}>\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={selectedTab}\r\n          centered={false}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n        >\r\n          <VerticalTab label=\"Load Profile\" value={ContentTabs.LOAD_PROFILE} />\r\n          <VerticalTab label=\"Power Bill\" value={ContentTabs.POWER_BILL} />\r\n          <VerticalTab\r\n            label=\"Feeder Demand and Outages\"\r\n            value={ContentTabs.FEEDERDEMAND_OUTAGED}\r\n          />\r\n          <VerticalTab\r\n            label=\"Substation Loss\"\r\n            value={ContentTabs.SUBSTATION_LOSS}\r\n          />\r\n          <VerticalTab\r\n            label=\"Power Transformer Loss\"\r\n            value={ContentTabs.POWER_TRANSFORMER_LOSS}\r\n          />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel value={selectedTab} index={ContentTabs.LOAD_PROFILE}>\r\n        <LoadProfileTabPanel />\r\n      </TabPanel>\r\n      <TabPanel value={selectedTab} index={ContentTabs.FEEDERDEMAND_OUTAGED}>\r\n        <FeederAndDemandContentRoot />\r\n      </TabPanel>\r\n      <TabPanel value={selectedTab} index={ContentTabs.POWER_TRANSFORMER_LOSS}>\r\n        <PowerTransformerLossContentRoot />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  maincontent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  tabs_container: {\r\n    marginTop: theme.spacing(12),\r\n    maxWidth: \"300px\",\r\n    flexGrow: 0,\r\n  },\r\n  tabs: {\r\n    display: \"inline-block\",\r\n  },\r\n  mainContent_content: {\r\n    flex: 1,\r\n    width: 0,\r\n  },\r\n}));\r\n\r\nexport default MainContent;\r\n","import { makeStyles, Tabs, Theme, Typography } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useContext, useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport { PowerTransformerLossContext } from \"../../power_transformer_loss/PowerTransformerLossContextProvider\";\r\nimport PowerTransformerLossContent from \"./PowerTransformerLossContent\";\r\n\r\ntype PowerTransformerLossRootProps = {};\r\n\r\nconst PowerTransformerLossContentRoot: React.FunctionComponent<PowerTransformerLossRootProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"\");\r\n  const powerTransformerLossContext = useContext(PowerTransformerLossContext);\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n  return (\r\n    <div className={classes.feederAndDemandContent_root}>\r\n      <div className={classes.feederAndDemand_header}>\r\n        <Typography className={classes.feederAndDemand_title} variant=\"h5\">\r\n          Power Transformer Loss\r\n        </Typography>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          {[\r\n            ...powerTransformerLossContext.monthlyPowerTransformerLoss.powerTransformerLosses.values(),\r\n          ].map((powerTransformerLoss) => {\r\n            return (\r\n              <HorizontalTab\r\n                label={powerTransformerLoss.billingPeriod.toString()}\r\n                value={powerTransformerLoss.billingPeriod.toString()}\r\n                key={`T: ${powerTransformerLoss.billingPeriod.toString()}`}\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.feederAndDemand_contentContainer}>\r\n        <div className={classes.feederAndDemandContent}>\r\n          {[\r\n            ...powerTransformerLossContext.monthlyPowerTransformerLoss.powerTransformerLosses.values(),\r\n          ].map((powerTransformerLoss) => {\r\n            return (\r\n              <PowerTransformerLossContent\r\n                key={`FDC:BP:${powerTransformerLoss.billingPeriod.toString()}`}\r\n                powerTransformerLoss={powerTransformerLoss}\r\n                value={selectedTab}\r\n                index={powerTransformerLoss.billingPeriod.toString()}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  feederAndDemandContent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"0px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  feederAndDemand_header: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  feederAndDemand_title: {\r\n    marginRight: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: \"center\",\r\n  },\r\n  feederAndDemand_contentContainer: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  feederAndDemandContent: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default PowerTransformerLossContentRoot;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Toolbar from \"../toolbar\";\r\nimport FilesDrawer, { useStyles as filesDrawerStyles } from \"../filesdrawer\";\r\nimport clsx from \"clsx\";\r\nimport Settings from \"../settings\";\r\nimport { MainContent } from \"../maincontent\";\r\nimport { makeStyles, Theme } from \"@material-ui/core\";\r\ntype DashboardProps = {};\r\n\r\nconst Dashboard: React.FC<DashboardProps> = (props) => {\r\n  const classes = useStyles();\r\n  const filesDrawerClasses = filesDrawerStyles();\r\n\r\n  const [openFilesDrawer, setOpenFilesDrawer] = useState<boolean>(true);\r\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\r\n\r\n  function handleSettingsToggle() {\r\n    setOpenSettings(true);\r\n  }\r\n\r\n  function handleSettingsUntoggle() {\r\n    setOpenSettings(false);\r\n  }\r\n\r\n  function handleFilesToggle() {\r\n    setOpenFilesDrawer(true);\r\n  }\r\n\r\n  function handleFilesUntoggle() {\r\n    setOpenFilesDrawer(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dashboard_root}>\r\n      <Toolbar\r\n        onSettingsToggled={handleSettingsToggle}\r\n        onSettingsUntoggled={handleSettingsUntoggle}\r\n        onFilesToggled={handleFilesToggle}\r\n        onFilesUntoggled={handleFilesUntoggle}\r\n      />\r\n      <FilesDrawer open={openFilesDrawer} />\r\n      <div\r\n        className={clsx(classes.dashboard_content, filesDrawerClasses.content, {\r\n          [filesDrawerClasses.contentShift]: openFilesDrawer,\r\n        })}\r\n      >\r\n        {openSettings && <Settings />}\r\n        <MainContent />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dashboard_root: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n  },\r\n  dashboard_content: {\r\n    flex: 1,\r\n    position: \"relative\",\r\n    minHeight: \"0px\",\r\n    width: 0,\r\n  },\r\n}));\r\n\r\nexport default Dashboard;\r\n","import Dashboard from \"./Dashboard\";\r\n\r\nexport default Dashboard;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  ThemeProvider,\r\n  Box,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport LoadProfileContextProvider from \"./loadprofile/LoadProfileContextProvider\";\r\nimport Dashboard from \"./dashboard\";\r\nimport clsx from \"clsx\";\r\nimport FeederAndDemandContextProvider from \"./feeder_and_demand/FeederAndDemandContextProvider\";\r\nimport PowerTransformerLossContextProvider from \"./power_transformer_loss/PowerTransformerLossContextProvider\";\r\n\r\ntype AppProps = {};\r\n\r\nconst App: FunctionComponent<AppProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <LoadProfileContextProvider>\r\n          <FeederAndDemandContextProvider>\r\n            <PowerTransformerLossContextProvider>\r\n              <div className={clsx(classes.root)}>\r\n                <Dashboard />\r\n              </div>\r\n            </PowerTransformerLossContextProvider>\r\n          </FeederAndDemandContextProvider>\r\n        </LoadProfileContextProvider>\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n}));\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Fragment>\n      <App />\n    </React.Fragment>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}