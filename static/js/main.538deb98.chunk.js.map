{"version":3,"sources":["components/enums/Month.ts","components/theme.ts","components/loadprofile/objects/HourlyLoadProfile.ts","components/loadprofile/objects/DailyLoadProfile.ts","components/toolbar/Toolbar.tsx","components/common/BillingPeriod.ts","components/loadprofile/objects/LoadProfile_Raw.ts","components/loadprofile/objects/LoadProfile.ts","components/loadprofile/objects/others/CoincidentPeak.ts","components/loadprofile/objects/MonthlyLoadProfile.ts","components/common/Stack.ts","components/loadprofile/LoadProfileContextProvider.tsx","components/toolbar/StyledToggleButton.tsx","components/toolbar/use-styles.ts","components/loadprofile/LoadProfileStorage.ts","components/toolbar/index.ts","components/filesdrawer/use-styles.ts","components/filesdrawer/CustomAccordion.tsx","components/filesdrawer/FileCard.tsx","components/errors/InvalidFileError.ts","components/common/utils/FileUtil.ts","components/loadprofile/enums/Feeder.ts","components/loadprofile/enums/Transformer.ts","components/loadprofile/enums/Substation.ts","components/loadprofile/enums/MeteringPoints.ts","components/loadprofile/ExcelParser.ts","components/monthly_interruption/MonthlyInterruptionStorage.ts","components/loadprofile/LoadProfileParser.tsx","components/filesdrawer/FileDrop.tsx","components/filesdrawer/accordions/LoadProfileAccordion.tsx","components/filesdrawer/accordions/MonthlyInterruptionAccordion.tsx","components/filesdrawer/accordions/PowerSubstationAccordion.tsx","components/filesdrawer/index.ts","components/filesdrawer/FilesDrawer.tsx","components/settings/use-styles.ts","components/settings/tabpanels/SettingsPanel.tsx","components/common/components/textfields/FormTextField.tsx","components/settings/tabpanels/LoadProfileSettingsPanel.tsx","components/settings/tabpanels/MonthlyInterruptionPanel.tsx","components/power_substation/PowerSubstationLocalStorage.ts","components/common/components/tabs/VerticalTab.tsx","components/common/components/tabs/HorizontalTab.tsx","components/settings/tabpanels/PowerSubstationPanel.tsx","components/settings/Settings.tsx","components/settings/index.ts","components/maincontent/loadprofile/data/useTreeItemStyles.ts","components/maincontent/loadprofile/data/StyledTreeItem.tsx","components/maincontent/loadprofile/data/DetailsTree.tsx","components/maincontent/loadprofile/data/HourTreeItem.tsx","components/maincontent/loadprofile/data/DayTreeItem.tsx","components/maincontent/loadprofile/data/MonthlyTree.tsx","components/loadprofile/ExcelGenerator.ts","components/maincontent/loadprofile/LoadProfileContent.tsx","components/maincontent/loadprofile/data/MonthlyCard.tsx","components/maincontent/loadprofile/graph/LoadProfileGraph.tsx","components/maincontent/MainContent.tsx","components/maincontent/loadprofile/LoadProfileTabPanel.tsx","components/dashboard/Dashboard.tsx","components/dashboard/index.ts","components/App.tsx","components/index.ts","index.js"],"names":["Month","theme","createMuiTheme","palette","primary","main","dark","contrastText","secondary","text","background","default","HourlyLoadProfile","hour","kwdelSet","this","kwdel","fileName","push","filter","length","total","DailyLoadProfile","date","hourlyLoadProfiles","max","sum","buildHourlyLoadProfiles","Array","keys","map","rawData","addKwdel","forEach","hourloadProfile","removeKwdel","maxKwdel","hourlyLoadProfile","getTotalKwdel","ToggleValues","BillingPeriod","month","year","startDate","enddDate","getStartDate","getEndDate","startMonth","startYear","moment","toDate","billingPeriod","LoadProfile_Raw","day","minute","meteringPoint","row","Date","setDate","getDate","getMonth","getFullYear","billingMonth","getBillingMonth","LoadProfile","dailyLoadProfiles","Map","dateString","has","set","get","addLoadProfileData","dailyLoadProfile","removeLoadProfileData","maxHour","maxDate","values","dailyMax","dailySum","CoincidentPeak","MonthlyLoadProfile","loadProfiles","dateStrings","coincidentPeak","nonCoincidentPeak","diversityFactor","loadProfilesMax","loadProfilesSum","totalLoadpRofile","chartData","Set","key","add","meteringPoints","loadProfile","removeLoadPRofileData","dateKey","obj","resetData","dailyLp","hourlyLp","extractDataThenAddToTotal","genMaxAndSum","extractDailyLoadProfileTotalKwdelThenAddToData","delete","dlp","hlp","getRawTotal","console","log","info","coincidental","nonCoincidental","totalLoadProfile","Stack","stack","data","top","element","isEmpty","pop","LoadProfileContext","createContext","updateLoadProfiles","rawDatas","monthlyLoadProfiles","working","deleteLoadProfiles","deleteLoadProfileInfo","LoadProfileContextProvider","props","children","useState","setMonthlyLoadProfiles","buffer","setBuffer","setWorking","useEffect","newBuffer","Promise","resolve","reject","newMonthlyLoadProfiles","addData","mlp","initOtherDetails","then","result","mpl","removeData","Provider","value","prevBuffer","newbuffer","deleteLaodProfileInfo","useStyles","makeStyles","root","border","borderRadius","backgroundColor","color","selected","StyledToggleButton","others","classes","ToggleButton","width","height","zIndex","drawer","container","display","flexDirection","justifyContent","alignItems","toggleButtonsContainer","otherButtonsContainer","LoadProfileStorageKey","Toolbar","onFilesToggled","onSettingsToggled","onSettingsUntoggled","onFilesUntoggled","FILES","toggledButton","setToggledButton","NONE","otherToggledButton","setOtherToggledButton","AppBar","elevation","className","position","Box","ToggleButtonGroup","onChange","event","newToggle","method","params","prevToggled","exclusive","Folder","SETTINGS","createStyles","flexShrink","drawerPaper","borderLeft","divider","borderRight","drawerHeader","padding","spacing","mixins","toolbar","content","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","accordion","boxShadow","borderBottom","margin","expanded","accordionSummary","marginBottom","minHeight","accordionTitle","fontSize","asdf","accordionDetails","CustomAccordion","expandedPanel","onPanelChange","panelName","title","render","Accordion","square","newExpanded","AccordionSummary","expandIcon","ExpandMore","Typography","AccordionDetails","cardStyles","mobileStepper","maxWidth","boxSizing","paper","shape","overflowWrap","wordWrap","filename","progress_text","alignSelf","gap","progress_content","action","button","textTransform","error_container","error_text","whiteSpace","FileCard","file","progress","progressInfo","errors","onRemoveFile","openError","setOpenError","Fragment","name","LinearProgress","variant","Button","size","startIcon","ErrorOutline","onClick","Dialog","open","onClose","DialogTitle","Divider","DialogContent","overflow","error","index","component","LoadProfileStorage","loadSettings","kwdelCol","Number","localStorage","getItem","KWDEL","dateCol","DATE","timeCol","TIME","dateFormat","DATE_FORMAT","timeFormat","TIME_FORMAT","saveSettings","settings","setItem","String","InvalidFileError","message","Error","a","fileExtension","split","parameteres","fileTypeSplit","reader","FileReader","onload","Uint8Array","target","workbook","XLSX","read","type","cellDates","readAsArrayBuffer","Feeder","FileUtil","extractWorkbookFromFile","Transformer","serialNumber","power","HYOSUNG_20MVA","SHIHLIN_20MVA","SHIHLIN_10MVVA","SHIHLIN_5MVA","NANJING_20MVA","PRIME_MEIDEN_10MVA","NEW_KOREA_10MVA","NEW_KOREA_5MVA","CHANGZHOU_10MVA","SHENDA_25MVA","SubstationItem","transformer","feeders","Substation","substationItems","PUTIK","GUIWAN","TUMAGA","ARENA_BLANCO","PRESA","TETUAN","MERCEDES","NORTHSIDE","ZAMPEN","SANJOSE_GUSU","SAN_JOSE","CALARIAN","BALIWASAN","DEDICATED_LINE","SANGALI","CULIANAN","CURUAN","FISHING_PORT","AYALA","TALISAYAN","LABUAN","RECODO","SINUNUC","CABATANGAN","PASONANCA","SAN_ROQUE","CAMANCHILI","ACLEM","GOVERNOR_ALVAREZ","VETERANS_AVENUE","NUNEZ","STA_CATALINA","RIO_HONDO","GUARDIA_NACIONAL","CAMPANER","MeteringPoint","substations","substation","substationItem","toUpperCase","MF3MPITZAMC01","MF3MPITZAMC02","MF3MPITZAMC03","MF3MPITZAMC04","MF3MPITZAMC05","MF3MPITZAMC06","MF3MPITZAMC07","calculatePercent","i","setTimeout","extractCells","worksheet","sheetName","kwdelAddress","c","r","dateAddress","timeAddress","kwdelRef","utils","encode_cell","dateRef","timeRef","kwdelCell","timeCell","dateCell","extractDataFromRow","rowData","kwdelCellData","t","v","w","extractKwdelCellData","dateCellData","x","isValid","extractDateCellData","timeCellData","extractTimeCellData","Boolean","concat","getHours","getMinutes","extractLoadProfileRawFromWorkbook","MonthlyInterruptionSettingsKey","handleProgressUpdate","lp_rawDatas","SheetNames","exists","Sheets","range","decode_range","e","s","totalRows","percent","toFixed","cells","LoadProfileParser","onFileParsed","setProgress","setsProgressInfo","setErrors","setMeteringPoints","catch","fileFromParser","dropZone","cursor","dropZone_focused","dropZone_content","flexWrap","dropZoneText","fontWeight","FileDrop","helperText","onFileDrop","onDragEnter","onDragLeave","onDragOver","dragging","setDragging","handleDragEnter","handleDragLeave","onDrop","getRootProps","getInputProps","onMouseEnter","onMouseLeave","clsx","gridGap","marginTop","LoadProfileAccordion","files","setFiles","loadProfileContext","useContext","prevMap","duplicate","handleFileParsed","lpRawDatas","handleRemoveFile","MonthlyInterruptionAccordion","FilesDrawer","setExpandedPanel","handlePanelChange","newExpandedPanel","Drawer","anchor","PowerSubstationAccordion","left","title_div","tabs","flexGrow","tab_panel","textFieldContainer","actionContainer","LoadProfileSettingsPanel","onSubmit","id","preventDefault","form","focused","FormTextField","label","placeholder","helpertext","limitZero","TextField","InputProps","disableUnderline","setKwdel","time","setTime","setDateFormat","setTimeFormat","lpSettings","SettingsPanel","alert","PowerSubstationSettingsKey","MonthlyInterruptionPanel","durationCol","setDurationCol","setDateCol","feederCol","setFeederCol","DURATION","FEEDER","toString","tab","textAlign","tab_selected","tab_wrapper","VerticalTab","Tab","wrapper","minWidth","lineHeight","HorizontalTab","SettingsTabs","PowerSubstationPanel","demandCol","setDemandCol","kwhrEnergyCol","setKwhrEnergyCol","kvarhrEnergyCol","setKvarhrEnergyCol","KVARHRENERGY","KWHRENERGY","demandKwhrCol","DEMAND","TabPanel","other","role","hidden","aria-labelledby","p","Settings","LOADPROFILE_TAB","selectedTab","setSelectedTab","Tabs","orientation","centered","indicatorColor","newTab","MONTHLYINTERRUPTION_TAB","POWERSUBSTATION_TAB","useTreeItemStyles","paddingLeft","hover","borderTopRightRadius","borderBottomRightRadius","paddingRight","typography","fontWeightMedium","fontWeightRegular","group","labelRoot","labelIcon","marginRight","labelText","StyledTreeItem","LabelIcon","labelInfo","bgColor","TreeItem","style","DetailsTree","monthlyLoadProfile","TreeView","defaultExpanded","defaultCollapseIcon","ArrowDownward","defaultExpandIcon","ArrowRight","defaultEndIcon","nodeId","TrendingUp","Functions","lpMax","lpSum","labelContent","HourTreeItem","treeItemClasses","header","getDailyLoadProfile","DayTree","Today","dayTree","MonthlyTree","CalendarToday","from","DayTreeItem","generateMonthlyLoadProfileXlsx","DataTab","book_new","worksheetName","worksheetData","start","end","toLocaleDateString","generateSheetData","aoa_to_sheet","book_append_sheet","writeFile","monthlyCard_root","monthlyCard_paper","monthlyCard_paperAction","monthlyCard_paperContent","downloadBtn","MonthlyCard","generateLoadProfileExcel","GetAppRounded","graphContent","LoadProfileGraph","Paper","factory","scaleBand","showGrid","valueField","argumentField","monthlyLoadpRofile","loadProfileContent_tabPanel","ContentTabs","loadProfileContent_root","flex","LoadProfileContent","DATA","GRAPH","loadProfileContent_Header","loadProfileContent_Title","loadProfileContent_contentWrapper","loadProfileContent_content","LoadProfileTabPanel","maincontent_root","tabs_container","mainContent_content","MainContent","LOAD_PROFILE","POWER_BILL","FEEDERDEMAND_OUTAGED","SUBSTATION_LOSS","POWER_SUBSTATION","dashboard_root","dashboard_content","Dashboard","filesDrawerClasses","filesDrawerStyles","openFilesDrawer","setOpenFilesDrawer","openSettings","setOpenSettings","App","ThemeProvider","CssBaseline","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.538deb98.chunk.js","sourcesContent":["enum Month {\r\n  JANUARY,\r\n  FEBRUARY,\r\n  MARCH,\r\n  APRIL,\r\n  MAY,\r\n  JUNE,\r\n  JULY,\r\n  AUGUST,\r\n  SEPTEMBER,\r\n  OCTOBER,\r\n  NOVEMBER,\r\n  DECEMBER,\r\n}\r\n\r\nexport default Month;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#45aaf2\",\r\n      dark: \"#2d98da\",\r\n      contrastText: \"white\",\r\n    },\r\n    secondary: {\r\n      main: \"#fc5c65\",\r\n      dark: \"#eb3b5a\",\r\n      contrastText: \"white\",\r\n    },\r\n    text: {\r\n      primary: \"#778ca3\",\r\n      secondary: \"#B4BEC8\",\r\n    },\r\n    background: {\r\n      default: \"#F5F7F9\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","class HourlyLoadProfile {\r\n  hour: number;\r\n  kwdelSet: { fileName: string; kwdel: number }[];\r\n\r\n  constructor(hour: number) {\r\n    this.hour = hour;\r\n    this.kwdelSet = [];\r\n  }\r\n\r\n  addKwdel(kwdel: number, fileName: string): void {\r\n    this.kwdelSet.push({ fileName, kwdel });\r\n  }\r\n\r\n  removeKwdel(fileName: string) {\r\n    this.kwdelSet = this.kwdelSet.filter(\r\n      (kwdel) => kwdel.fileName !== fileName\r\n    );\r\n  }\r\n\r\n  getTotalKwdel(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwdel;\r\n    }\r\n    return total / this.kwdelSet.length;\r\n  }\r\n\r\n  getRawTotal(): number {\r\n    if (this.kwdelSet.length <= 0) return 0;\r\n    let total = 0;\r\n    for (let kwdel of this.kwdelSet) {\r\n      total += kwdel.kwdel;\r\n    }\r\n    return total;\r\n  }\r\n}\r\n\r\nexport default HourlyLoadProfile;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport HourlyLoadProfile from \"./HourlyLoadProfile\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\n\r\nclass DailyLoadProfile {\r\n  date: Date;\r\n  hourlyLoadProfiles: HourlyLoadProfile[];\r\n  max: { kwdel: number; hour: number };\r\n  sum: number;\r\n\r\n  constructor(date: Date) {\r\n    this.date = date;\r\n    this.hourlyLoadProfiles = this.buildHourlyLoadProfiles();\r\n    this.max = { kwdel: 0, hour: 0 };\r\n    this.sum = 0;\r\n  }\r\n\r\n  private buildHourlyLoadProfiles() {\r\n    return [...Array(24).keys()].map((hour) => {\r\n      return new HourlyLoadProfile(hour);\r\n    });\r\n  }\r\n\r\n  addLoadProfileData(rawData: LoadProfile_Raw) {\r\n    this.hourlyLoadProfiles[rawData.hour].addKwdel(\r\n      rawData.kwdel,\r\n      rawData.fileName\r\n    );\r\n  }\r\n\r\n  removeLoadProfileData(fileName: string) {\r\n    this.hourlyLoadProfiles.forEach((hourloadProfile) => {\r\n      hourloadProfile.removeKwdel(fileName);\r\n    });\r\n  }\r\n\r\n  genMaxAndSum() {\r\n    let maxKwdel = 0;\r\n    let hour = 1;\r\n    let sum = 0;\r\n\r\n    for (let hourlyLoadProfile of this.hourlyLoadProfiles) {\r\n      let kwdel = hourlyLoadProfile.getTotalKwdel();\r\n      sum += kwdel;\r\n      if (kwdel > maxKwdel) {\r\n        hour = hourlyLoadProfile.hour;\r\n        maxKwdel = kwdel;\r\n      }\r\n    }\r\n    this.max = { kwdel: maxKwdel, hour };\r\n    this.sum = sum;\r\n    return { max: this.max, sum: this.sum };\r\n  }\r\n}\r\n\r\nexport default DailyLoadProfile;\r\n","import { AppBar, Box } from \"@material-ui/core\";\r\nimport { Folder, Settings } from \"@material-ui/icons\";\r\nimport { ToggleButtonGroup } from \"@material-ui/lab\";\r\nimport StyledToggleButton from \"./StyledToggleButton\";\r\n\r\nimport useStyles from \"./use-styles\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\ntype ToolbarProps = {\r\n  onSettingsToggled: () => void;\r\n  onSettingsUntoggled: () => void;\r\n  onFilesToggled: () => void;\r\n  onFilesUntoggled: () => void;\r\n};\r\n\r\nenum ToggleValues {\r\n  FILES = \"files\",\r\n  SETTINGS = \"settings\",\r\n  NONE = \"\",\r\n}\r\n\r\nconst Toolbar: React.FC<ToolbarProps> = ({\r\n  onFilesToggled,\r\n  onSettingsToggled,\r\n  onSettingsUntoggled,\r\n  onFilesUntoggled,\r\n  ...others\r\n}) => {\r\n  const [toggledButton, setToggledButton] = useState<string>(\r\n    ToggleValues.FILES\r\n  );\r\n  const [otherToggledButton, setOtherToggledButton] = useState<string>(\r\n    ToggleValues.NONE\r\n  );\r\n\r\n  function handleToggleChange(\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newToggle: string\r\n  ) {\r\n    console.log({\r\n      method: \"handleToggleChange()\",\r\n      params: { newToggle },\r\n    });\r\n\r\n    const prevToggled = toggledButton;\r\n    setToggledButton(newToggle);\r\n    if (newToggle === ToggleValues.FILES) {\r\n      onFilesToggled();\r\n    } else if (prevToggled === ToggleValues.FILES) {\r\n      onFilesUntoggled();\r\n    }\r\n  }\r\n\r\n  function handleOtherToggleChange(\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newToggle: string\r\n  ) {\r\n    console.log({\r\n      method: \"handleOtherToggleChange()\",\r\n      params: { newToggle },\r\n    });\r\n\r\n    const prevToggled = otherToggledButton;\r\n    setOtherToggledButton(newToggle);\r\n    if (newToggle === ToggleValues.SETTINGS) {\r\n      onSettingsToggled();\r\n    } else if (prevToggled === ToggleValues.SETTINGS) {\r\n      onSettingsUntoggled();\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar\r\n      elevation={4}\r\n      className={classes.root}\r\n      position=\"static\"\r\n      color=\"inherit\"\r\n    >\r\n      <Box className={classes.container}>\r\n        <Box className={classes.toggleButtonsContainer}>\r\n          <ToggleButtonGroup\r\n            onChange={handleToggleChange}\r\n            value={toggledButton}\r\n            exclusive\r\n          >\r\n            <StyledToggleButton value={ToggleValues.FILES}>\r\n              <Folder />\r\n            </StyledToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box className={classes.otherButtonsContainer}>\r\n          <ToggleButtonGroup\r\n            onChange={handleOtherToggleChange}\r\n            value={otherToggledButton}\r\n            exclusive\r\n          >\r\n            <StyledToggleButton value={ToggleValues.SETTINGS}>\r\n              <Settings />\r\n            </StyledToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import moment from \"moment\";\r\nimport { Month } from \"../enums\";\r\n\r\nclass BillingPeriod {\r\n  month: number;\r\n  year: number;\r\n  startDate: Date;\r\n  enddDate: Date;\r\n\r\n  constructor(month: number, year: number) {\r\n    this.month = month;\r\n    this.year = year;\r\n    this.startDate = this.getStartDate();\r\n    this.enddDate = this.getEndDate();\r\n  }\r\n\r\n  private getStartDate() {\r\n    let startMonth = this.month === 1 ? 12 : this.month - 1;\r\n    let startYear = this.month === 1 ? this.year - 1 : this.year;\r\n    return moment(`${startMonth}/26/${startYear}`, \"MM/DD/YYYY\").toDate();\r\n  }\r\n\r\n  private getEndDate() {\r\n    return moment(`${this.month}/25/${this.year}`, \"MM/DD/YYYY\").toDate();\r\n  }\r\n\r\n  equalsTo(billingPeriod: BillingPeriod): boolean {\r\n    if (\r\n      this.month === null ||\r\n      billingPeriod == null ||\r\n      billingPeriod.month === null\r\n    ) {\r\n      return false;\r\n    }\r\n    return (\r\n      this.month === billingPeriod.month && this.year === billingPeriod.year\r\n    );\r\n  }\r\n\r\n  toString() {\r\n    return `${Month[this.month - 1]} ${this.year}`;\r\n  }\r\n}\r\n\r\nexport default BillingPeriod;\r\n","import BillingPeriod from \"../../common/BillingPeriod\";\r\nimport { Month } from \"../../enums\";\r\n\r\nclass LoadProfile_Raw {\r\n  kwdel: number;\r\n  hour: number;\r\n  day: number;\r\n  month: Month;\r\n  year: number;\r\n  minute: number;\r\n  meteringPoint: string;\r\n  row: number;\r\n  billingPeriod: BillingPeriod;\r\n  fileName: string;\r\n\r\n  constructor(\r\n    kwdel: number,\r\n    day: number,\r\n    month: Month,\r\n    year: number,\r\n    hour: number,\r\n    minute: number,\r\n    meteringPoint: string,\r\n    row: number,\r\n    fileName: string = \"\"\r\n  ) {\r\n    this.kwdel = kwdel;\r\n    this.day = day;\r\n    this.hour = hour;\r\n    this.month = month;\r\n    this.year = year;\r\n    this.minute = minute;\r\n    this.meteringPoint = meteringPoint;\r\n    this.row = row;\r\n    this.fileName = fileName;\r\n    if (this.hour === 0 && this.minute === 0) {\r\n      this.hour = 23;\r\n      this.minute = 59;\r\n      if (this.day - 1 <= 0) {\r\n        let date = new Date(`${this.year}/${this.month}/${this.day}`);\r\n        date.setDate(date.getDate() - 1);\r\n        this.day = date.getDate();\r\n        this.month = date.getMonth() + 1;\r\n        this.year = date.getFullYear();\r\n      } else {\r\n        this.day--;\r\n      }\r\n    }\r\n    let billingMonth = this.getBillingMonth({\r\n      month: this.month,\r\n      day: this.day,\r\n      hour: this.hour,\r\n      minute: this.minute,\r\n    });\r\n\r\n    this.billingPeriod = new BillingPeriod(billingMonth, this.year);\r\n\r\n    if (this.minute === 0) {\r\n      this.hour--;\r\n      if (this.hour < 0) {\r\n        this.hour = 23;\r\n      }\r\n    }\r\n  }\r\n\r\n  getBillingMonth({\r\n    month,\r\n    day,\r\n    minute,\r\n    hour,\r\n  }: {\r\n    month: number;\r\n    day: number;\r\n    minute: number;\r\n    hour: number;\r\n  }) {\r\n    let billingMonth = month;\r\n    if (day >= 26) {\r\n      if (!(hour === 0 && minute === 0 && day === 26)) {\r\n        billingMonth = ++billingMonth % 12;\r\n        if (billingMonth === 0) {\r\n          billingMonth = 12;\r\n        }\r\n      }\r\n    }\r\n    return billingMonth;\r\n  }\r\n}\r\n\r\nexport default LoadProfile_Raw;\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport DailyLoadProfile from \"./DailyLoadProfile\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\n\r\nclass LoadProfile {\r\n  meteringPoint: string;\r\n  dailyLoadProfiles: Map<string, DailyLoadProfile>;\r\n  max: LoadProfileMax;\r\n  sum: LoadProfileSum;\r\n\r\n  constructor(meteringPoint: string) {\r\n    this.meteringPoint = meteringPoint;\r\n    this.dailyLoadProfiles = new Map();\r\n    this.max = { kwdel: 0, hour: 1, meteringPoint: \"\", date: new Date() };\r\n    this.sum = { kwdel: 0, meteringPoint: \"\" };\r\n  }\r\n\r\n  addLoadProfileData(rawData: LoadProfile_Raw, dateString: string) {\r\n    if (!this.dailyLoadProfiles.has(dateString)) {\r\n      this.dailyLoadProfiles.set(\r\n        dateString,\r\n        new DailyLoadProfile(new Date(dateString))\r\n      );\r\n    }\r\n    this.dailyLoadProfiles.get(dateString)?.addLoadProfileData(rawData);\r\n  }\r\n\r\n  removeLoadPRofileData(fileName: string) {\r\n    this.dailyLoadProfiles.forEach((dailyLoadProfile) => {\r\n      dailyLoadProfile.removeLoadProfileData(fileName);\r\n    });\r\n  }\r\n\r\n  getDailyLoadProfile(dateString: string): DailyLoadProfile {\r\n    return this.dailyLoadProfiles.has(dateString)\r\n      ? (this.dailyLoadProfiles.get(dateString) as DailyLoadProfile)\r\n      : new DailyLoadProfile(new Date(dateString));\r\n  }\r\n\r\n  genMaxAndSum() {\r\n    let max = 0;\r\n    let sum = 0;\r\n    let maxHour = 1;\r\n    let maxDate = new Date();\r\n\r\n    for (let dailyLoadProfile of this.dailyLoadProfiles.values()) {\r\n      const dailyMax = dailyLoadProfile.max;\r\n      const dailySum = dailyLoadProfile.sum;\r\n      if (dailyMax.kwdel > max) {\r\n        max = dailyMax.kwdel;\r\n        maxHour = dailyMax.hour;\r\n        maxDate = dailyLoadProfile.date;\r\n        sum += dailySum;\r\n      }\r\n    }\r\n\r\n    this.max = {\r\n      kwdel: max,\r\n      hour: maxHour,\r\n      date: maxDate,\r\n      meteringPoint: this.meteringPoint,\r\n    };\r\n    this.sum = { kwdel: sum, meteringPoint: this.meteringPoint };\r\n    return { max: this.max, sum: this.sum };\r\n  }\r\n}\r\n\r\nexport default LoadProfile;\r\n","export default class CoincidentPeak {\r\n  meteringPoint: string;\r\n  kwdel: number;\r\n  hour: number;\r\n  date: Date;\r\n\r\n  constructor() {\r\n    this.meteringPoint = \"\";\r\n    this.kwdel = 0;\r\n    this.hour = 0;\r\n    this.date = new Date();\r\n  }\r\n}\r\n","import LoadProfile_Raw from \"./LoadProfile_Raw\";\r\nimport LoadProfile from \"./LoadProfile\";\r\nimport BillingPeriod from \"../../common/BillingPeriod\";\r\nimport { LoadProfileMax, LoadProfileSum } from \"../types\";\r\nimport { CoincidentPeak } from \"./others\";\r\nimport HourlyLoadProfile from \"./HourlyLoadProfile\";\r\nimport DailyLoadProfile from \"./DailyLoadProfile\";\r\n\r\nclass MonthlyLoadProfile {\r\n  loadProfiles: Map<string, LoadProfile>;\r\n  billingPeriod: BillingPeriod;\r\n  dateStrings: Set<string>;\r\n  coincidentPeak: CoincidentPeak;\r\n  nonCoincidentPeak: number;\r\n  diversityFactor: number;\r\n  loadProfilesMax: LoadProfileMax[];\r\n  loadProfilesSum: LoadProfileSum[];\r\n  totalLoadpRofile: LoadProfile;\r\n  chartData: Map<string, any>;\r\n\r\n  constructor(billingPeriod: BillingPeriod) {\r\n    this.billingPeriod = billingPeriod;\r\n    this.loadProfiles = new Map();\r\n    this.dateStrings = new Set();\r\n    this.totalLoadpRofile = new LoadProfile(\"Total\");\r\n    this.coincidentPeak = new CoincidentPeak();\r\n    this.nonCoincidentPeak = 0;\r\n    this.diversityFactor = 0;\r\n    this.loadProfilesMax = [];\r\n    this.loadProfilesSum = [];\r\n    this.chartData = new Map();\r\n  }\r\n\r\n  addData(rawData: LoadProfile_Raw) {\r\n    let key = rawData.meteringPoint;\r\n    let dateString = `${rawData.month}/${rawData.day}/${rawData.year}`;\r\n\r\n    if (!this.dateStrings.has(dateString)) {\r\n      this.dateStrings.add(dateString);\r\n    }\r\n\r\n    if (!this.loadProfiles.has(key)) {\r\n      this.loadProfiles.set(key, new LoadProfile(key));\r\n    }\r\n    this.loadProfiles.get(key)?.addLoadProfileData(rawData, dateString);\r\n  }\r\n\r\n  removeData(fileName: string, meteringPoints: string[]) {\r\n    meteringPoints.forEach((key) => {\r\n      if (this.loadProfiles.has(key)) {\r\n        let loadProfile = this.loadProfiles.get(key);\r\n        loadProfile?.removeLoadPRofileData(fileName);\r\n      }\r\n    });\r\n  }\r\n\r\n  private resetData() {\r\n    this.nonCoincidentPeak = 0;\r\n    this.loadProfilesMax = [];\r\n    this.loadProfilesSum = [];\r\n    this.totalLoadpRofile = new LoadProfile(\"Total\");\r\n    this.chartData = new Map();\r\n  }\r\n\r\n  private extractDataThenAddToTotal(\r\n    hourlyLoadProfile: HourlyLoadProfile,\r\n    dailyLoadProfile: DailyLoadProfile\r\n  ) {\r\n    let rawData = new LoadProfile_Raw(\r\n      hourlyLoadProfile.getTotalKwdel(),\r\n      dailyLoadProfile.date.getDate(),\r\n      dailyLoadProfile.date.getMonth() + 1,\r\n      dailyLoadProfile.date.getFullYear(),\r\n      hourlyLoadProfile.hour,\r\n      3,\r\n      \"Total\",\r\n      0\r\n    );\r\n    let dateString = `${rawData.month}/${rawData.day}/${rawData.year}`;\r\n    this.totalLoadpRofile.addLoadProfileData(rawData, dateString);\r\n  }\r\n\r\n  private extractDailyLoadProfileTotalKwdelThenAddToData(\r\n    dailyLoadProfile: DailyLoadProfile,\r\n    loadProfile: LoadProfile\r\n  ) {\r\n    let dateKey = `${\r\n      dailyLoadProfile.date.getMonth() + 1\r\n    }/${dailyLoadProfile.date.getDate()}`;\r\n\r\n    if (!this.chartData.has(dateKey)) {\r\n      let obj: any = { date: dateKey };\r\n      obj[`${loadProfile.meteringPoint}`] = dailyLoadProfile.sum;\r\n      this.chartData.set(dateKey, obj);\r\n    } else {\r\n      let obj = this.chartData.get(dateKey);\r\n      obj[`${loadProfile.meteringPoint}`] = dailyLoadProfile.sum;\r\n    }\r\n  }\r\n\r\n  initOtherDetails() {\r\n    this.resetData();\r\n\r\n    for (let loadProfile of this.loadProfiles.values()) {\r\n      for (let dailyLp of [...loadProfile.dailyLoadProfiles.values()]) {\r\n        for (let hourlyLp of dailyLp.hourlyLoadProfiles) {\r\n          this.extractDataThenAddToTotal(hourlyLp, dailyLp);\r\n        }\r\n        dailyLp.genMaxAndSum();\r\n        this.extractDailyLoadProfileTotalKwdelThenAddToData(\r\n          dailyLp,\r\n          loadProfile\r\n        );\r\n      }\r\n      const { max, sum } = loadProfile.genMaxAndSum();\r\n\r\n      if (sum.kwdel === 0) {\r\n        this.loadProfiles.delete(loadProfile.meteringPoint);\r\n      } else {\r\n        this.loadProfilesMax.push(max);\r\n        this.loadProfilesSum.push(sum);\r\n        this.nonCoincidentPeak += max.kwdel;\r\n      }\r\n    }\r\n\r\n    for (let dlp of this.totalLoadpRofile.dailyLoadProfiles.values()) {\r\n      for (let hlp of dlp.hourlyLoadProfiles) {\r\n        if (hlp.getRawTotal() > this.coincidentPeak.kwdel) {\r\n          this.coincidentPeak.kwdel = hlp.getRawTotal();\r\n          this.coincidentPeak.date = dlp.date;\r\n          this.coincidentPeak.hour = hlp.hour;\r\n          this.coincidentPeak.meteringPoint = \"Total\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.diversityFactor = this.nonCoincidentPeak / this.coincidentPeak.kwdel;\r\n\r\n    console.log({\r\n      info: \"max and sum\",\r\n      max: this.loadProfilesMax,\r\n      sum: this.loadProfilesSum,\r\n      coincidental: this.coincidentPeak,\r\n      nonCoincidental: this.nonCoincidentPeak,\r\n      diversityFactor: this.diversityFactor,\r\n      totalLoadProfile: this.totalLoadpRofile,\r\n      chartData: this.chartData,\r\n    });\r\n  }\r\n}\r\n\r\nexport default MonthlyLoadProfile;\r\n","class Stack<T> {\r\n  data: T[];\r\n  top: number;\r\n\r\n  constructor(stack?: Stack<T>) {\r\n    this.data = [];\r\n    this.top = 0;\r\n\r\n    if (stack) {\r\n      this.data = stack.data;\r\n      this.top = stack.top;\r\n    }\r\n  }\r\n\r\n  push(element: T) {\r\n    this.data[this.top] = element;\r\n    this.top = this.top + 1;\r\n  }\r\n\r\n  length() {\r\n    return this.top;\r\n  }\r\n\r\n  peek() {\r\n    return this.data[this.top - 1];\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.top === 0;\r\n  }\r\n\r\n  pop() {\r\n    if (this.isEmpty() === false) {\r\n      this.top = this.top - 1;\r\n      return this.data.pop() as T; // removes the last element\r\n    }\r\n  }\r\n}\r\n\r\nexport default Stack;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {\r\n  LoadProfile,\r\n  LoadProfile_Raw,\r\n  MonthlyLoadProfile,\r\n} from \"../loadprofile/objects\";\r\nimport Stack from \"../common/Stack\";\r\n\r\nexport type DeleteLoadpRofileInfo = {\r\n  fileName: string;\r\n  meteringPoints: string[];\r\n};\r\n\r\nconst LoadProfileContext = createContext<{\r\n  updateLoadProfiles: (rawDatas: LoadProfile_Raw[]) => void;\r\n  monthlyLoadProfiles: Map<string, MonthlyLoadProfile>;\r\n  working: boolean;\r\n  deleteLoadProfiles: (deleteLoadProfileInfo: DeleteLoadpRofileInfo) => void;\r\n}>({\r\n  updateLoadProfiles: (rawDatas) => {},\r\n  monthlyLoadProfiles: new Map(),\r\n  working: false,\r\n  deleteLoadProfiles: (deleteLoadProfileInfo) => {},\r\n});\r\n\r\ntype LoadProfileContextProviderProps = {};\r\nconst LoadProfileContextProvider: React.FunctionComponent<LoadProfileContextProviderProps> = (\r\n  props\r\n) => {\r\n  const { children, ...others } = props;\r\n  const [monthlyLoadProfiles, setMonthlyLoadProfiles] = useState(\r\n    new Map<string, MonthlyLoadProfile>()\r\n  );\r\n\r\n  const [buffer, setBuffer] = useState<\r\n    Stack<LoadProfile_Raw[] | DeleteLoadpRofileInfo>\r\n  >(new Stack());\r\n  const [working, setWorking] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"MonthlyLoadProfiles State Updated\");\r\n    console.log(monthlyLoadProfiles);\r\n  }, [monthlyLoadProfiles]);\r\n\r\n  function updateLoadProfiles(rawDatas: LoadProfile_Raw[]) {\r\n    console.log(\"Updating load profile datas in context....\");\r\n\r\n    setBuffer((prevBuffer) => {\r\n      let newbuffer = new Stack(prevBuffer);\r\n      newbuffer.push(rawDatas);\r\n      return newbuffer;\r\n    });\r\n  }\r\n\r\n  function deleteLoadProfiles(deleteLaodProfileInfo: DeleteLoadpRofileInfo) {\r\n    setBuffer((prevBuffer) => {\r\n      let newbuffer = new Stack(prevBuffer);\r\n      newbuffer.push(deleteLaodProfileInfo);\r\n      return newbuffer;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (working) return;\r\n    if (buffer.isEmpty()) {\r\n      setWorking(false);\r\n      return;\r\n    }\r\n\r\n    let newBuffer = new Stack(buffer);\r\n    let data = newBuffer.pop();\r\n    if (data) {\r\n      setWorking(true);\r\n\r\n      if (data instanceof Array) {\r\n        console.log(\"Data instance of ARRRRAAAAY....\");\r\n        addRawDatasToMonthlyLoadProfiles(data).then((result) => {\r\n          setMonthlyLoadProfiles(result);\r\n          setWorking(false);\r\n          setBuffer(newBuffer);\r\n        });\r\n      } else {\r\n        console.log(\"Data instance of ARRRRAAAAY....\");\r\n        deleteDataFromMonthlyLoadProfiles(\r\n          data.fileName,\r\n          data.meteringPoints\r\n        ).then((result) => {\r\n          setMonthlyLoadProfiles(result);\r\n          setWorking(false);\r\n          setBuffer(newBuffer);\r\n        });\r\n      }\r\n    }\r\n  }, [buffer]);\r\n\r\n  function addRawDatasToMonthlyLoadProfiles(rawDatas: LoadProfile_Raw[]) {\r\n    return new Promise<Map<string, MonthlyLoadProfile>>((resolve, reject) => {\r\n      console.log(\"Processing rawDatas\");\r\n      let newMonthlyLoadProfiles = new Map(monthlyLoadProfiles);\r\n      for (let rawData of rawDatas) {\r\n        let key = `${rawData.billingPeriod.month}-${rawData.year}`;\r\n        if (!newMonthlyLoadProfiles.has(key)) {\r\n          newMonthlyLoadProfiles.set(\r\n            key,\r\n            new MonthlyLoadProfile(rawData.billingPeriod)\r\n          );\r\n        }\r\n        newMonthlyLoadProfiles.get(key)?.addData(rawData);\r\n      }\r\n      newMonthlyLoadProfiles.forEach((mlp) => mlp.initOtherDetails());\r\n      resolve(newMonthlyLoadProfiles);\r\n    });\r\n  }\r\n\r\n  function deleteDataFromMonthlyLoadProfiles(\r\n    fileName: string,\r\n    meteringPoints: string[]\r\n  ) {\r\n    return new Promise<Map<string, MonthlyLoadProfile>>((resolve, reject) => {\r\n      console.log(\"DELETING LAODP ROFILESS\");\r\n      let newMonthlyLoadProfiles = new Map(monthlyLoadProfiles);\r\n      for (let key of newMonthlyLoadProfiles.keys()) {\r\n        let mpl = newMonthlyLoadProfiles.get(key);\r\n        mpl?.removeData(fileName, meteringPoints);\r\n      }\r\n      newMonthlyLoadProfiles.forEach((mlp) => {\r\n        mlp.initOtherDetails();\r\n        if (mlp.nonCoincidentPeak === 0) {\r\n          let key = `${mlp.billingPeriod.month}-${mlp.billingPeriod.year}`;\r\n          newMonthlyLoadProfiles.delete(key);\r\n        }\r\n      });\r\n      resolve(newMonthlyLoadProfiles);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <LoadProfileContext.Provider\r\n      value={{\r\n        updateLoadProfiles,\r\n        monthlyLoadProfiles,\r\n        deleteLoadProfiles,\r\n        working,\r\n      }}\r\n    >\r\n      {children}\r\n    </LoadProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LoadProfileContextProvider;\r\nexport { LoadProfileContext };\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport { ToggleButton } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\n\r\ntype StyledToggleButtonProps = {\r\n  value?: string;\r\n};\r\n\r\nconst StyledToggleButton: React.FunctionComponent<StyledToggleButtonProps> = ({\r\n  value,\r\n  children,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ToggleButton classes={{ root: classes.root }} value={value} {...others}>\r\n      {children}\r\n    </ToggleButton>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    border: \"none\",\r\n    borderRadius: 0,\r\n    \"&.Mui-selected\": {\r\n      backgroundColor: theme.palette.background.default,\r\n      color: theme.palette.primary.main,\r\n    },\r\n    \"&:hover, &.Mui-selected:hover\": {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    selected: {},\r\n  },\r\n}));\r\n\r\nexport default StyledToggleButton;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: 50,\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.drawer + 10,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  toggleButtonsContainer: {},\r\n  otherButtonsContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { LoadProfileSettings } from \"./types/LoadProfileSettings\";\r\nenum LoadProfileStorageKey {\r\n  KWDEL = \"lp_kwdelCol\",\r\n  DATE = \"lp_dateCol\",\r\n  TIME = \"lp_timeCol\",\r\n  DATE_FORMAT = \"lp_dateFormat\",\r\n  TIME_FORMAT = \"lp_timeFormat\",\r\n}\r\n\r\nfunction loadSettings(): LoadProfileSettings {\r\n  let kwdelCol = Number(\r\n    localStorage.getItem(LoadProfileStorageKey.KWDEL) || \"1\"\r\n  );\r\n  let dateCol = Number(localStorage.getItem(LoadProfileStorageKey.DATE) || \"2\");\r\n  let timeCol = Number(localStorage.getItem(LoadProfileStorageKey.TIME) || \"3\");\r\n  let dateFormat =\r\n    localStorage.getItem(LoadProfileStorageKey.DATE_FORMAT) || \"MM/DD/YYYY\";\r\n  let timeFormat =\r\n    localStorage.getItem(LoadProfileStorageKey.TIME_FORMAT) || \"HH:mm\";\r\n  return {\r\n    kwdelCol,\r\n    dateCol,\r\n    timeCol,\r\n    dateFormat,\r\n    timeFormat,\r\n  };\r\n}\r\n\r\nfunction saveSettings(settings: LoadProfileSettings): void {\r\n  if (settings.kwdelCol) {\r\n    localStorage.setItem(\r\n      LoadProfileStorageKey.KWDEL,\r\n      String(settings.kwdelCol)\r\n    );\r\n  }\r\n\r\n  if (settings.timeCol) {\r\n    localStorage.setItem(LoadProfileStorageKey.TIME, String(settings.timeCol));\r\n  }\r\n\r\n  if (settings.dateCol) {\r\n    localStorage.setItem(LoadProfileStorageKey.DATE, String(settings.dateCol));\r\n  }\r\n\r\n  if (settings.dateFormat) {\r\n    localStorage.setItem(\r\n      LoadProfileStorageKey.DATE_FORMAT,\r\n      String(settings.dateFormat)\r\n    );\r\n  }\r\n\r\n  if (settings.timeFormat) {\r\n    localStorage.setItem(\r\n      LoadProfileStorageKey.TIME_FORMAT,\r\n      String(settings.timeFormat)\r\n    );\r\n  }\r\n}\r\n\r\nconst LoadProfileStorage = {\r\n  loadSettings,\r\n  saveSettings,\r\n};\r\n\r\nexport default LoadProfileStorage;\r\n","import Toolbar from \"./Toolbar\";\r\n\r\nexport default Toolbar;\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      position: \"static\",\r\n      borderLeft: `1px solid ${theme.palette.divider}`,\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useStyles;\r\nexport { drawerWidth };\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\n\r\ntype CustomAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n  panelName: string;\r\n  title: string;\r\n  render?: any;\r\n};\r\n\r\nconst CustomAccordion: React.FunctionComponent<CustomAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  panelName,\r\n  title,\r\n  render,\r\n  children,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function handlePanelChange(\r\n    event: React.ChangeEvent<{}>,\r\n    newExpanded: boolean\r\n  ) {\r\n    onPanelChange(newExpanded ? panelName : \"\");\r\n  }\r\n\r\n  return (\r\n    <Accordion\r\n      className={classes.accordion}\r\n      square\r\n      expanded={expandedPanel === panelName}\r\n      onChange={handlePanelChange}\r\n    >\r\n      <AccordionSummary\r\n        className={classes.accordionSummary}\r\n        expandIcon={<ExpandMore />}\r\n      >\r\n        <Typography className={classes.accordionTitle}>{title}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.accordionDetails}>\r\n        {children}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  accordion: {\r\n    border: \"1px solid rgba(0, 0, 0, .125)\",\r\n    boxShadow: \"none\",\r\n    \"&:not(:last-child)\": {\r\n      borderBottom: 0,\r\n    },\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n    \"&$expanded\": {\r\n      margin: \"auto\",\r\n    },\r\n    expanded: {},\r\n  },\r\n\r\n  accordionSummary: {\r\n    borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\r\n    marginBottom: -1,\r\n    minHeight: 30,\r\n    \"&$expanded\": {\r\n      minHeight: 30,\r\n      backgroundColor: \"black\",\r\n    },\r\n    expanded: {},\r\n  },\r\n  content: {\r\n    \"&$expanded\": {\r\n      margin: \"12px 0\",\r\n    },\r\n  },\r\n  accordionTitle: {\r\n    fontSize: \"1rem\",\r\n    asdf: {},\r\n  },\r\n  expanded: {},\r\n  accordionDetails: {\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: \"5px\",\r\n    position: \"relative\",\r\n  },\r\n}));\r\n\r\nexport default CustomAccordion;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ErrorOutline } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\n\r\ntype FilecardProps = {\r\n  file: File;\r\n  progressInfo: string;\r\n  progress: number;\r\n  errors?: string[];\r\n  onRemoveFile: () => void;\r\n};\r\n\r\nconst FileCard: React.FunctionComponent<FilecardProps> = ({\r\n  file,\r\n  progress,\r\n  progressInfo,\r\n  errors = [],\r\n  onRemoveFile,\r\n  ...others\r\n}) => {\r\n  const classes = cardStyles();\r\n  const [openError, setOpenError] = useState(false);\r\n\r\n  function handleSeeErrorsClick() {\r\n    console.log(errors);\r\n    setOpenError(true);\r\n  }\r\n\r\n  function handleCloseErrorDialog() {\r\n    setOpenError(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <div className={classes.content}>\r\n          <Typography className={classes.filename}>{file.name}</Typography>\r\n          <div className={classes.progress_content}>\r\n            <LinearProgress\r\n              value={progress}\r\n              variant={\r\n                progress === 0 || progress === 100\r\n                  ? \"determinate\"\r\n                  : \"indeterminate\"\r\n              }\r\n            />\r\n            <Typography className={classes.progress_text}>\r\n              {progressInfo}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.action}>\r\n          {errors.length !== 0 && (\r\n            <Button\r\n              className={classes.button}\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              startIcon={<ErrorOutline color=\"error\" />}\r\n              onClick={handleSeeErrorsClick}\r\n            >\r\n              see errors\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className={classes.button}\r\n            onClick={onRemoveFile}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n          >\r\n            Remove\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Dialog open={openError} onClose={handleCloseErrorDialog}>\r\n        <DialogTitle>\r\n          <Typography variant=\"h6\" color=\"error\">\r\n            Errors\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            {file.name}\r\n          </Typography>\r\n          <Divider />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box overflow=\"auto\" padding=\"5px 25px\">\r\n            {errors.map((error, index) => {\r\n              return (\r\n                <div key={index} className={classes.error_container}>\r\n                  <Typography\r\n                    component=\"p\"\r\n                    className={classes.error_text}\r\n                    key={`${index}~error`}\r\n                  >\r\n                    {error}\r\n                  </Typography>\r\n                  <Divider />\r\n                </div>\r\n              );\r\n            })}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst cardStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.mobileStepper,\r\n    maxWidth: \"100%\",\r\n    fontSize: \"0.8rem\",\r\n    boxSizing: \"border-box\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: theme.shape.borderRadius,\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    padding: 10,\r\n    overflowWrap: \"break-word\",\r\n    wordWrap: \"break-word\",\r\n  },\r\n  filename: {\r\n    fontSize: \"1em\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  progress_text: {\r\n    fontSize: \"0.7em\",\r\n    color: theme.palette.text.secondary,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"5px\",\r\n    justifyContent: \"center\",\r\n  },\r\n  progress_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"3px\",\r\n  },\r\n  action: {},\r\n  button: {\r\n    textTransform: \"none\",\r\n  },\r\n  error_container: {\r\n    maxWidth: \"100%\",\r\n    width: \"550px\",\r\n  },\r\n  error_text: {\r\n    fontSize: \"0.9rem\",\r\n    padding: \"10px 5px\",\r\n    whiteSpace: \"pre-wrap\",\r\n  },\r\n}));\r\n\r\nexport default FileCard;\r\n","class InvalidFileError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n\r\nexport default InvalidFileError;\r\n","import { WorkBook } from \"xlsx/types\";\r\nimport XLSX from \"xlsx\";\r\nimport InvalidFileError from \"../../errors/InvalidFileError\";\r\n\r\nasync function extractWorkbookFromFile(file: File): Promise<WorkBook> {\r\n  return new Promise<WorkBook>((resolve, reject) => {\r\n    console.log(\"FileUTils: Timeout wait for 10 secs....\");\r\n    let fileExtension: string = file.name.split(\".\")[1];\r\n    console.log({\r\n      method: \"extractWorkbookFromFile()\",\r\n      parameteres: { file },\r\n      fileTypeSplit: file.name.split(\".\"),\r\n      fileExtension,\r\n    });\r\n\r\n    if (fileExtension !== \"xlsx\") {\r\n      reject(\r\n        new InvalidFileError(\r\n          `Invalid file: expected: .xlsx received: ${fileExtension}`\r\n        )\r\n      );\r\n    }\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (event: ProgressEvent<FileReader>) {\r\n      try {\r\n        let data = new Uint8Array(event.target?.result as ArrayBuffer);\r\n        let workbook = XLSX.read(data, { type: \"array\", cellDates: true });\r\n        resolve(workbook);\r\n      } catch (error) {\r\n        reject(new Error(error));\r\n      }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  });\r\n}\r\n\r\nconst FileUtil = {\r\n  extractWorkbookFromFile,\r\n};\r\n\r\nexport default FileUtil;\r\n","enum Feeder {\r\n  TETUAN,\r\n  MERCEDES,\r\n  NORTHSIDE,\r\n  ZAMPEN,\r\n  GUIWAN,\r\n  TUMAGA,\r\n  ARENA_BLANCO,\r\n  PRESA,\r\n  SAN_JOSE,\r\n  CALARIAN,\r\n  BALIWASAN,\r\n  DEDICATED_LINE,\r\n  INTERCO,\r\n  CULIANAN,\r\n  CURUAN,\r\n  FISHING_PORT,\r\n  TALISAYAN,\r\n  LABUAN,\r\n  RECODO,\r\n  SINUNUC,\r\n  BIG_FISH,\r\n  TIN_CAN_ORIENTAL,\r\n  MEGA_FISHIN_CORP,\r\n  MEGA_FISHIN_CORP2,\r\n  PASONANCA,\r\n  SAN_ROQUE,\r\n  ACLEM,\r\n  GOVERNOR_ALVAREZ,\r\n  VETERANS_AVENUE,\r\n  NUNEZ,\r\n  STA_CATALINA,\r\n  RIO_HONDO,\r\n  GUARDIA_NACIONAL,\r\n  CAMPANER,\r\n  KCC_MALL,\r\n}\r\n\r\nexport default Feeder;\r\n","class Transformer {\r\n  static readonly HYOSUNG_20MVA = new Transformer(\r\n    \"HYOSUNG_20MVA\",\r\n    \"HYOSUNG PTX - 20MVA\",\r\n    \"TP99-8513\",\r\n    20\r\n  );\r\n  static readonly SHIHLIN_20MVA = new Transformer(\r\n    \"SHIHLIN_20MVA\",\r\n    \"SHIHLIN PTX - 20MVA\",\r\n    \"810014\",\r\n    20\r\n  );\r\n  static readonly SHIHLIN_10MVVA = new Transformer(\r\n    \"SHIHLIN_10MVVA \",\r\n    \"SHIHLIN PTX - 10MVA\",\r\n    \"T990113\",\r\n    10\r\n  );\r\n  static readonly SHIHLIN_5MVA = new Transformer(\r\n    \"SHIHLIN_5MVA\",\r\n    \"SHIHLIN PTX - 5MVA\",\r\n    \"\",\r\n    5\r\n  );\r\n  static readonly NANJING_20MVA = new Transformer(\r\n    \"NANJING_20MVA\",\r\n    \"NANJING PTX - 20MVA\",\r\n    \"610205\",\r\n    20\r\n  );\r\n  static readonly PRIME_MEIDEN_10MVA = new Transformer(\r\n    \"PRIME_MEIDEN_10MVA\",\r\n    \"PRIME MEIDEN PTX - 10MVA\",\r\n    \"\",\r\n    10\r\n  );\r\n  static readonly NEW_KOREA_10MVA = new Transformer(\r\n    \"NEW_KOREA_10MVA\",\r\n    \"NEW KOREA PTX - 10MVA\",\r\n    \"W910009\",\r\n    10\r\n  );\r\n  static readonly NEW_KOREA_5MVA = new Transformer(\r\n    \"NEW_KOREA_5MVA\",\r\n    \"NEW KOREA PTX - 5MVA\",\r\n    \"920194\",\r\n    5\r\n  );\r\n  static readonly CHANGZHOU_10MVA = new Transformer(\r\n    \"CHANGZHOU_10MVA\",\r\n    \"CHANGZHOU PTX - 10MVA\",\r\n    \"91-61-146\",\r\n    10\r\n  );\r\n  static readonly SHENDA_25MVA = new Transformer(\r\n    \"SHENDA_25MVA\",\r\n    \"SHENDA PTX - 25MVA\",\r\n    \"\",\r\n    25\r\n  );\r\n\r\n  key: string;\r\n  text: string;\r\n  serialNumber: string;\r\n  power: number;\r\n\r\n  private constructor(\r\n    key: string,\r\n    text: string,\r\n    serialNumber: string,\r\n    power: number\r\n  ) {\r\n    this.key = key;\r\n    this.text = text;\r\n    this.serialNumber = serialNumber;\r\n    this.power = power;\r\n  }\r\n\r\n  toString() {\r\n    return this.key;\r\n  }\r\n}\r\n\r\nexport default Transformer;\r\n","import Feeder from \"./Feeder\";\r\nimport Transformer from \"./Transformer\";\r\n\r\nclass SubstationItem {\r\n  transformer: Transformer;\r\n  feeders: Feeder[];\r\n\r\n  constructor(transformer: Transformer, feeders: Feeder[]) {\r\n    this.transformer = transformer;\r\n    this.feeders = feeders;\r\n  }\r\n}\r\n\r\nclass Substation {\r\n  static readonly PUTIK = new Substation(\"PUTIK\", \"PUTIK S/S\", [\r\n    new SubstationItem(Transformer.SHIHLIN_10MVVA, [\r\n      Feeder.GUIWAN,\r\n      Feeder.TUMAGA,\r\n      Feeder.ARENA_BLANCO,\r\n      Feeder.PRESA,\r\n    ]),\r\n    new SubstationItem(Transformer.HYOSUNG_20MVA, [\r\n      Feeder.TETUAN,\r\n      Feeder.MERCEDES,\r\n      Feeder.NORTHSIDE,\r\n      Feeder.ZAMPEN,\r\n    ]),\r\n  ]);\r\n  static readonly SANJOSE_GUSU = new Substation(\r\n    \"SAN JOSE GUSU\",\r\n    \"SAN JOSE GUSU S/S\",\r\n    [\r\n      new SubstationItem(Transformer.NANJING_20MVA, [\r\n        Feeder.SAN_JOSE,\r\n        Feeder.CALARIAN,\r\n        Feeder.BALIWASAN,\r\n        Feeder.DEDICATED_LINE,\r\n      ]),\r\n      new SubstationItem(Transformer.NEW_KOREA_10MVA, []),\r\n    ]\r\n  );\r\n  static readonly SANGALI = new Substation(\"SANGALI\", \"SANGALI S/S\", [\r\n    new SubstationItem(Transformer.PRIME_MEIDEN_10MVA, [\r\n      Feeder.CULIANAN,\r\n      Feeder.CURUAN,\r\n      Feeder.FISHING_PORT,\r\n    ]),\r\n  ]);\r\n  static readonly AYALA = new Substation(\"AYALA\", \"AYALA S/S\", [\r\n    new SubstationItem(Transformer.SHIHLIN_10MVVA, [\r\n      Feeder.TALISAYAN,\r\n      Feeder.LABUAN,\r\n    ]),\r\n  ]);\r\n\r\n  static readonly RECODO = new Substation(\"RECODO\", \"RECODO S/S\", [\r\n    new SubstationItem(Transformer.NEW_KOREA_10MVA, [Feeder.RECODO]),\r\n    new SubstationItem(Transformer.NEW_KOREA_5MVA, [Feeder.SINUNUC]),\r\n    new SubstationItem(Transformer.SHIHLIN_5MVA, []),\r\n  ]);\r\n  static readonly CABATANGAN = new Substation(\"CABATANGAN\", \"CABATANGAN S/S\", [\r\n    new SubstationItem(Transformer.CHANGZHOU_10MVA, [Feeder.PASONANCA]),\r\n    new SubstationItem(Transformer.PRIME_MEIDEN_10MVA, [Feeder.SAN_ROQUE]),\r\n  ]);\r\n  static readonly CAMANCHILI = new Substation(\"CAMANCHILI\", \"CAMANCHILI S/S\", [\r\n    new SubstationItem(Transformer.SHIHLIN_20MVA, [\r\n      Feeder.ACLEM,\r\n      Feeder.GOVERNOR_ALVAREZ,\r\n      Feeder.VETERANS_AVENUE,\r\n      Feeder.NUNEZ,\r\n    ]),\r\n    new SubstationItem(Transformer.SHENDA_25MVA, [\r\n      Feeder.STA_CATALINA,\r\n      Feeder.RIO_HONDO,\r\n      Feeder.GUARDIA_NACIONAL,\r\n      Feeder.CAMPANER,\r\n    ]),\r\n  ]);\r\n\r\n  key: string;\r\n  text: string;\r\n  substationItems: SubstationItem[];\r\n\r\n  private constructor(\r\n    key: string,\r\n    text: string,\r\n    substationItems: SubstationItem[]\r\n  ) {\r\n    this.key = key;\r\n    this.text = text;\r\n    this.substationItems = substationItems;\r\n  }\r\n\r\n  toStrting() {\r\n    return this.key;\r\n  }\r\n}\r\n\r\nexport default Substation;\r\n","import Feeder from \"./Feeder\";\r\nimport Substation from \"./Substation\";\r\n\r\nclass MeteringPoint {\r\n  static readonly MF3MPITZAMC01 = new MeteringPoint(\"MF3MPITZAMC01\", [\r\n    Substation.PUTIK,\r\n  ]);\r\n\r\n  static readonly MF3MPITZAMC02 = new MeteringPoint(\"MF3MPITZAMC02\", [\r\n    Substation.SANJOSE_GUSU,\r\n  ]);\r\n\r\n  static readonly MF3MPITZAMC03 = new MeteringPoint(\"MF3MPITZAMC03\", [\r\n    Substation.SANGALI,\r\n  ]);\r\n  static readonly MF3MPITZAMC04 = new MeteringPoint(\"MF3MPITZAMC04\", [\r\n    Substation.RECODO,\r\n    Substation.AYALA,\r\n  ]);\r\n  static readonly MF3MPITZAMC05 = new MeteringPoint(\"MF3MPITZAMC05\", [\r\n    Substation.CABATANGAN,\r\n  ]);\r\n  static readonly MF3MPITZAMC06 = new MeteringPoint(\"MF3MPITZAMC06\", []);\r\n  static readonly MF3MPITZAMC07 = new MeteringPoint(\"MF3MPITZAMC07\", [\r\n    Substation.CAMANCHILI,\r\n  ]);\r\n\r\n  key: string;\r\n  substations: Substation[];\r\n\r\n  private constructor(key: string, substations: Substation[]) {\r\n    this.key = key;\r\n    this.substations = substations;\r\n  }\r\n\r\n  toString() {\r\n    return this.key;\r\n  }\r\n\r\n  getFeeders() {\r\n    let feeders: Feeder[] = [];\r\n    for (let substation of this.substations) {\r\n      for (let substationItem of substation.substationItems) {\r\n        feeders = [...feeders, ...substationItem.feeders];\r\n      }\r\n    }\r\n    return feeders;\r\n  }\r\n\r\n  static getMeteringPoint(meteringPoint: string): MeteringPoint | null {\r\n    switch (meteringPoint.toUpperCase()) {\r\n      case this.MF3MPITZAMC01.key:\r\n        return this.MF3MPITZAMC01;\r\n      case this.MF3MPITZAMC02.key:\r\n        return this.MF3MPITZAMC02;\r\n      case this.MF3MPITZAMC03.key:\r\n        return this.MF3MPITZAMC03;\r\n      case this.MF3MPITZAMC04.key:\r\n        return this.MF3MPITZAMC04;\r\n      case this.MF3MPITZAMC05.key:\r\n        return this.MF3MPITZAMC05;\r\n      case this.MF3MPITZAMC06.key:\r\n        return this.MF3MPITZAMC06;\r\n      case this.MF3MPITZAMC07.key:\r\n        return this.MF3MPITZAMC07;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  static exists(meteringPoint: string): boolean {\r\n    switch (meteringPoint) {\r\n      case this.MF3MPITZAMC01.key:\r\n      case this.MF3MPITZAMC02.key:\r\n      case this.MF3MPITZAMC03.key:\r\n      case this.MF3MPITZAMC04.key:\r\n      case this.MF3MPITZAMC05.key:\r\n      case this.MF3MPITZAMC06.key:\r\n      case this.MF3MPITZAMC07.key:\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeteringPoint;\r\n","import XLSX from \"xlsx\";\r\nimport { LoadProfileStorage } from \".\";\r\nimport { LoadProfileSettings } from \"./types/LoadProfileSettings\";\r\nimport { LoadProfile_Raw } from \"./objects\";\r\nimport moment from \"moment\";\r\nimport { CellObject, WorkBook, WorkSheet } from \"xlsx/types\";\r\nimport MeteringPoint from \"./enums/MeteringPoints\";\r\n\r\ntype LoadProfileRowData = {\r\n  kwdelCell: CellObject;\r\n  dateCell: CellObject;\r\n  timeCell: CellObject;\r\n  row: number;\r\n  sheetName: string;\r\n};\r\n\r\nfunction extractLoadProfileRawFromWorkbook(\r\n  fileName: string,\r\n  workbook: WorkBook,\r\n  handleProgressUpdate: (progressInfo: string, progress: number) => void\r\n) {\r\n  return new Promise<{\r\n    value: LoadProfile_Raw[];\r\n    errors: string[];\r\n    meteringPoints: string[];\r\n  }>(async (resolve, reject) => {\r\n    if (workbook === null) {\r\n      reject(new Error(\"Invalid file\"));\r\n      return;\r\n    }\r\n    console.log(\"Parsing workbook...\");\r\n\r\n    let lp_rawDatas: LoadProfile_Raw[] = [];\r\n    let errors: string[] = [];\r\n    let meteringPoints: string[] = [];\r\n\r\n    for (let sheetName of workbook.SheetNames) {\r\n      if (!MeteringPoint.exists(sheetName)) {\r\n        errors.push(\r\n          `Invalid sheetname: ${sheetName}, expected: MF3MPITZAMC01~7`\r\n        );\r\n        continue;\r\n      }\r\n      meteringPoints.push(sheetName);\r\n\r\n      handleProgressUpdate(`Parsing ${sheetName}`, 0);\r\n      console.log(\"Parsing worksheet: \" + sheetName);\r\n\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      const range = XLSX.utils.decode_range(worksheet[\"!ref\"] as string);\r\n      const totalRows = await Promise.resolve(range.e.r - range.s.r);\r\n      for (let row = 0; row <= range.e.r; row++) {\r\n        const percent = await calculatePercent(row, totalRows);\r\n        handleProgressUpdate(\r\n          `Processing rows ${row}/${totalRows} ${percent.toFixed(0)}%`,\r\n          percent\r\n        );\r\n        try {\r\n          let settings = LoadProfileStorage.loadSettings();\r\n          let cells = extractCells(worksheet, row, sheetName, settings);\r\n          let rawData = extractDataFromRow(cells, settings, fileName);\r\n          lp_rawDatas.push(rawData);\r\n        } catch (e) {\r\n          errors.push(e.message);\r\n        }\r\n      }\r\n    }\r\n    console.log(\"finished\");\r\n    resolve({ value: lp_rawDatas, errors, meteringPoints });\r\n  });\r\n}\r\n\r\nfunction calculatePercent(i: number, total: number): Promise<number> {\r\n  return new Promise<number>((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve((i / total) * 100);\r\n    }, 0);\r\n  });\r\n}\r\n\r\n//Extracts the load profile raw data from the row,\r\nfunction extractCells(\r\n  worksheet: WorkSheet,\r\n  row: number,\r\n  sheetName: string,\r\n  settings: LoadProfileSettings\r\n): LoadProfileRowData {\r\n  //Builds the raw cell location {column, row}\r\n  let kwdelAddress = { c: settings.kwdelCol, r: row };\r\n  let dateAddress = { c: settings.dateCol, r: row };\r\n  let timeAddress = { c: settings.timeCol, r: row };\r\n\r\n  //Builds the encoded cell location {\"A1\", \"B2\"} to extract from worksheet\r\n  let kwdelRef = XLSX.utils.encode_cell(kwdelAddress);\r\n  let dateRef = XLSX.utils.encode_cell(dateAddress);\r\n  let timeRef = XLSX.utils.encode_cell(timeAddress);\r\n\r\n  return {\r\n    kwdelCell: worksheet[kwdelRef],\r\n    timeCell: worksheet[timeRef],\r\n    dateCell: worksheet[dateRef],\r\n    row,\r\n    sheetName: sheetName,\r\n  };\r\n}\r\n\r\nfunction extractDataFromRow(\r\n  rowData: LoadProfileRowData,\r\n  settings: LoadProfileSettings,\r\n  fileName: string\r\n): LoadProfile_Raw {\r\n  let error = null;\r\n  let anyErrors = false;\r\n  let rawData: LoadProfile_Raw | null = null;\r\n\r\n  let kwdelCellData = extractKwdelCellData(rowData.kwdelCell);\r\n  let dateCellData = extractDateCellData(rowData.dateCell, settings.dateFormat);\r\n  let timeCellData = extractTimeCellData(rowData.timeCell, settings.timeFormat);\r\n\r\n  anyErrors = Boolean(\r\n    kwdelCellData.error || dateCellData.error || timeCellData.error\r\n  );\r\n  if (anyErrors) {\r\n    error = `Errors in row ${rowData.row + 1}:\\n`;\r\n    if (kwdelCellData.error) error = error.concat(`\\t${kwdelCellData.error}\\n`);\r\n    if (dateCellData.error) error = error.concat(`\\t${dateCellData.error}\\n`);\r\n    if (timeCellData.error) error = error.concat(`\\t${timeCellData.error}\\n`);\r\n\r\n    throw new Error(error);\r\n  } else {\r\n    let kwdel = kwdelCellData.value as number;\r\n    let day = dateCellData.value?.getDate() as number;\r\n    let month = dateCellData.value?.getMonth() as number;\r\n    let hour = timeCellData.value?.getHours() as number;\r\n    let minute = timeCellData.value?.getMinutes() as number;\r\n    let year = dateCellData.value?.getFullYear() as number;\r\n    rawData = new LoadProfile_Raw(\r\n      kwdel,\r\n      day,\r\n      month + 1,\r\n      year,\r\n      hour,\r\n      minute,\r\n      rowData.sheetName,\r\n      rowData.row,\r\n      fileName\r\n    );\r\n  }\r\n\r\n  // console.log(`row: ${rawData.row} ${rawData.hour}:${rawData.minute}`);\r\n  return rawData;\r\n}\r\n\r\nfunction extractKwdelCellData(\r\n  kwdelCell: CellObject\r\n): { error: string | null; value: number | null } {\r\n  let error = null;\r\n  let value = null;\r\n  if (kwdelCell) {\r\n    if (!(kwdelCell.t === \"n\" || Number(kwdelCell.v || kwdelCell.w))) {\r\n      error = `KwdelCell expectations: number received: ${kwdelCell.v}`;\r\n    } else {\r\n      value = Number(kwdelCell.r || kwdelCell.v);\r\n    }\r\n  } else {\r\n    error = \"Kwdel cell is null\";\r\n  }\r\n  return { error, value };\r\n}\r\n\r\nfunction extractDateCellData(\r\n  dateCell: CellObject,\r\n  dateFormat: string\r\n): { error: string | null; value: Date | null } {\r\n  let error: string | null = null;\r\n  let value = null;\r\n  let x: any = null;\r\n  if (dateCell) {\r\n    if (dateCell.t !== \"d\") {\r\n      if (dateCell.t === \"s\") {\r\n        x = moment(dateCell.v || dateCell.w || dateCell.r, dateFormat, true);\r\n        if (!x.isValid()) {\r\n          error = `DateCell, \"${dateCell.v}\" does not match the date format in settings ${dateFormat}`;\r\n        } else {\r\n          value = x.toDate();\r\n        }\r\n      } else {\r\n        error = `DateCell expectations: date received: ${dateCell.v}`;\r\n      }\r\n    } else {\r\n      value = dateCell.v as Date;\r\n    }\r\n  } else {\r\n    error = \"Date cell is null\";\r\n  }\r\n\r\n  return { error, value };\r\n}\r\n\r\nfunction extractTimeCellData(\r\n  timeCell: CellObject,\r\n  timeFormat: string\r\n): { error: string | null; value: Date | null } {\r\n  let error: string | null = null;\r\n  let value = null;\r\n  let x: any = null;\r\n  if (timeCell) {\r\n    if (timeCell.t !== \"d\") {\r\n      if (timeCell.t === \"s\") {\r\n        x = moment(timeCell.v || timeCell.w || timeCell.r, timeFormat);\r\n        if (!x.isValid()) {\r\n          error = `TimeCell, ${timeCell.v} does not match the time format in setstings ${timeFormat}`;\r\n        } else {\r\n          value = x.toDate();\r\n        }\r\n      } else {\r\n        error = `TimeCell expectations: date received: ${timeCell.v}`;\r\n      }\r\n    } else {\r\n      value = timeCell.v as Date;\r\n    }\r\n  } else {\r\n    error = \"Time cell is null\";\r\n  }\r\n\r\n  return { error, value };\r\n}\r\n\r\nexport default extractLoadProfileRawFromWorkbook;\r\n","import { MonthlyInterruptionSettings } from \"./types\";\r\n\r\nenum MonthlyInterruptionSettingsKey {\r\n  DATE = \"mis_date\",\r\n  DURATION = \"mis_duration\",\r\n  DATE_FORMAT = \"mis_dateformat\",\r\n  FEEDER = \"mis_feeder\",\r\n}\r\n\r\nfunction saveMonthlyInterruptionSettings(\r\n  settings: MonthlyInterruptionSettings\r\n) {\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DATE,\r\n    settings.dateCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DURATION,\r\n    settings.durationCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.DATE_FORMAT,\r\n    settings.dateFormat\r\n  );\r\n  localStorage.setItem(\r\n    MonthlyInterruptionSettingsKey.FEEDER,\r\n    settings.feederCol.toString()\r\n  );\r\n}\r\n\r\nfunction loadMonthlyInterruptionSettings(): MonthlyInterruptionSettings {\r\n  return {\r\n    dateCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.DATE)) || 0,\r\n    durationCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.DURATION)) ||\r\n      1,\r\n    dateFormat:\r\n      localStorage.getItem(MonthlyInterruptionSettingsKey.DATE_FORMAT) ||\r\n      \"MM/DD/YYYY\",\r\n\r\n    feederCol:\r\n      Number(localStorage.getItem(MonthlyInterruptionSettingsKey.FEEDER)) || 2,\r\n  };\r\n}\r\n\r\nexport { saveMonthlyInterruptionSettings, loadMonthlyInterruptionSettings };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FileUtil } from \"../common/utils\";\r\nimport { LoadProfile_Raw } from \"./objects\";\r\nimport extractLoadProfileRawFromWorkbook from \"./ExcelParser\";\r\n\r\ntype LoadProfileParserProps = {\r\n  file: File;\r\n  render?: any;\r\n  onFileParsed: (data: LoadProfile_Raw[]) => void;\r\n  onRemoveFile: (file: File, meteringPointss: string[]) => void;\r\n};\r\n\r\nexport type LoadProfileParserRenderProps = {\r\n  progress: number;\r\n  progressInfo: string;\r\n  fileFromParser: File;\r\n  errors: string[];\r\n  onRemoveFile: () => void;\r\n};\r\n\r\nconst LoadProfileParser: React.FunctionComponent<LoadProfileParserProps> = ({\r\n  file,\r\n  render,\r\n  onFileParsed,\r\n  onRemoveFile,\r\n  ...others\r\n}) => {\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [progressInfo, setsProgressInfo] = useState<string>(\"\");\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [meteringPoints, setMeteringPoints] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    FileUtil.extractWorkbookFromFile(file)\r\n      .then((workbook) => {\r\n        return extractLoadProfileRawFromWorkbook(\r\n          file.name,\r\n          workbook,\r\n          handleProgressUpdate\r\n        );\r\n      })\r\n      .then((result) => {\r\n        setErrors(result.errors);\r\n        handleFileParsed(result.value);\r\n        setMeteringPoints((meteringPoint) => [\r\n          ...meteringPoint,\r\n          ...result.meteringPoints,\r\n        ]);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        errors.push(e.message);\r\n      });\r\n  }, []);\r\n\r\n  function handleFileParsed(lp_rawDatas: LoadProfile_Raw[]) {\r\n    onFileParsed(lp_rawDatas);\r\n  }\r\n\r\n  function handleProgressUpdate(info: string, percent: number) {\r\n    setProgress(percent);\r\n    setsProgressInfo(info);\r\n  }\r\n\r\n  function handleRemoveFile() {\r\n    onRemoveFile(file, meteringPoints);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {render({\r\n        progress,\r\n        progressInfo,\r\n        fileFromParser: file,\r\n        errors,\r\n        onRemoveFile: handleRemoveFile,\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoadProfileParser;\r\n","import { Box, Typography, makeStyles, Theme } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\ntype FileDropProps = {\r\n  onFileDrop: (files: File[]) => void;\r\n  onDragEnter: () => void;\r\n  onDragLeave: () => void;\r\n  onDragOver?: () => void;\r\n  helperText: string;\r\n};\r\n\r\nconst FileDrop: React.FunctionComponent<FileDropProps> = ({\r\n  helperText = \"\",\r\n  onFileDrop,\r\n  onDragEnter,\r\n  onDragLeave,\r\n  onDragOver = () => {},\r\n  children,\r\n  ...others\r\n}) => {\r\n  const [dragging, setDragging] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  function handleDragEnter() {\r\n    setDragging(true);\r\n    onDragEnter();\r\n  }\r\n\r\n  function handleDragLeave() {\r\n    setDragging(false);\r\n    onDragLeave();\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      <Dropzone\r\n        onDrop={onFileDrop}\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section\r\n            onMouseEnter={handleDragEnter}\r\n            onMouseLeave={handleDragLeave}\r\n            className={clsx(classes.dropZone, {\r\n              [classes.dropZone_focused]: dragging,\r\n            })}\r\n          >\r\n            <div\r\n              {...getRootProps({ className: `${classes.dropZone_content}` })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                color=\"textSecondary\"\r\n                className={classes.dropZoneText}\r\n              >\r\n                {helperText}\r\n              </Typography>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        maxWidth=\"100%\"\r\n        gridGap={5}\r\n        marginTop={1}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dropZone: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n    minHeight: 50,\r\n  },\r\n  dropZone_focused: {\r\n    border: `2px dashed ${theme.palette.text.secondary}`,\r\n  },\r\n  dropZone_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: \"100%\",\r\n    gap: \"10px\",\r\n    flexWrap: \"wrap\",\r\n    margin: 5,\r\n  },\r\n  dropZoneText: {\r\n    fontSize: \"0.8rem\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n  },\r\n}));\r\n\r\nexport default FileDrop;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CustomAccordion from \"../CustomAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport { LoadProfileParser } from \"../../loadprofile\";\r\nimport { LoadProfile_Raw } from \"../../loadprofile/objects\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport FileDrop from \"../FileDrop\";\r\nimport { LoadProfileParserRenderProps } from \"../../loadprofile/LoadProfileParser\";\r\n\r\ntype LoadProfileAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"laodprofile_filespanel\";\r\nconst title = \"Load Profile Files\";\r\n\r\nconst LoadProfileAccordion: React.FunctionComponent<LoadProfileAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  ...others\r\n}) => {\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(lpRawDatas: LoadProfile_Raw[]) {\r\n    loadProfileContext.updateLoadProfiles(lpRawDatas);\r\n  }\r\n\r\n  function handleRemoveFile(file: File, meteringPoints: string[]) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n\r\n    loadProfileContext.deleteLoadProfiles({\r\n      fileName: file.name,\r\n      meteringPoints,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {[...files.values()].map((file) => {\r\n          return (\r\n            <LoadProfileParser\r\n              onFileParsed={handleFileParsed}\r\n              key={file.name}\r\n              file={file}\r\n              onRemoveFile={handleRemoveFile}\r\n              render={({\r\n                progress,\r\n                progressInfo,\r\n                fileFromParser,\r\n                onRemoveFile,\r\n                errors,\r\n              }: LoadProfileParserRenderProps) => (\r\n                <FileCard\r\n                  progress={progress}\r\n                  progressInfo={progressInfo}\r\n                  file={fileFromParser}\r\n                  errors={errors}\r\n                  onRemoveFile={onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default LoadProfileAccordion;\r\nexport { panelName };\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CustomAccordion from \"../CustomAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport { LoadProfileParser } from \"../../loadprofile\";\r\nimport { LoadProfile_Raw } from \"../../loadprofile/objects\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport FileDrop from \"../FileDrop\";\r\n\r\ntype MonthlyInterruptionAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"mi_panel\";\r\nconst title = \"Monthly Interruption Files\";\r\n\r\nconst MonthlyInterruptionAccordion: React.FunctionComponent<MonthlyInterruptionAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  ...others\r\n}) => {\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(lpRawDatas: LoadProfile_Raw[]) {\r\n    loadProfileContext.updateLoadProfiles(lpRawDatas);\r\n  }\r\n\r\n  function handleRemoveFile(file: File, meteringPoints: string[]) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n\r\n    loadProfileContext.deleteLoadProfiles({\r\n      fileName: file.name,\r\n      meteringPoints,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {/* {[...files.values()].map((file) => {\r\n          return (\r\n            <LoadProfileParser\r\n              onFileParsed={handleFileParsed}\r\n              key={file.name}\r\n              file={file}\r\n              onRemoveFile={handleRemoveFile}\r\n              render={({\r\n                progress,\r\n                progressInfo,\r\n                fileFromParser,\r\n                onRemoveFile,\r\n                errors,\r\n              }: LoadProfileParserRenderProps) => (\r\n                <FileCard\r\n                  progress={progress}\r\n                  progressInfo={progressInfo}\r\n                  file={fileFromParser}\r\n                  errors={errors}\r\n                  onRemoveFile={onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })} */}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionAccordion;\r\nexport { panelName };\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CustomAccordion from \"../CustomAccordion\";\r\nimport FileCard from \"../FileCard\";\r\nimport { LoadProfileParser } from \"../../loadprofile\";\r\nimport { LoadProfile_Raw } from \"../../loadprofile/objects\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport FileDrop from \"../FileDrop\";\r\n\r\ntype MonthlyInterruptionAccordionProps = {\r\n  expandedPanel: string;\r\n  onPanelChange: (newPanel: string) => void;\r\n};\r\nconst panelName = \"ps_panel\";\r\nconst title = \"Power Substation Files\";\r\n\r\nconst MonthlyInterruptionAccordion: React.FunctionComponent<MonthlyInterruptionAccordionProps> = ({\r\n  expandedPanel,\r\n  onPanelChange,\r\n  ...others\r\n}) => {\r\n  const [files, setFiles] = useState<Map<string, File>>(new Map());\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  async function handleFileDrop(files: File[]) {\r\n    files.forEach((file: File) => {\r\n      setFiles((prevMap) => {\r\n        if (!prevMap.has(file.name)) {\r\n          const duplicate = new Map(prevMap);\r\n          duplicate.set(file.name, file);\r\n          return duplicate;\r\n        } else {\r\n          return prevMap;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDragEnter() {}\r\n\r\n  function handleDragLeave() {}\r\n\r\n  function handleFileParsed(lpRawDatas: LoadProfile_Raw[]) {\r\n    loadProfileContext.updateLoadProfiles(lpRawDatas);\r\n  }\r\n\r\n  function handleRemoveFile(file: File, meteringPoints: string[]) {\r\n    setFiles((prevMap) => {\r\n      const duplicate = new Map(prevMap);\r\n      duplicate.delete(file.name);\r\n      return duplicate;\r\n    });\r\n\r\n    loadProfileContext.deleteLoadProfiles({\r\n      fileName: file.name,\r\n      meteringPoints,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CustomAccordion\r\n      onPanelChange={onPanelChange}\r\n      title={title}\r\n      panelName={panelName}\r\n      expandedPanel={expandedPanel}\r\n    >\r\n      <FileDrop\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onFileDrop={handleFileDrop}\r\n        helperText=\"Drop files here\"\r\n      >\r\n        {/* {[...files.values()].map((file) => {\r\n          return (\r\n            <LoadProfileParser\r\n              onFileParsed={handleFileParsed}\r\n              key={file.name}\r\n              file={file}\r\n              onRemoveFile={handleRemoveFile}\r\n              render={({\r\n                progress,\r\n                progressInfo,\r\n                fileFromParser,\r\n                onRemoveFile,\r\n                errors,\r\n              }: LoadProfileParserRenderProps) => (\r\n                <FileCard\r\n                  progress={progress}\r\n                  progressInfo={progressInfo}\r\n                  file={fileFromParser}\r\n                  errors={errors}\r\n                  onRemoveFile={onRemoveFile}\r\n                />\r\n              )}\r\n            />\r\n          );\r\n        })} */}\r\n      </FileDrop>\r\n    </CustomAccordion>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionAccordion;\r\nexport { panelName };\r\n","import FilesDrawer from \"./FilesDrawer\";\r\nimport useStyles, { drawerWidth } from \"./use-styles\";\r\n\r\nexport default FilesDrawer;\r\nexport { drawerWidth, useStyles };\r\n","import { Drawer } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport useStyles from \"./use-styles\";\r\nimport LoadProfileAccordion, {\r\n  panelName as loadProfilePanelName,\r\n} from \"./accordions/LoadProfileAccordion\";\r\nimport MonthlyInterruptionAccordion from \"./accordions/MonthlyInterruptionAccordion\";\r\nimport PowerSubstationAccordion from \"./accordions/PowerSubstationAccordion\";\r\n\r\ntype FilesDrawerProps = {\r\n  open: boolean;\r\n};\r\n\r\nconst FilesDrawer: React.FunctionComponent<FilesDrawerProps> = ({\r\n  open,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [expandedPanel, setExpandedPanel] = useState<string>(\r\n    loadProfilePanelName\r\n  );\r\n\r\n  function handlePanelChange(newExpandedPanel: string) {\r\n    setExpandedPanel(newExpandedPanel);\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"persistent\"\r\n      open={open}\r\n      anchor=\"left\"\r\n      className={classes.drawer}\r\n      classes={{ paper: classes.drawerPaper }}\r\n    >\r\n      <LoadProfileAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n      <MonthlyInterruptionAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n      <PowerSubstationAccordion\r\n        onPanelChange={handlePanelChange}\r\n        expandedPanel={expandedPanel}\r\n      />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default FilesDrawer;\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    background: theme.palette.background.paper,\r\n    padding: theme.spacing(3),\r\n    fontSize: \"1rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    zIndex: theme.zIndex.mobileStepper,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  title_div: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(5),\r\n    fontSize: \"1.3em\",\r\n  },\r\n  tabs: {\r\n    display: \"inline-block\",\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(5),\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n  },\r\n  tab_panel: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { FormEvent } from \"react\";\r\nimport { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\ntype LoadProfileSettingsProps = {\r\n  onSubmit: (event: FormEvent<HTMLFormElement>) => void;\r\n  children: any;\r\n};\r\n\r\nconst LoadProfileSettingsPanel: React.FunctionComponent<LoadProfileSettingsProps> = (\r\n  props\r\n) => {\r\n  const { onSubmit, children, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    onSubmit(event);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form\r\n        id=\"settings-form\"\r\n        className={classes.textFieldContainer}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {children}\r\n      </form>\r\n      <div className={classes.actionContainer}>\r\n        <Button form=\"settings-form\" type=\"submit\" color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    textFieldContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"10px\",\r\n      width: \"300px\",\r\n      fontSize: \"0.9rem\",\r\n    },\r\n    actionContainer: {\r\n      marginTop: 10,\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileSettingsPanel;\r\n","import { makeStyles, TextField, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    fontSize: \"1em\",\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: theme.palette.background.paper,\r\n    \"&.Mui-focused\": {\r\n      backgroundColor: theme.palette.background.default,\r\n      border: `1px solid ${theme.palette.primary.main}`,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n    focused: {},\r\n  },\r\n}));\r\n\r\ntype FormTextFieldProps = {\r\n  value?: string | number;\r\n  name?: string;\r\n  label?: string;\r\n  placeholder?: string;\r\n  helpertext?: string;\r\n  error?: boolean;\r\n  type?: string;\r\n  limitZero?: boolean;\r\n  onChange?: (\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => void;\r\n};\r\n\r\nconst FormTextField: React.FunctionComponent<FormTextFieldProps> = ({\r\n  label,\r\n  value = \"\",\r\n  name = \"\",\r\n  placeholder = \"\",\r\n  helpertext = \"\",\r\n  error = false,\r\n  type = \"text\",\r\n  onChange = (event) => {},\r\n  limitZero = true,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function handleChange(\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) {\r\n    if (type === \"number\" && Number(event.target.value) < 0) {\r\n      return;\r\n    } else {\r\n      onChange(event);\r\n    }\r\n  }\r\n  return (\r\n    <TextField\r\n      variant=\"filled\"\r\n      label={label}\r\n      value={value}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      error={error}\r\n      helperText={helpertext}\r\n      type={type}\r\n      InputProps={{\r\n        disableUnderline: true,\r\n        classes: { root: classes.root },\r\n      }}\r\n      margin=\"dense\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormTextField;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\n\r\nimport { LoadProfileStorage } from \"../../loadprofile\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport { FormTextField } from \"../../common/components/textfields\";\r\n\r\ntype LoadProfileSettingsProps = {};\r\n\r\nconst LoadProfileSettingsPanel: React.FunctionComponent<LoadProfileSettingsProps> = ({\r\n  ...others\r\n}) => {\r\n  const [kwdel, setKwdel] = useState(0);\r\n  const [date, setDate] = useState(0);\r\n  const [time, setTime] = useState(0);\r\n  const [dateFormat, setDateFormat] = useState(\"\");\r\n  const [timeFormat, setTimeFormat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let lpSettings = LoadProfileStorage.loadSettings();\r\n    setKwdel(lpSettings.kwdelCol);\r\n    setDateFormat(lpSettings.dateFormat);\r\n    setDate(lpSettings.dateCol);\r\n    setTime(lpSettings.timeCol);\r\n    setTimeFormat(lpSettings.timeFormat);\r\n  }, []);\r\n\r\n  function handleKwdelChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwdel(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDate(Number(event.target.value));\r\n  }\r\n\r\n  function handleTimeChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setTime(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateFormat(event.target.value);\r\n  }\r\n\r\n  function handleTimeFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setTimeFormat(event.target.value);\r\n  }\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    LoadProfileStorage.saveSettings({\r\n      kwdelCol: kwdel,\r\n      timeCol: time,\r\n      dateCol: date,\r\n      dateFormat,\r\n      timeFormat,\r\n    });\r\n    alert(\"Load profile settings saved\");\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Kwdel Column#\"\r\n        placeholder=\"Kwdel Column#\"\r\n        value={kwdel}\r\n        type=\"number\"\r\n        onChange={handleKwdelChange}\r\n        helpertext=\"the column# of the kwdel value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Date Column#\"\r\n        placeholder=\"Date Column#\"\r\n        value={date}\r\n        type=\"number\"\r\n        onChange={handleDateChange}\r\n        helpertext=\"the column# of the date value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Time Column#\"\r\n        placeholder=\"Time Column#\"\r\n        value={time}\r\n        type=\"number\"\r\n        onChange={handleTimeChange}\r\n        helpertext=\"the column# of the time value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Date Format\"\r\n        placeholder=\"Date Format\"\r\n        value={dateFormat}\r\n        onChange={handleDateFormatChange}\r\n        helpertext=\"(MM/DD/YYYY) = '09/22/2020', (MMMM/DD/YYYY) = 'September/22/2020'  \"\r\n      />\r\n      <FormTextField\r\n        label=\"Time Format\"\r\n        placeholder=\"Time Format\"\r\n        value={timeFormat}\r\n        onChange={handleTimeFormatChange}\r\n        helpertext=\"(HH:mm) = '22:15', (hh:mm a) = '10:15 pm', (HH:mm:ss) = '22:15:13' \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default LoadProfileSettingsPanel;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport { FormTextField } from \"../../common/components/textfields\";\r\nimport {\r\n  saveMonthlyInterruptionSettings,\r\n  loadMonthlyInterruptionSettings,\r\n} from \"../../monthly_interruption/MonthlyInterruptionStorage\";\r\n\r\ntype MonthlyInterruptionPanelProps = {};\r\n\r\nconst MonthlyInterruptionPanel: React.FunctionComponent<MonthlyInterruptionPanelProps> = (\r\n  props\r\n) => {\r\n  const { ...others } = props;\r\n\r\n  const [durationCol, setDurationCol] = useState(0);\r\n  const [dateCol, setDateCol] = useState(0);\r\n  const [feederCol, setFeederCol] = useState(0);\r\n  const [dateFormat, setDateFormat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let settings = loadMonthlyInterruptionSettings();\r\n    setDurationCol(settings.durationCol);\r\n    setDateCol(settings.dateCol);\r\n    setFeederCol(settings.feederCol);\r\n    setDateFormat(settings.dateFormat);\r\n  }, []);\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    saveMonthlyInterruptionSettings({\r\n      dateCol,\r\n      durationCol,\r\n      feederCol,\r\n      dateFormat,\r\n    });\r\n\r\n    alert(\"Monthly Interruption Settings Saved\");\r\n  }\r\n\r\n  function handleDurationColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDurationCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleDateFormatChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDateFormat(event.target.value);\r\n  }\r\n\r\n  function handleFeederColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setFeederCol(Number(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Feeder Column#\"\r\n        placeholder=\"Feeder Column#\"\r\n        value={dateCol}\r\n        type=\"number\"\r\n        onChange={handleFeederColChange}\r\n        helpertext=\"the column# of the feeder value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Duration Column#\"\r\n        placeholder=\"Duration Column#\"\r\n        value={durationCol}\r\n        type=\"number\"\r\n        onChange={handleDurationColChange}\r\n        helpertext=\"the column# of the duration value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Date Column#\"\r\n        placeholder=\"Date Column#\"\r\n        value={dateCol}\r\n        type=\"number\"\r\n        onChange={handleDateColChange}\r\n        helpertext=\"the column# of the date value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Date Format\"\r\n        placeholder=\"Date Format\"\r\n        value={dateFormat}\r\n        onChange={handleDateFormatChange}\r\n        helpertext=\"(MM/DD/YYYY) = '09/22/2020', (MMMM/DD/YYYY) = 'September/22/2020'  \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default MonthlyInterruptionPanel;\r\n","import { PowerSubstationSettings } from \"./types\";\r\n\r\nenum PowerSubstationSettingsKey {\r\n  FEEDER = \"ps_feeder\",\r\n  DEMAND = \"ps_demand\",\r\n  KWHRENERGY = \"ps_kwhrenergy\",\r\n  KVARHRENERGY = \"ps_kvarhrenergy\",\r\n}\r\n\r\nfunction savePowerSubstationSettings(settings: PowerSubstationSettings) {\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.DEMAND,\r\n    settings.demandKwhrCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.FEEDER,\r\n    settings.feederCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.KWHRENERGY,\r\n    settings.kwhrEnergyCol.toString()\r\n  );\r\n  localStorage.setItem(\r\n    PowerSubstationSettingsKey.KVARHRENERGY,\r\n    settings.kvarhrEnergyCol.toString()\r\n  );\r\n}\r\n\r\nfunction loadPowerSubstationSettings(): PowerSubstationSettings {\r\n  return {\r\n    kvarhrEnergyCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.KVARHRENERGY)) ||\r\n      0,\r\n    kwhrEnergyCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.KWHRENERGY)) || 1,\r\n    demandKwhrCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.DEMAND)) || 2,\r\n    feederCol:\r\n      Number(localStorage.getItem(PowerSubstationSettingsKey.FEEDER)) || 3,\r\n  };\r\n}\r\n\r\nexport { savePowerSubstationSettings, loadPowerSubstationSettings };\r\n","import { makeStyles, Tab, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype VerticalTabProps = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    textAlign: \"start\",\r\n    textTransform: \"none\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"0.9em\",\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  tab_selected: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tab_wrapper: {\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n}));\r\n\r\nconst VerticalTab: React.FunctionComponent<VerticalTabProps> = ({\r\n  label,\r\n  value,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      classes={{\r\n        root: classes.tab,\r\n        wrapper: classes.tab_wrapper,\r\n        selected: classes.tab_selected,\r\n      }}\r\n      value={value}\r\n      label={label}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VerticalTab;\r\n","import { makeStyles, Tab, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype HorizontalTabProps = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tab: {\r\n    textAlign: \"start\",\r\n    textTransform: \"none\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"0.9em\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    padding: 0,\r\n    minWidth: \"100px\",\r\n    lineHeight: 0,\r\n  },\r\n  tab_selected: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tab_wrapper: {},\r\n}));\r\n\r\nconst HorizontalTab: React.FunctionComponent<HorizontalTabProps> = ({\r\n  label,\r\n  value,\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tab\r\n      classes={{\r\n        root: classes.tab,\r\n        wrapper: classes.tab_wrapper,\r\n        selected: classes.tab_selected,\r\n      }}\r\n      value={value}\r\n      label={label}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HorizontalTab;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport SettingsPanel from \"./SettingsPanel\";\r\nimport { FormTextField } from \"../../common/components/textfields\";\r\nimport {\r\n  savePowerSubstationSettings,\r\n  loadPowerSubstationSettings,\r\n} from \"../../power_substation/PowerSubstationLocalStorage\";\r\n\r\ntype PowerSubstationPanelProps = {};\r\n\r\nconst PowerSubstationPanel: React.FunctionComponent<PowerSubstationPanelProps> = (\r\n  props\r\n) => {\r\n  const { ...others } = props;\r\n\r\n  const [demandCol, setDemandCol] = useState(0);\r\n  const [kwhrEnergyCol, setKwhrEnergyCol] = useState(0);\r\n  const [feederCol, setFeederCol] = useState(0);\r\n  const [kvarhrEnergyCol, setKvarhrEnergyCol] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let settings = loadPowerSubstationSettings();\r\n    setDemandCol(settings.demandKwhrCol);\r\n    setKwhrEnergyCol(settings.kwhrEnergyCol);\r\n    setFeederCol(settings.feederCol);\r\n    setKvarhrEnergyCol(settings.kvarhrEnergyCol);\r\n  }, []);\r\n\r\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    savePowerSubstationSettings({\r\n      kwhrEnergyCol,\r\n      demandKwhrCol: demandCol,\r\n      feederCol,\r\n      kvarhrEnergyCol,\r\n    });\r\n\r\n    alert(\"Power Substation Settings Saved\");\r\n  }\r\n\r\n  function handleDemandChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setDemandCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleKvarhrEnergyChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKvarhrEnergyCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleFeederColChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setFeederCol(Number(event.target.value));\r\n  }\r\n\r\n  function handleKwhrEnergyChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    setKwhrEnergyCol(Number(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <SettingsPanel onSubmit={handleSubmit}>\r\n      <FormTextField\r\n        label=\"Kwhr Energy Column#\"\r\n        placeholder=\"Kwhr Energy Column#\"\r\n        value={kwhrEnergyCol}\r\n        type=\"number\"\r\n        onChange={handleKwhrEnergyChange}\r\n        helpertext=\"the column# of the kwhr energy value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Demand Column#\"\r\n        placeholder=\"Demand Column#\"\r\n        value={demandCol}\r\n        type=\"number\"\r\n        onChange={handleDemandChange}\r\n        helpertext=\"the column# of the demand value, note: column starts at 0\"\r\n      />\r\n      <FormTextField\r\n        label=\"Kvarhr Energy Column#\"\r\n        placeholder=\"Kvarhr Energy Column#\"\r\n        value={kvarhrEnergyCol}\r\n        type=\"number\"\r\n        onChange={handleKvarhrEnergyChange}\r\n        helpertext=\"the column# of the kvarhr value, note: column starts at 0\"\r\n      />\r\n\r\n      <FormTextField\r\n        label=\"Feeder Column#\"\r\n        placeholder=\"Feeder Column#\"\r\n        value={feederCol}\r\n        onChange={handleFeederColChange}\r\n        type=\"number\"\r\n        helpertext=\"the column# of the feeder value, note: column starts at 0 \"\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n};\r\n\r\nexport default PowerSubstationPanel;\r\n","import { Tabs, Typography, Box } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport useStyles from \"./use-styles\";\r\nimport {\r\n  LoadProfileSettingsPanel,\r\n  MonthlyInterruptionSettingsPanel,\r\n} from \"./tabpanels\";\r\nimport { VerticalTab } from \"../common/components/tabs\";\r\nimport PowerSubstationPanel from \"./tabpanels/PowerSubstationPanel\";\r\n\r\ntype SettingsProps = {};\r\n\r\nenum SettingsTabs {\r\n  LOADPROFILE_TAB = \"lp_tab\",\r\n  MONTHLYINTERRUPTION_TAB = \"mi_tab\",\r\n  POWERSUBSTATION_TAB = \"ps_tab\",\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-prevent-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\r\n      className={classes.tab_panel}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Settings: React.FunctionComponent<SettingsProps> = ({ ...others }) => {\r\n  const [selectedTab, setSelectedTab] = useState<string>(\r\n    SettingsTabs.LOADPROFILE_TAB\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title_div}>\r\n        <Typography className={classes.title}>Settings</Typography>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={selectedTab}\r\n          centered={false}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n        >\r\n          <VerticalTab\r\n            label=\"Load Profile Settings\"\r\n            value={SettingsTabs.LOADPROFILE_TAB}\r\n          />\r\n          <VerticalTab\r\n            value={SettingsTabs.MONTHLYINTERRUPTION_TAB}\r\n            label=\"Monthly Interruption Settings\"\r\n          />\r\n          <VerticalTab\r\n            value={SettingsTabs.POWERSUBSTATION_TAB}\r\n            label=\"Power Substation Settings\"\r\n          />\r\n        </Tabs>\r\n        <TabPanel value={selectedTab} index={SettingsTabs.LOADPROFILE_TAB}>\r\n          <LoadProfileSettingsPanel />\r\n        </TabPanel>\r\n        <TabPanel\r\n          value={selectedTab}\r\n          index={SettingsTabs.MONTHLYINTERRUPTION_TAB}\r\n        >\r\n          <MonthlyInterruptionSettingsPanel />\r\n        </TabPanel>\r\n        <TabPanel value={selectedTab} index={SettingsTabs.POWERSUBSTATION_TAB}>\r\n          <PowerSubstationPanel />\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import Settings from \"./Settings\";\r\n\r\nexport default Settings;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(3),\r\n\r\n      color: theme.palette.text.primary,\r\n      \"&:hover > $content\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      \"&:focus > $content, &$selected > $content\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n      \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.primary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"$expanded > &\": {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      \"& $content\": {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n    labelRoot: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: `${theme.spacing(2)}px`,\r\n      padding: theme.spacing(0.5, 1),\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: \"normal\",\r\n      flexGrow: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default useTreeItemStyles;\r\n","import { SvgIconProps, Typography } from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\n\r\ndeclare module \"csstype\" {\r\n  interface Properties {\r\n    \"--tree-view-color\"?: string;\r\n    \"--tree-view-bg-color\"?: string;\r\n  }\r\n}\r\n\r\ntype StyledTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  labelIcon: React.ElementType<SvgIconProps>;\r\n  labelInfo?: string;\r\n  labelText: string;\r\n};\r\n\r\nfunction StyledTreeItem(props: StyledTreeItemProps) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          <Typography variant=\"body2\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default StyledTreeItem;\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport {\r\n  ArrowDownward,\r\n  ArrowRight,\r\n  Functions,\r\n  TrendingUp,\r\n} from \"@material-ui/icons\";\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\n\r\ntype DetailsTreeProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst DetailsTree: React.FunctionComponent<DetailsTreeProps> = (props) => {\r\n  const { monthlyLoadProfile, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={[\"1\"]}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }}></div>}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"2\"\r\n        labelText=\"Coincident Peak\"\r\n        labelIcon={TrendingUp}\r\n        labelInfo={\r\n          monthlyLoadProfile.coincidentPeak\r\n            ? `${monthlyLoadProfile.coincidentPeak.meteringPoint}: ${\r\n                monthlyLoadProfile.coincidentPeak.date.getMonth() + 1\r\n              }/${monthlyLoadProfile.coincidentPeak.date.getDate()}/${monthlyLoadProfile.coincidentPeak.date.getFullYear()} ${\r\n                monthlyLoadProfile.coincidentPeak.hour\r\n              }:00 kwdel: ${monthlyLoadProfile.coincidentPeak.kwdel.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"3\"\r\n        labelText=\"None Coincident Peak\"\r\n        labelIcon={Functions}\r\n        labelInfo={\r\n          monthlyLoadProfile.nonCoincidentPeak\r\n            ? ` ${monthlyLoadProfile.nonCoincidentPeak.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"4\"\r\n        labelText=\"Diversity Factor:\"\r\n        labelIcon={Functions}\r\n        labelInfo={\r\n          monthlyLoadProfile.diversityFactor\r\n            ? ` ${monthlyLoadProfile.diversityFactor.toFixed(2)}`\r\n            : \"\"\r\n        }\r\n      />\r\n      <StyledTreeItem\r\n        nodeId=\"5\"\r\n        labelText=\"Max per metering point:\"\r\n        labelIcon={TrendingUp}\r\n        labelInfo={\"\"}\r\n      >\r\n        {monthlyLoadProfile.loadProfilesMax.map((lpMax) => {\r\n          return (\r\n            <StyledTreeItem\r\n              key={`LM:S${lpMax.meteringPoint}`}\r\n              nodeId={`LM:S${lpMax.meteringPoint}`}\r\n              labelIcon={TrendingUp}\r\n              labelText={`${lpMax.meteringPoint}`}\r\n              labelInfo={` ${\r\n                lpMax.date.getMonth() + 1\r\n              }/${lpMax.date.getDate()}/${lpMax.date.getFullYear()} ${\r\n                lpMax.hour\r\n              }:00 kwdel: ${lpMax.kwdel.toFixed(2)}`}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n      <StyledTreeItem\r\n        nodeId=\"7\"\r\n        labelText=\"Sum per metering point:\"\r\n        labelIcon={Functions}\r\n        labelInfo={\"\"}\r\n      >\r\n        {monthlyLoadProfile.loadProfilesSum.map((lpSum) => {\r\n          return (\r\n            <StyledTreeItem\r\n              key={`LS:S${lpSum.meteringPoint}`}\r\n              nodeId={`LS:S${lpSum.meteringPoint}`}\r\n              labelIcon={Functions}\r\n              labelText={`${lpSum.meteringPoint}`}\r\n              labelInfo={` ${lpSum.kwdel.toFixed(2)}`}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n  })\r\n);\r\n\r\nexport default DetailsTree;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\nimport { LoadProfile } from \"../../../loadprofile/objects\";\r\nimport React, { useEffect } from \"react\";\r\nimport useTreeItemStyles from \"./useTreeItemStyles\";\r\n\r\ntype HourTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  loadProfiles: LoadProfile[];\r\n  totalLoadProfile: LoadProfile;\r\n  dateString?: string;\r\n  hour?: number;\r\n  header?: boolean;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    labelContent: {\r\n      width: \"120px\",\r\n      fontWeight: \"normal\",\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nfunction HourTreeItem(props: HourTreeItemProps) {\r\n  const treeItemClasses = useTreeItemStyles();\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    bgColor,\r\n    loadProfiles,\r\n    dateString = \"\",\r\n    hour = 1,\r\n    header = false,\r\n    totalLoadProfile,\r\n    ...other\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(\"HourTreeItemRendered: Hour: \" + hour);\r\n  }, []);\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={treeItemClasses.labelRoot}>\r\n          <Box minWidth=\"35px\">\r\n            {header ? (\r\n              <Typography variant=\"body2\" className={treeItemClasses.labelText}>\r\n                Hour\r\n              </Typography>\r\n            ) : (\r\n              <Typography variant=\"body2\" className={treeItemClasses.labelText}>\r\n                {hour}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n          {header\r\n            ? loadProfiles.map((loadProfile) => {\r\n                return (\r\n                  <Typography\r\n                    key={`HTI: T: M:${loadProfile.meteringPoint}`}\r\n                    variant=\"body2\"\r\n                    className={classes.labelContent}\r\n                  >\r\n                    {loadProfile.meteringPoint}\r\n                  </Typography>\r\n                );\r\n              })\r\n            : loadProfiles.map((loadProfile) => {\r\n                return (\r\n                  <Typography\r\n                    key={`HTI: T: K:${loadProfile.meteringPoint}`}\r\n                    variant=\"body2\"\r\n                    className={classes.labelContent}\r\n                  >\r\n                    {loadProfile\r\n                      .getDailyLoadProfile(dateString)\r\n                      .hourlyLoadProfiles[hour - 1].getTotalKwdel()\r\n                      .toFixed(2)}\r\n                  </Typography>\r\n                );\r\n              })}\r\n          {header ? (\r\n            <Typography\r\n              className={classes.labelContent}\r\n              variant=\"caption\"\r\n              color=\"inherit\"\r\n            >\r\n              {`Total `}\r\n            </Typography>\r\n          ) : (\r\n            <Typography\r\n              className={classes.labelContent}\r\n              variant=\"caption\"\r\n              color=\"inherit\"\r\n            >\r\n              {totalLoadProfile\r\n                .getDailyLoadProfile(dateString)\r\n                .hourlyLoadProfiles[hour - 1].getRawTotal()\r\n                .toFixed(2)}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: treeItemClasses.root,\r\n        content: treeItemClasses.content,\r\n        expanded: treeItemClasses.expanded,\r\n        selected: treeItemClasses.selected,\r\n        group: treeItemClasses.group,\r\n        label: treeItemClasses.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HourTreeItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\nimport { Today } from \"@material-ui/icons\";\r\nimport { Month } from \"../../../enums\";\r\nimport HourTreeItem from \"./HourTreeItem\";\r\n\r\ntype DayTreeProps = {\r\n  loadProfiles: LoadProfile[];\r\n  totalLoadProfile: LoadProfile;\r\n  dateString: string;\r\n  nodeId: string;\r\n};\r\n\r\nconst DayTree = (props: DayTreeProps) => {\r\n  const { loadProfiles, dateString, nodeId, totalLoadProfile } = props;\r\n\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    setDate(new Date(dateString));\r\n  }, [dateString]);\r\n\r\n  return (\r\n    <StyledTreeItem\r\n      nodeId={nodeId}\r\n      labelText={`${Month[date.getMonth()]} ${date.getDate()}`}\r\n      labelIcon={Today}\r\n    >\r\n      <HourTreeItem\r\n        nodeId={`DTI:D:${dateString}H`}\r\n        dateString={dateString}\r\n        header={true}\r\n        loadProfiles={loadProfiles}\r\n        totalLoadProfile={totalLoadProfile}\r\n      />\r\n      {[...Array(24).keys()].map((hour) => {\r\n        return (\r\n          <HourTreeItem\r\n            nodeId={`HTI: H:${hour}`}\r\n            key={`HTI: H:${hour}`}\r\n            hour={hour + 1}\r\n            dateString={dateString}\r\n            loadProfiles={loadProfiles}\r\n            totalLoadProfile={totalLoadProfile}\r\n          />\r\n        );\r\n      })}\r\n    </StyledTreeItem>\r\n  );\r\n};\r\n\r\nexport default DayTree;\r\n","import React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\nimport { ArrowDownward, ArrowRight, CalendarToday } from \"@material-ui/icons\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport { Month } from \"../../../enums\";\r\nimport DayTreeItem from \"./DayTreeItem\";\r\n\r\ntype MonthlyTreeProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst MonthlyTree = (props: MonthlyTreeProps) => {\r\n  const { monthlyLoadProfile } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultExpanded={[\"1\"]}\r\n      defaultCollapseIcon={<ArrowDownward />}\r\n      defaultExpandIcon={<ArrowRight />}\r\n      defaultEndIcon={<div style={{ width: 24 }} />}\r\n    >\r\n      <StyledTreeItem\r\n        nodeId=\"1\"\r\n        labelText={`${Month[monthlyLoadProfile.billingPeriod.month - 1]} ${\r\n          monthlyLoadProfile.billingPeriod.year\r\n        }`}\r\n        labelIcon={CalendarToday}\r\n      >\r\n        {[...monthlyLoadProfile.dateStrings.values()].map((dateString) => {\r\n          let loadProfiles = [\r\n            ...Array.from(monthlyLoadProfile.loadProfiles.values()),\r\n          ];\r\n          let key = `DTI:D:${dateString}`;\r\n          return (\r\n            <DayTreeItem\r\n              totalLoadProfile={monthlyLoadProfile.totalLoadpRofile}\r\n              key={key}\r\n              nodeId={key}\r\n              loadProfiles={loadProfiles}\r\n              dateString={dateString}\r\n            />\r\n          );\r\n        })}\r\n      </StyledTreeItem>\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      fontSize: \"1rem\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n    },\r\n    title: {\r\n      fontSize: \"1.5em\",\r\n    },\r\n    dayTree: {\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyTree;\r\n","import { MonthlyLoadProfile, DailyLoadProfile } from \"./objects\";\r\nimport XLSX from \"xlsx\";\r\n\r\nfunction generateMonthlyLoadProfileXlsx(\r\n  monthlyLoadProfile: MonthlyLoadProfile\r\n) {\r\n  let workbook = XLSX.utils.book_new();\r\n  let worksheetName = `${monthlyLoadProfile.billingPeriod.toString()}`;\r\n  let worksheetData = generateSheetData(monthlyLoadProfile);\r\n  let worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, worksheetName);\r\n  XLSX.writeFile(\r\n    workbook,\r\n    `Monthly LoadProfile Report of ${monthlyLoadProfile.billingPeriod.toString()}.xlsx`\r\n  );\r\n}\r\n\r\nfunction generateSheetData(monthlyLoadProfile: MonthlyLoadProfile) {\r\n  let data = [];\r\n  let start = monthlyLoadProfile.billingPeriod.startDate;\r\n  let end = monthlyLoadProfile.billingPeriod.enddDate;\r\n  console.log(\r\n    `start date: ${start.toLocaleDateString()} endDate: ${end.toLocaleDateString()}`\r\n  );\r\n\r\n  //---------CREATING HEADERS-------------\r\n\r\n  let header = [\"Date\", \"Hour\"];\r\n  for (let loadProfile of monthlyLoadProfile.loadProfiles.values()) {\r\n    header.push(loadProfile.meteringPoint);\r\n  }\r\n  header.push(\"Total\");\r\n\r\n  //----------CONTENT----------------\r\n  data.push(header);\r\n  while (start <= end) {\r\n    let dateString = `${\r\n      start.getMonth() + 1\r\n    }/${start.getDate()}/${start.getFullYear()}`;\r\n\r\n    for (let hour = 0; hour < 24; hour++) {\r\n      let row: string[] = [];\r\n      row.push(dateString);\r\n\r\n      row.push(hour.toString());\r\n      for (let loadProfile of monthlyLoadProfile.loadProfiles.values()) {\r\n        let dailyLoadProfile =\r\n          loadProfile.dailyLoadProfiles.get(dateString) ||\r\n          new DailyLoadProfile(new Date(dateString));\r\n        row.push(\r\n          dailyLoadProfile.hourlyLoadProfiles[hour].getTotalKwdel().toFixed(2)\r\n        );\r\n      }\r\n\r\n      let dailyLoadProfile =\r\n        monthlyLoadProfile.totalLoadpRofile.dailyLoadProfiles.get(dateString) ||\r\n        new DailyLoadProfile(new Date(dateString));\r\n      row.push(\r\n        dailyLoadProfile.hourlyLoadProfiles[hour].getRawTotal().toFixed(2)\r\n      );\r\n      console.log(row);\r\n      data.push(row);\r\n    }\r\n    start.setDate(start.getDate() + 1);\r\n  }\r\n\r\n  console.log(data);\r\n  return data;\r\n}\r\n\r\nexport default generateMonthlyLoadProfileXlsx;\r\n","import { createStyles, makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, ReactComponentElement } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport { MonthlyLoadProfile } from \"../../loadprofile/objects\";\r\nimport MonthlyCard from \"./data/MonthlyCard\";\r\nimport LoadProfileGraph from \"./graph/LoadProfileGraph\";\r\n\r\ntype LoadProfileContentProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n  index: string;\r\n  value: string;\r\n};\r\n\r\nenum DataTab {\r\n  DATA = \"data\",\r\n  GRAPH = \"graph\",\r\n  NONE = \"\",\r\n}\r\n\r\ntype TabPanelProps = {\r\n  monthlyLoadpRofile: MonthlyLoadProfile;\r\n  value: string;\r\n  index: string;\r\n  children: any;\r\n};\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { monthlyLoadpRofile, value, index, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return value === index ? (\r\n    <div className={classes.loadProfileContent_tabPanel}>{children}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst LoadProfileContent: React.FunctionComponent<LoadProfileContentProps> = (\r\n  props\r\n) => {\r\n  const { monthlyLoadProfile, index, value } = props;\r\n  const [selectedTab, setSelectedTab] = useState<string>(DataTab.DATA);\r\n  const classes = useStyles();\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return index === value ? (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          <HorizontalTab label=\"Data\" value={DataTab.DATA} />\r\n          <HorizontalTab label=\"Graph\" value={DataTab.GRAPH} />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel\r\n        index={DataTab.DATA}\r\n        value={selectedTab}\r\n        monthlyLoadpRofile={monthlyLoadProfile}\r\n      >\r\n        <MonthlyCard monthlyLoadProfile={monthlyLoadProfile} />\r\n      </TabPanel>\r\n      <TabPanel\r\n        index={DataTab.GRAPH}\r\n        value={selectedTab}\r\n        monthlyLoadpRofile={monthlyLoadProfile}\r\n      >\r\n        <LoadProfileGraph monthlyLoadProfile={monthlyLoadProfile} />\r\n      </TabPanel>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    loadProfileContent_root: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    loadProfileContent_tabPanel: {\r\n      flex: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileContent;\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { GetAppRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\nimport DetailsTree from \"./DetailsTree\";\r\nimport MonthlyTree from \"./MonthlyTree\";\r\nimport generateLoadProfileExcel from \"../../../loadprofile/ExcelGenerator\";\r\n\r\ntype MonthlyCardProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst MonthlyCard: React.FunctionComponent<MonthlyCardProps> = (props) => {\r\n  const { monthlyLoadProfile } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleDownloadClick() {\r\n    generateLoadProfileExcel(monthlyLoadProfile);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.monthlyCard_root}>\r\n      <div className={classes.monthlyCard_paper}>\r\n        <div className={classes.monthlyCard_paperAction}>\r\n          <Button\r\n            onClick={handleDownloadClick}\r\n            className={classes.downloadBtn}\r\n            size=\"small\"\r\n            startIcon={<GetAppRounded />}\r\n          >\r\n            download\r\n          </Button>\r\n        </div>\r\n        <div className={classes.monthlyCard_paperContent}>\r\n          <MonthlyTree monthlyLoadProfile={monthlyLoadProfile} />\r\n          <DetailsTree monthlyLoadProfile={monthlyLoadProfile} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    monthlyCard_root: {\r\n      display: \"inline-flex\",\r\n      boxSizing: \"border-box\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    monthlyCard_paper: {\r\n      flexGrow: 0,\r\n      flexShrink: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: theme.shape.borderRadius,\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      boxSizing: \"border-box\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    monthlyCard_paperAction: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    monthlyCard_paperContent: {\r\n      display: \"flex\",\r\n      flexShrink: 0,\r\n    },\r\n    downloadBtn: {\r\n      fontSize: \"14px\",\r\n      textTransform: \"none\",\r\n      fontWeight: \"lighter\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default MonthlyCard;\r\n","import { AreaSeries, ArgumentScale, Stack } from \"@devexpress/dx-react-chart\";\r\nimport { scaleBand } from \"@devexpress/dx-chart-core\";\r\nimport {\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Chart,\r\n  LineSeries,\r\n  Legend,\r\n  Title,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\n\r\nimport { createStyles, makeStyles, Paper, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { MonthlyLoadProfile } from \"../../../loadprofile/objects\";\r\n\r\ntype LoadProfileGraphProps = {\r\n  monthlyLoadProfile: MonthlyLoadProfile;\r\n};\r\n\r\nconst LoadProfileGraph: React.FunctionComponent<LoadProfileGraphProps> = (\r\n  props\r\n) => {\r\n  const { monthlyLoadProfile, ...others } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.graphContent}>\r\n      <Chart data={[...monthlyLoadProfile.chartData.values()]}>\r\n        <ArgumentScale factory={scaleBand} />\r\n        <ArgumentAxis showGrid />\r\n        <ValueAxis showGrid />\r\n        {[...monthlyLoadProfile.loadProfiles.values()].map((data) => {\r\n          return (\r\n            <LineSeries\r\n              valueField={data.meteringPoint}\r\n              argumentField=\"date\"\r\n              name={data.meteringPoint}\r\n            />\r\n          );\r\n        })}\r\n        <Stack />\r\n        <Legend />\r\n        <Title\r\n          text={`Billing Period: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    graphContent: {\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default LoadProfileGraph;\r\n","import { makeStyles, Tabs, Theme } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { VerticalTab } from \"../common/components/tabs\";\r\nimport LoadProfileTabPanel from \"./loadprofile/LoadProfileTabPanel\";\r\ntype MainContentProps = {};\r\n\r\nenum ContentTabs {\r\n  LOAD_PROFILE = \"lp\",\r\n  SUBSTATION_LOSS = \"ssl\",\r\n  FEEDERDEMAND_OUTAGED = \"fdo\",\r\n  POWER_BILL = \"pbl\",\r\n  POWER_SUBSTATION = \"psb\",\r\n}\r\n\r\nconst MainContent: React.FunctionComponent<MainContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\r\n    ContentTabs.LOAD_PROFILE\r\n  );\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.maincontent_root}>\r\n      <div className={classes.tabs_container}>\r\n        <Tabs\r\n          className={classes.tabs}\r\n          orientation=\"vertical\"\r\n          value={selectedTab}\r\n          centered={false}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n        >\r\n          <VerticalTab label=\"Load Profile\" value={ContentTabs.LOAD_PROFILE} />\r\n          <VerticalTab label=\"Power Bill\" value={ContentTabs.POWER_BILL} />\r\n          <VerticalTab\r\n            label=\"Feeder Demand and Outages\"\r\n            value={ContentTabs.FEEDERDEMAND_OUTAGED}\r\n          />\r\n          <VerticalTab\r\n            label=\"Substation Loss\"\r\n            value={ContentTabs.SUBSTATION_LOSS}\r\n          />\r\n          <VerticalTab\r\n            label=\"Power Substation\"\r\n            value={ContentTabs.POWER_SUBSTATION}\r\n          />\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.mainContent_content}>\r\n        {selectedTab === ContentTabs.LOAD_PROFILE && <LoadProfileTabPanel />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  maincontent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n  },\r\n  tabs_container: {\r\n    marginTop: theme.spacing(12),\r\n    maxWidth: \"300px\",\r\n    flexGrow: 0,\r\n  },\r\n  tabs: {\r\n    display: \"inline-block\",\r\n  },\r\n  mainContent_content: {\r\n    flex: 1,\r\n    width: 0,\r\n  },\r\n}));\r\n\r\nexport default MainContent;\r\n","import { makeStyles, Tabs, Theme, Typography } from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useContext, useState } from \"react\";\r\nimport { HorizontalTab } from \"../../common/components/tabs\";\r\nimport { LoadProfileContext } from \"../../loadprofile/LoadProfileContextProvider\";\r\nimport LoadProfileContent from \"./LoadProfileContent\";\r\nimport { MonthlyLoadProfile } from \"../../loadprofile/objects\";\r\n\r\ntype LoadProfileContentProps = {};\r\n\r\nconst LoadProfileTabPanel: React.FunctionComponent<LoadProfileContentProps> = ({\r\n  ...others\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"\");\r\n  const loadProfileContext = useContext(LoadProfileContext);\r\n\r\n  function handleTabChange(event: ChangeEvent<{}>, newTab: string) {\r\n    setSelectedTab(newTab);\r\n  }\r\n  return (\r\n    <div className={classes.loadProfileContent_root}>\r\n      <div className={classes.loadProfileContent_Header}>\r\n        <Typography className={classes.loadProfileContent_Title} variant=\"h5\">\r\n          Load Profile\r\n        </Typography>\r\n        <Tabs\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          value={selectedTab}\r\n        >\r\n          {[...loadProfileContext.monthlyLoadProfiles.values()].map(\r\n            (monthlyLoadProfile) => {\r\n              return (\r\n                <HorizontalTab\r\n                  label={monthlyLoadProfile.billingPeriod.toString()}\r\n                  value={monthlyLoadProfile.billingPeriod.toString()}\r\n                  key={`T: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.loadProfileContent_contentWrapper}>\r\n        <div className={classes.loadProfileContent_content}>\r\n          {[...loadProfileContext.monthlyLoadProfiles.values()].map(\r\n            (monthlyLoadProfile) => {\r\n              return (\r\n                <LoadProfileContent\r\n                  key={`C: ${monthlyLoadProfile.billingPeriod.toString()}`}\r\n                  monthlyLoadProfile={monthlyLoadProfile}\r\n                  value={selectedTab}\r\n                  index={monthlyLoadProfile.billingPeriod.toString()}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadProfileContent_root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"0px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  loadProfileContent_Header: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  loadProfileContent_Title: {\r\n    marginRight: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n    textAlign: \"center\",\r\n  },\r\n  loadProfileContent_contentWrapper: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  loadProfileContent_content: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default LoadProfileTabPanel;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Toolbar from \"../toolbar\";\r\nimport FilesDrawer, { useStyles as filesDrawerStyles } from \"../filesdrawer\";\r\nimport clsx from \"clsx\";\r\nimport Settings from \"../settings\";\r\nimport { MainContent } from \"../maincontent\";\r\nimport { makeStyles, Theme } from \"@material-ui/core\";\r\ntype DashboardProps = {};\r\n\r\nconst Dashboard: React.FC<DashboardProps> = (props) => {\r\n  const classes = useStyles();\r\n  const filesDrawerClasses = filesDrawerStyles();\r\n\r\n  const [openFilesDrawer, setOpenFilesDrawer] = useState<boolean>(true);\r\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\r\n\r\n  function handleSettingsToggle() {\r\n    setOpenSettings(true);\r\n  }\r\n\r\n  function handleSettingsUntoggle() {\r\n    setOpenSettings(false);\r\n  }\r\n\r\n  function handleFilesToggle() {\r\n    setOpenFilesDrawer(true);\r\n  }\r\n\r\n  function handleFilesUntoggle() {\r\n    setOpenFilesDrawer(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dashboard_root}>\r\n      <Toolbar\r\n        onSettingsToggled={handleSettingsToggle}\r\n        onSettingsUntoggled={handleSettingsUntoggle}\r\n        onFilesToggled={handleFilesToggle}\r\n        onFilesUntoggled={handleFilesUntoggle}\r\n      />\r\n      <FilesDrawer open={openFilesDrawer} />\r\n      <div\r\n        className={clsx(classes.dashboard_content, filesDrawerClasses.content, {\r\n          [filesDrawerClasses.contentShift]: openFilesDrawer,\r\n        })}\r\n      >\r\n        {openSettings && <Settings />}\r\n        <MainContent />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  dashboard_root: {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n  },\r\n  dashboard_content: {\r\n    flex: 1,\r\n    position: \"relative\",\r\n    minHeight: \"0px\",\r\n    width: 0,\r\n  },\r\n}));\r\n\r\nexport default Dashboard;\r\n","import Dashboard from \"./Dashboard\";\r\n\r\nexport default Dashboard;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  ThemeProvider,\r\n  Box,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport LoadProfileContextProvider from \"./loadprofile/LoadProfileContextProvider\";\r\nimport Dashboard from \"./dashboard\";\r\nimport clsx from \"clsx\";\r\n\r\ntype AppProps = {};\r\n\r\nconst App: FunctionComponent<AppProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <LoadProfileContextProvider>\r\n          <div className={clsx(classes.root)}>\r\n            <Dashboard />\r\n          </div>\r\n        </LoadProfileContextProvider>\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n}));\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Fragment>\n      <App />\n    </React.Fragment>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}